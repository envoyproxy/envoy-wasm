syntax = "proto3";

package envoy.service.endpoint.v3alpha;

import "envoy/service/discovery/v3alpha/discovery.proto";

import "google/api/annotations.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/wrappers.proto";

import "udpa/annotations/versioning.proto";

import "envoy/annotations/resource.proto";
import "validate/validate.proto";

option java_package = "io.envoyproxy.envoy.service.endpoint.v3alpha";
option java_outer_classname = "EdsProto";
option java_multiple_files = true;
option java_generic_services = true;

// [#protodoc-title: EDS]
// Endpoint discovery :ref:`architecture overview <arch_overview_service_discovery_types_eds>`

service EndpointDiscoveryService {
  option (envoy.annotations.resource).type = "envoy.config.endpoint.v3alpha.ClusterLoadAssignment";

  // The resource_names field in DiscoveryRequest specifies a list of clusters
  // to subscribe to updates for.
  rpc StreamEndpoints(stream discovery.v3alpha.DiscoveryRequest)
      returns (stream discovery.v3alpha.DiscoveryResponse) {
  }

  rpc DeltaEndpoints(stream discovery.v3alpha.DeltaDiscoveryRequest)
      returns (stream discovery.v3alpha.DeltaDiscoveryResponse) {
  }

  rpc FetchEndpoints(discovery.v3alpha.DiscoveryRequest)
      returns (discovery.v3alpha.DiscoveryResponse) {
    option (google.api.http).post = "/v3alpha/discovery:endpoints";
    option (google.api.http).body = "*";
  }
}

// [#not-implemented-hide:] Not configuration. Workaround c++ protobuf issue with importing
// services: https://github.com/google/protobuf/issues/4221 and protoxform to upgrade the file.
message EdsDummy {
  option (udpa.annotations.versioning).previous_message_type = "envoy.api.v2.EdsDummy";
}
