mergeInto(LibraryManager.library, {
    proxy_log: function () {},
    proxy_setTickPeriodMilliseconds: function () {},
    proxy_getCurrentTimeNanoseconds: function() {},
    proxy_getProperty: function () {},
    proxy_setProperty: function () {},
    proxy_continueRequest: function () {},
    proxy_continueResponse: function () {},
    proxy_clearRouteCache: function () {},
    proxy_addHeaderMapValue: function () {},
    proxy_getHeaderMapValue: function () {},
    proxy_getHeaderMapPairs: function () {},
    proxy_getHeaderMapSize: function () {},
    proxy_getSharedData: function () {},
    proxy_setSharedData: function () {},
    proxy_registerSharedQueue: function () {},
    proxy_resolveSharedQueue: function () {},
    proxy_enqueueSharedQueue: function () {},
    proxy_dequeueSharedQueue: function () {},
    proxy_replaceHeaderMapValue: function () {},
    proxy_removeHeaderMapValue: function () {},
    proxy_getRequestBodyBufferBytes: function () {},
    proxy_getResponseBodyBufferBytes: function () {},
    proxy_httpCall: function () {},
    proxy_defineMetric: function () {},
    proxy_incrementMetric: function () {},
    proxy_recordMetric: function () {},
    proxy_getMetric: function () {},
    proxy_grpcCall : function () {},
    proxy_grpcStream : function () {},
    proxy_grpcSend : function () {},
    proxy_grpcClose : function () {},
    proxy_grpcCancel : function () {},
    proxy_sendLocalResponse : function () {},
    proxy_setEffectiveContext : function () {},
});
