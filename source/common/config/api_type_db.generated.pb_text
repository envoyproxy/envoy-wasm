types {
  key: "envoy.admin.v2alpha.BootstrapConfigDump"
  value {
    qualified_package: "envoy.admin.v2alpha"
    proto_path: "envoy/admin/v2alpha/config_dump.proto"
    next_version_type_name: "envoy.admin.v3alpha.BootstrapConfigDump"
  }
}
types {
  key: "envoy.admin.v2alpha.Certificate"
  value {
    qualified_package: "envoy.admin.v2alpha"
    proto_path: "envoy/admin/v2alpha/certs.proto"
    next_version_type_name: "envoy.admin.v3alpha.Certificate"
  }
}
types {
  key: "envoy.admin.v2alpha.CertificateDetails"
  value {
    qualified_package: "envoy.admin.v2alpha"
    proto_path: "envoy/admin/v2alpha/certs.proto"
    next_version_type_name: "envoy.admin.v3alpha.CertificateDetails"
  }
}
types {
  key: "envoy.admin.v2alpha.Certificates"
  value {
    qualified_package: "envoy.admin.v2alpha"
    proto_path: "envoy/admin/v2alpha/certs.proto"
    next_version_type_name: "envoy.admin.v3alpha.Certificates"
  }
}
types {
  key: "envoy.admin.v2alpha.ClusterStatus"
  value {
    qualified_package: "envoy.admin.v2alpha"
    proto_path: "envoy/admin/v2alpha/clusters.proto"
    next_version_type_name: "envoy.admin.v3alpha.ClusterStatus"
  }
}
types {
  key: "envoy.admin.v2alpha.Clusters"
  value {
    qualified_package: "envoy.admin.v2alpha"
    proto_path: "envoy/admin/v2alpha/clusters.proto"
    next_version_type_name: "envoy.admin.v3alpha.Clusters"
  }
}
types {
  key: "envoy.admin.v2alpha.ClustersConfigDump"
  value {
    qualified_package: "envoy.admin.v2alpha"
    proto_path: "envoy/admin/v2alpha/config_dump.proto"
    next_version_type_name: "envoy.admin.v3alpha.ClustersConfigDump"
  }
}
types {
  key: "envoy.admin.v2alpha.ClustersConfigDump.DynamicCluster"
  value {
    qualified_package: "envoy.admin.v2alpha"
    proto_path: "envoy/admin/v2alpha/config_dump.proto"
    next_version_type_name: "envoy.admin.v3alpha.ClustersConfigDump.DynamicCluster"
  }
}
types {
  key: "envoy.admin.v2alpha.ClustersConfigDump.StaticCluster"
  value {
    qualified_package: "envoy.admin.v2alpha"
    proto_path: "envoy/admin/v2alpha/config_dump.proto"
    next_version_type_name: "envoy.admin.v3alpha.ClustersConfigDump.StaticCluster"
  }
}
types {
  key: "envoy.admin.v2alpha.CommandLineOptions"
  value {
    qualified_package: "envoy.admin.v2alpha"
    proto_path: "envoy/admin/v2alpha/server_info.proto"
    next_version_type_name: "envoy.admin.v3alpha.CommandLineOptions"
  }
}
types {
  key: "envoy.admin.v2alpha.CommandLineOptions.IpVersion"
  value {
    qualified_package: "envoy.admin.v2alpha"
    proto_path: "envoy/admin/v2alpha/server_info.proto"
    next_version_type_name: "envoy.admin.v3alpha.CommandLineOptions.IpVersion"
  }
}
types {
  key: "envoy.admin.v2alpha.CommandLineOptions.Mode"
  value {
    qualified_package: "envoy.admin.v2alpha"
    proto_path: "envoy/admin/v2alpha/server_info.proto"
    next_version_type_name: "envoy.admin.v3alpha.CommandLineOptions.Mode"
  }
}
types {
  key: "envoy.admin.v2alpha.ConfigDump"
  value {
    qualified_package: "envoy.admin.v2alpha"
    proto_path: "envoy/admin/v2alpha/config_dump.proto"
    next_version_type_name: "envoy.admin.v3alpha.ConfigDump"
  }
}
types {
  key: "envoy.admin.v2alpha.HostHealthStatus"
  value {
    qualified_package: "envoy.admin.v2alpha"
    proto_path: "envoy/admin/v2alpha/clusters.proto"
    next_version_type_name: "envoy.admin.v3alpha.HostHealthStatus"
  }
}
types {
  key: "envoy.admin.v2alpha.HostStatus"
  value {
    qualified_package: "envoy.admin.v2alpha"
    proto_path: "envoy/admin/v2alpha/clusters.proto"
    next_version_type_name: "envoy.admin.v3alpha.HostStatus"
  }
}
types {
  key: "envoy.admin.v2alpha.ListenerStatus"
  value {
    qualified_package: "envoy.admin.v2alpha"
    proto_path: "envoy/admin/v2alpha/listeners.proto"
    next_version_type_name: "envoy.admin.v3alpha.ListenerStatus"
  }
}
types {
  key: "envoy.admin.v2alpha.Listeners"
  value {
    qualified_package: "envoy.admin.v2alpha"
    proto_path: "envoy/admin/v2alpha/listeners.proto"
    next_version_type_name: "envoy.admin.v3alpha.Listeners"
  }
}
types {
  key: "envoy.admin.v2alpha.ListenersConfigDump"
  value {
    qualified_package: "envoy.admin.v2alpha"
    proto_path: "envoy/admin/v2alpha/config_dump.proto"
    next_version_type_name: "envoy.admin.v3alpha.ListenersConfigDump"
  }
}
types {
  key: "envoy.admin.v2alpha.ListenersConfigDump.DynamicListener"
  value {
    qualified_package: "envoy.admin.v2alpha"
    proto_path: "envoy/admin/v2alpha/config_dump.proto"
    next_version_type_name: "envoy.admin.v3alpha.ListenersConfigDump.DynamicListener"
  }
}
types {
  key: "envoy.admin.v2alpha.ListenersConfigDump.StaticListener"
  value {
    qualified_package: "envoy.admin.v2alpha"
    proto_path: "envoy/admin/v2alpha/config_dump.proto"
    next_version_type_name: "envoy.admin.v3alpha.ListenersConfigDump.StaticListener"
  }
}
types {
  key: "envoy.admin.v2alpha.Memory"
  value {
    qualified_package: "envoy.admin.v2alpha"
    proto_path: "envoy/admin/v2alpha/memory.proto"
    next_version_type_name: "envoy.admin.v3alpha.Memory"
  }
}
types {
  key: "envoy.admin.v2alpha.MutexStats"
  value {
    qualified_package: "envoy.admin.v2alpha"
    proto_path: "envoy/admin/v2alpha/mutex_stats.proto"
    next_version_type_name: "envoy.admin.v3alpha.MutexStats"
  }
}
types {
  key: "envoy.admin.v2alpha.RoutesConfigDump"
  value {
    qualified_package: "envoy.admin.v2alpha"
    proto_path: "envoy/admin/v2alpha/config_dump.proto"
    next_version_type_name: "envoy.admin.v3alpha.RoutesConfigDump"
  }
}
types {
  key: "envoy.admin.v2alpha.RoutesConfigDump.DynamicRouteConfig"
  value {
    qualified_package: "envoy.admin.v2alpha"
    proto_path: "envoy/admin/v2alpha/config_dump.proto"
    next_version_type_name: "envoy.admin.v3alpha.RoutesConfigDump.DynamicRouteConfig"
  }
}
types {
  key: "envoy.admin.v2alpha.RoutesConfigDump.StaticRouteConfig"
  value {
    qualified_package: "envoy.admin.v2alpha"
    proto_path: "envoy/admin/v2alpha/config_dump.proto"
    next_version_type_name: "envoy.admin.v3alpha.RoutesConfigDump.StaticRouteConfig"
  }
}
types {
  key: "envoy.admin.v2alpha.ScopedRoutesConfigDump"
  value {
    qualified_package: "envoy.admin.v2alpha"
    proto_path: "envoy/admin/v2alpha/config_dump.proto"
    next_version_type_name: "envoy.admin.v3alpha.ScopedRoutesConfigDump"
  }
}
types {
  key: "envoy.admin.v2alpha.ScopedRoutesConfigDump.DynamicScopedRouteConfigs"
  value {
    qualified_package: "envoy.admin.v2alpha"
    proto_path: "envoy/admin/v2alpha/config_dump.proto"
    next_version_type_name: "envoy.admin.v3alpha.ScopedRoutesConfigDump.DynamicScopedRouteConfigs"
  }
}
types {
  key: "envoy.admin.v2alpha.ScopedRoutesConfigDump.InlineScopedRouteConfigs"
  value {
    qualified_package: "envoy.admin.v2alpha"
    proto_path: "envoy/admin/v2alpha/config_dump.proto"
    next_version_type_name: "envoy.admin.v3alpha.ScopedRoutesConfigDump.InlineScopedRouteConfigs"
  }
}
types {
  key: "envoy.admin.v2alpha.SecretsConfigDump"
  value {
    qualified_package: "envoy.admin.v2alpha"
    proto_path: "envoy/admin/v2alpha/config_dump.proto"
    next_version_type_name: "envoy.admin.v3alpha.SecretsConfigDump"
  }
}
types {
  key: "envoy.admin.v2alpha.SecretsConfigDump.DynamicSecret"
  value {
    qualified_package: "envoy.admin.v2alpha"
    proto_path: "envoy/admin/v2alpha/config_dump.proto"
    next_version_type_name: "envoy.admin.v3alpha.SecretsConfigDump.DynamicSecret"
  }
}
types {
  key: "envoy.admin.v2alpha.SecretsConfigDump.StaticSecret"
  value {
    qualified_package: "envoy.admin.v2alpha"
    proto_path: "envoy/admin/v2alpha/config_dump.proto"
    next_version_type_name: "envoy.admin.v3alpha.SecretsConfigDump.StaticSecret"
  }
}
types {
  key: "envoy.admin.v2alpha.ServerInfo"
  value {
    qualified_package: "envoy.admin.v2alpha"
    proto_path: "envoy/admin/v2alpha/server_info.proto"
    next_version_type_name: "envoy.admin.v3alpha.ServerInfo"
  }
}
types {
  key: "envoy.admin.v2alpha.ServerInfo.State"
  value {
    qualified_package: "envoy.admin.v2alpha"
    proto_path: "envoy/admin/v2alpha/server_info.proto"
    next_version_type_name: "envoy.admin.v3alpha.ServerInfo.State"
  }
}
types {
  key: "envoy.admin.v2alpha.SimpleMetric"
  value {
    qualified_package: "envoy.admin.v2alpha"
    proto_path: "envoy/admin/v2alpha/metrics.proto"
    next_version_type_name: "envoy.admin.v3alpha.SimpleMetric"
  }
}
types {
  key: "envoy.admin.v2alpha.SimpleMetric.Type"
  value {
    qualified_package: "envoy.admin.v2alpha"
    proto_path: "envoy/admin/v2alpha/metrics.proto"
    next_version_type_name: "envoy.admin.v3alpha.SimpleMetric.Type"
  }
}
types {
  key: "envoy.admin.v2alpha.SubjectAlternateName"
  value {
    qualified_package: "envoy.admin.v2alpha"
    proto_path: "envoy/admin/v2alpha/certs.proto"
    next_version_type_name: "envoy.admin.v3alpha.SubjectAlternateName"
  }
}
types {
  key: "envoy.admin.v2alpha.TapRequest"
  value {
    qualified_package: "envoy.admin.v2alpha"
    proto_path: "envoy/admin/v2alpha/tap.proto"
    next_version_type_name: "envoy.admin.v3alpha.TapRequest"
  }
}
types {
  key: "envoy.admin.v3alpha.BootstrapConfigDump"
  value {
    qualified_package: "envoy.admin.v3alpha"
    proto_path: "envoy/admin/v3alpha/config_dump.proto"
  }
}
types {
  key: "envoy.admin.v3alpha.Certificate"
  value {
    qualified_package: "envoy.admin.v3alpha"
    proto_path: "envoy/admin/v3alpha/certs.proto"
  }
}
types {
  key: "envoy.admin.v3alpha.CertificateDetails"
  value {
    qualified_package: "envoy.admin.v3alpha"
    proto_path: "envoy/admin/v3alpha/certs.proto"
  }
}
types {
  key: "envoy.admin.v3alpha.Certificates"
  value {
    qualified_package: "envoy.admin.v3alpha"
    proto_path: "envoy/admin/v3alpha/certs.proto"
  }
}
types {
  key: "envoy.admin.v3alpha.ClusterStatus"
  value {
    qualified_package: "envoy.admin.v3alpha"
    proto_path: "envoy/admin/v3alpha/clusters.proto"
  }
}
types {
  key: "envoy.admin.v3alpha.Clusters"
  value {
    qualified_package: "envoy.admin.v3alpha"
    proto_path: "envoy/admin/v3alpha/clusters.proto"
  }
}
types {
  key: "envoy.admin.v3alpha.ClustersConfigDump"
  value {
    qualified_package: "envoy.admin.v3alpha"
    proto_path: "envoy/admin/v3alpha/config_dump.proto"
  }
}
types {
  key: "envoy.admin.v3alpha.ClustersConfigDump.DynamicCluster"
  value {
    qualified_package: "envoy.admin.v3alpha"
    proto_path: "envoy/admin/v3alpha/config_dump.proto"
  }
}
types {
  key: "envoy.admin.v3alpha.ClustersConfigDump.StaticCluster"
  value {
    qualified_package: "envoy.admin.v3alpha"
    proto_path: "envoy/admin/v3alpha/config_dump.proto"
  }
}
types {
  key: "envoy.admin.v3alpha.CommandLineOptions"
  value {
    qualified_package: "envoy.admin.v3alpha"
    proto_path: "envoy/admin/v3alpha/server_info.proto"
  }
}
types {
  key: "envoy.admin.v3alpha.CommandLineOptions.IpVersion"
  value {
    qualified_package: "envoy.admin.v3alpha"
    proto_path: "envoy/admin/v3alpha/server_info.proto"
  }
}
types {
  key: "envoy.admin.v3alpha.CommandLineOptions.Mode"
  value {
    qualified_package: "envoy.admin.v3alpha"
    proto_path: "envoy/admin/v3alpha/server_info.proto"
  }
}
types {
  key: "envoy.admin.v3alpha.ConfigDump"
  value {
    qualified_package: "envoy.admin.v3alpha"
    proto_path: "envoy/admin/v3alpha/config_dump.proto"
  }
}
types {
  key: "envoy.admin.v3alpha.HostHealthStatus"
  value {
    qualified_package: "envoy.admin.v3alpha"
    proto_path: "envoy/admin/v3alpha/clusters.proto"
  }
}
types {
  key: "envoy.admin.v3alpha.HostStatus"
  value {
    qualified_package: "envoy.admin.v3alpha"
    proto_path: "envoy/admin/v3alpha/clusters.proto"
  }
}
types {
  key: "envoy.admin.v3alpha.ListenerStatus"
  value {
    qualified_package: "envoy.admin.v3alpha"
    proto_path: "envoy/admin/v3alpha/listeners.proto"
  }
}
types {
  key: "envoy.admin.v3alpha.Listeners"
  value {
    qualified_package: "envoy.admin.v3alpha"
    proto_path: "envoy/admin/v3alpha/listeners.proto"
  }
}
types {
  key: "envoy.admin.v3alpha.ListenersConfigDump"
  value {
    qualified_package: "envoy.admin.v3alpha"
    proto_path: "envoy/admin/v3alpha/config_dump.proto"
  }
}
types {
  key: "envoy.admin.v3alpha.ListenersConfigDump.DynamicListener"
  value {
    qualified_package: "envoy.admin.v3alpha"
    proto_path: "envoy/admin/v3alpha/config_dump.proto"
  }
}
types {
  key: "envoy.admin.v3alpha.ListenersConfigDump.StaticListener"
  value {
    qualified_package: "envoy.admin.v3alpha"
    proto_path: "envoy/admin/v3alpha/config_dump.proto"
  }
}
types {
  key: "envoy.admin.v3alpha.Memory"
  value {
    qualified_package: "envoy.admin.v3alpha"
    proto_path: "envoy/admin/v3alpha/memory.proto"
  }
}
types {
  key: "envoy.admin.v3alpha.MutexStats"
  value {
    qualified_package: "envoy.admin.v3alpha"
    proto_path: "envoy/admin/v3alpha/mutex_stats.proto"
  }
}
types {
  key: "envoy.admin.v3alpha.RoutesConfigDump"
  value {
    qualified_package: "envoy.admin.v3alpha"
    proto_path: "envoy/admin/v3alpha/config_dump.proto"
  }
}
types {
  key: "envoy.admin.v3alpha.RoutesConfigDump.DynamicRouteConfig"
  value {
    qualified_package: "envoy.admin.v3alpha"
    proto_path: "envoy/admin/v3alpha/config_dump.proto"
  }
}
types {
  key: "envoy.admin.v3alpha.RoutesConfigDump.StaticRouteConfig"
  value {
    qualified_package: "envoy.admin.v3alpha"
    proto_path: "envoy/admin/v3alpha/config_dump.proto"
  }
}
types {
  key: "envoy.admin.v3alpha.ScopedRoutesConfigDump"
  value {
    qualified_package: "envoy.admin.v3alpha"
    proto_path: "envoy/admin/v3alpha/config_dump.proto"
  }
}
types {
  key: "envoy.admin.v3alpha.ScopedRoutesConfigDump.DynamicScopedRouteConfigs"
  value {
    qualified_package: "envoy.admin.v3alpha"
    proto_path: "envoy/admin/v3alpha/config_dump.proto"
  }
}
types {
  key: "envoy.admin.v3alpha.ScopedRoutesConfigDump.InlineScopedRouteConfigs"
  value {
    qualified_package: "envoy.admin.v3alpha"
    proto_path: "envoy/admin/v3alpha/config_dump.proto"
  }
}
types {
  key: "envoy.admin.v3alpha.SecretsConfigDump"
  value {
    qualified_package: "envoy.admin.v3alpha"
    proto_path: "envoy/admin/v3alpha/config_dump.proto"
  }
}
types {
  key: "envoy.admin.v3alpha.SecretsConfigDump.DynamicSecret"
  value {
    qualified_package: "envoy.admin.v3alpha"
    proto_path: "envoy/admin/v3alpha/config_dump.proto"
  }
}
types {
  key: "envoy.admin.v3alpha.SecretsConfigDump.StaticSecret"
  value {
    qualified_package: "envoy.admin.v3alpha"
    proto_path: "envoy/admin/v3alpha/config_dump.proto"
  }
}
types {
  key: "envoy.admin.v3alpha.ServerInfo"
  value {
    qualified_package: "envoy.admin.v3alpha"
    proto_path: "envoy/admin/v3alpha/server_info.proto"
  }
}
types {
  key: "envoy.admin.v3alpha.ServerInfo.State"
  value {
    qualified_package: "envoy.admin.v3alpha"
    proto_path: "envoy/admin/v3alpha/server_info.proto"
  }
}
types {
  key: "envoy.admin.v3alpha.SimpleMetric"
  value {
    qualified_package: "envoy.admin.v3alpha"
    proto_path: "envoy/admin/v3alpha/metrics.proto"
  }
}
types {
  key: "envoy.admin.v3alpha.SimpleMetric.Type"
  value {
    qualified_package: "envoy.admin.v3alpha"
    proto_path: "envoy/admin/v3alpha/metrics.proto"
  }
}
types {
  key: "envoy.admin.v3alpha.SubjectAlternateName"
  value {
    qualified_package: "envoy.admin.v3alpha"
    proto_path: "envoy/admin/v3alpha/certs.proto"
  }
}
types {
  key: "envoy.admin.v3alpha.TapRequest"
  value {
    qualified_package: "envoy.admin.v3alpha"
    proto_path: "envoy/admin/v3alpha/tap.proto"
  }
}
types {
  key: "envoy.api.v2.Cluster"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/cds.proto"
    next_version_type_name: "envoy.api.v3alpha.Cluster"
  }
}
types {
  key: "envoy.api.v2.Cluster.ClusterProtocolSelection"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/cds.proto"
    next_version_type_name: "envoy.api.v3alpha.Cluster.ClusterProtocolSelection"
  }
}
types {
  key: "envoy.api.v2.Cluster.CommonLbConfig"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/cds.proto"
    next_version_type_name: "envoy.api.v3alpha.Cluster.CommonLbConfig"
  }
}
types {
  key: "envoy.api.v2.Cluster.CommonLbConfig.LocalityWeightedLbConfig"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/cds.proto"
    next_version_type_name: "envoy.api.v3alpha.Cluster.CommonLbConfig.LocalityWeightedLbConfig"
  }
}
types {
  key: "envoy.api.v2.Cluster.CommonLbConfig.ZoneAwareLbConfig"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/cds.proto"
    next_version_type_name: "envoy.api.v3alpha.Cluster.CommonLbConfig.ZoneAwareLbConfig"
  }
}
types {
  key: "envoy.api.v2.Cluster.CustomClusterType"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/cds.proto"
    next_version_type_name: "envoy.api.v3alpha.Cluster.CustomClusterType"
  }
}
types {
  key: "envoy.api.v2.Cluster.DiscoveryType"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/cds.proto"
    next_version_type_name: "envoy.api.v3alpha.Cluster.DiscoveryType"
  }
}
types {
  key: "envoy.api.v2.Cluster.DnsLookupFamily"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/cds.proto"
    next_version_type_name: "envoy.api.v3alpha.Cluster.DnsLookupFamily"
  }
}
types {
  key: "envoy.api.v2.Cluster.EdsClusterConfig"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/cds.proto"
    next_version_type_name: "envoy.api.v3alpha.Cluster.EdsClusterConfig"
  }
}
types {
  key: "envoy.api.v2.Cluster.ExtensionProtocolOptionsEntry"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/cds.proto"
    next_version_type_name: "envoy.api.v3alpha.Cluster.ExtensionProtocolOptionsEntry"
  }
}
types {
  key: "envoy.api.v2.Cluster.LbPolicy"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/cds.proto"
    next_version_type_name: "envoy.api.v3alpha.Cluster.LbPolicy"
  }
}
types {
  key: "envoy.api.v2.Cluster.LbSubsetConfig"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/cds.proto"
    next_version_type_name: "envoy.api.v3alpha.Cluster.LbSubsetConfig"
  }
}
types {
  key: "envoy.api.v2.Cluster.LbSubsetConfig.LbSubsetFallbackPolicy"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/cds.proto"
    next_version_type_name: "envoy.api.v3alpha.Cluster.LbSubsetConfig.LbSubsetFallbackPolicy"
  }
}
types {
  key: "envoy.api.v2.Cluster.LbSubsetConfig.LbSubsetSelector"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/cds.proto"
    next_version_type_name: "envoy.api.v3alpha.Cluster.LbSubsetConfig.LbSubsetSelector"
  }
}
types {
  key: "envoy.api.v2.Cluster.LbSubsetConfig.LbSubsetSelector.LbSubsetSelectorFallbackPolicy"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/cds.proto"
    next_version_type_name: "envoy.api.v3alpha.Cluster.LbSubsetConfig.LbSubsetSelector.LbSubsetSelectorFallbackPolicy"
  }
}
types {
  key: "envoy.api.v2.Cluster.LeastRequestLbConfig"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/cds.proto"
    next_version_type_name: "envoy.api.v3alpha.Cluster.LeastRequestLbConfig"
  }
}
types {
  key: "envoy.api.v2.Cluster.OriginalDstLbConfig"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/cds.proto"
    next_version_type_name: "envoy.api.v3alpha.Cluster.OriginalDstLbConfig"
  }
}
types {
  key: "envoy.api.v2.Cluster.RefreshRate"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/cds.proto"
    next_version_type_name: "envoy.api.v3alpha.Cluster.RefreshRate"
  }
}
types {
  key: "envoy.api.v2.Cluster.RingHashLbConfig"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/cds.proto"
    next_version_type_name: "envoy.api.v3alpha.Cluster.RingHashLbConfig"
  }
}
types {
  key: "envoy.api.v2.Cluster.RingHashLbConfig.HashFunction"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/cds.proto"
    next_version_type_name: "envoy.api.v3alpha.Cluster.RingHashLbConfig.HashFunction"
  }
}
types {
  key: "envoy.api.v2.Cluster.TransportSocketMatch"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/cds.proto"
    next_version_type_name: "envoy.api.v3alpha.Cluster.TransportSocketMatch"
  }
}
types {
  key: "envoy.api.v2.Cluster.TypedExtensionProtocolOptionsEntry"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/cds.proto"
    next_version_type_name: "envoy.api.v3alpha.Cluster.TypedExtensionProtocolOptionsEntry"
  }
}
types {
  key: "envoy.api.v2.ClusterLoadAssignment"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/eds.proto"
    next_version_type_name: "envoy.api.v3alpha.ClusterLoadAssignment"
  }
}
types {
  key: "envoy.api.v2.ClusterLoadAssignment.NamedEndpointsEntry"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/eds.proto"
    next_version_type_name: "envoy.api.v3alpha.ClusterLoadAssignment.NamedEndpointsEntry"
  }
}
types {
  key: "envoy.api.v2.ClusterLoadAssignment.Policy"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/eds.proto"
    next_version_type_name: "envoy.api.v3alpha.ClusterLoadAssignment.Policy"
  }
}
types {
  key: "envoy.api.v2.ClusterLoadAssignment.Policy.DropOverload"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/eds.proto"
    next_version_type_name: "envoy.api.v3alpha.ClusterLoadAssignment.Policy.DropOverload"
  }
}
types {
  key: "envoy.api.v2.DeltaDiscoveryRequest"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/discovery.proto"
    next_version_type_name: "envoy.api.v3alpha.DeltaDiscoveryRequest"
  }
}
types {
  key: "envoy.api.v2.DeltaDiscoveryRequest.InitialResourceVersionsEntry"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/discovery.proto"
    next_version_type_name: "envoy.api.v3alpha.DeltaDiscoveryRequest.InitialResourceVersionsEntry"
  }
}
types {
  key: "envoy.api.v2.DeltaDiscoveryResponse"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/discovery.proto"
    next_version_type_name: "envoy.api.v3alpha.DeltaDiscoveryResponse"
  }
}
types {
  key: "envoy.api.v2.DiscoveryRequest"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/discovery.proto"
    next_version_type_name: "envoy.api.v3alpha.DiscoveryRequest"
  }
}
types {
  key: "envoy.api.v2.DiscoveryResponse"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/discovery.proto"
    next_version_type_name: "envoy.api.v3alpha.DiscoveryResponse"
  }
}
types {
  key: "envoy.api.v2.Listener"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/lds.proto"
    next_version_type_name: "envoy.api.v3alpha.Listener"
  }
}
types {
  key: "envoy.api.v2.Listener.ConnectionBalanceConfig"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/lds.proto"
    next_version_type_name: "envoy.api.v3alpha.Listener.ConnectionBalanceConfig"
  }
}
types {
  key: "envoy.api.v2.Listener.ConnectionBalanceConfig.ExactBalance"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/lds.proto"
    next_version_type_name: "envoy.api.v3alpha.Listener.ConnectionBalanceConfig.ExactBalance"
  }
}
types {
  key: "envoy.api.v2.Listener.DeprecatedV1"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/lds.proto"
    next_version_type_name: "envoy.api.v3alpha.Listener.DeprecatedV1"
  }
}
types {
  key: "envoy.api.v2.Listener.DrainType"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/lds.proto"
    next_version_type_name: "envoy.api.v3alpha.Listener.DrainType"
  }
}
types {
  key: "envoy.api.v2.LoadBalancingPolicy"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/cds.proto"
    next_version_type_name: "envoy.api.v3alpha.LoadBalancingPolicy"
  }
}
types {
  key: "envoy.api.v2.LoadBalancingPolicy.Policy"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/cds.proto"
    next_version_type_name: "envoy.api.v3alpha.LoadBalancingPolicy.Policy"
  }
}
types {
  key: "envoy.api.v2.Resource"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/discovery.proto"
    next_version_type_name: "envoy.api.v3alpha.Resource"
  }
}
types {
  key: "envoy.api.v2.RouteConfiguration"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/rds.proto"
    next_version_type_name: "envoy.api.v3alpha.RouteConfiguration"
  }
}
types {
  key: "envoy.api.v2.ScopedRouteConfiguration"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/srds.proto"
    next_version_type_name: "envoy.api.v3alpha.ScopedRouteConfiguration"
  }
}
types {
  key: "envoy.api.v2.ScopedRouteConfiguration.Key"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/srds.proto"
    next_version_type_name: "envoy.api.v3alpha.ScopedRouteConfiguration.Key"
  }
}
types {
  key: "envoy.api.v2.ScopedRouteConfiguration.Key.Fragment"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/srds.proto"
    next_version_type_name: "envoy.api.v3alpha.ScopedRouteConfiguration.Key.Fragment"
  }
}
types {
  key: "envoy.api.v2.UpstreamBindConfig"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/cds.proto"
    next_version_type_name: "envoy.api.v3alpha.UpstreamBindConfig"
  }
}
types {
  key: "envoy.api.v2.UpstreamConnectionOptions"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/cds.proto"
    next_version_type_name: "envoy.api.v3alpha.UpstreamConnectionOptions"
  }
}
types {
  key: "envoy.api.v2.Vhds"
  value {
    qualified_package: "envoy.api.v2"
    proto_path: "envoy/api/v2/rds.proto"
    next_version_type_name: "envoy.api.v3alpha.Vhds"
  }
}
types {
  key: "envoy.api.v2.auth.CertificateValidationContext"
  value {
    qualified_package: "envoy.api.v2.auth"
    proto_path: "envoy/api/v2/auth/cert.proto"
    next_version_type_name: "envoy.api.v3alpha.auth.CertificateValidationContext"
  }
}
types {
  key: "envoy.api.v2.auth.CommonTlsContext"
  value {
    qualified_package: "envoy.api.v2.auth"
    proto_path: "envoy/api/v2/auth/cert.proto"
    next_version_type_name: "envoy.api.v3alpha.auth.CommonTlsContext"
  }
}
types {
  key: "envoy.api.v2.auth.CommonTlsContext.CombinedCertificateValidationContext"
  value {
    qualified_package: "envoy.api.v2.auth"
    proto_path: "envoy/api/v2/auth/cert.proto"
    next_version_type_name: "envoy.api.v3alpha.auth.CommonTlsContext.CombinedCertificateValidationContext"
  }
}
types {
  key: "envoy.api.v2.auth.DownstreamTlsContext"
  value {
    qualified_package: "envoy.api.v2.auth"
    proto_path: "envoy/api/v2/auth/cert.proto"
    next_version_type_name: "envoy.api.v3alpha.auth.DownstreamTlsContext"
  }
}
types {
  key: "envoy.api.v2.auth.PrivateKeyProvider"
  value {
    qualified_package: "envoy.api.v2.auth"
    proto_path: "envoy/api/v2/auth/cert.proto"
    next_version_type_name: "envoy.api.v3alpha.auth.PrivateKeyProvider"
  }
}
types {
  key: "envoy.api.v2.auth.SdsSecretConfig"
  value {
    qualified_package: "envoy.api.v2.auth"
    proto_path: "envoy/api/v2/auth/cert.proto"
    next_version_type_name: "envoy.api.v3alpha.auth.SdsSecretConfig"
  }
}
types {
  key: "envoy.api.v2.auth.Secret"
  value {
    qualified_package: "envoy.api.v2.auth"
    proto_path: "envoy/api/v2/auth/cert.proto"
    next_version_type_name: "envoy.api.v3alpha.auth.Secret"
  }
}
types {
  key: "envoy.api.v2.auth.TlsCertificate"
  value {
    qualified_package: "envoy.api.v2.auth"
    proto_path: "envoy/api/v2/auth/cert.proto"
    next_version_type_name: "envoy.api.v3alpha.auth.TlsCertificate"
  }
}
types {
  key: "envoy.api.v2.auth.TlsParameters"
  value {
    qualified_package: "envoy.api.v2.auth"
    proto_path: "envoy/api/v2/auth/cert.proto"
    next_version_type_name: "envoy.api.v3alpha.auth.TlsParameters"
  }
}
types {
  key: "envoy.api.v2.auth.TlsParameters.TlsProtocol"
  value {
    qualified_package: "envoy.api.v2.auth"
    proto_path: "envoy/api/v2/auth/cert.proto"
    next_version_type_name: "envoy.api.v3alpha.auth.TlsParameters.TlsProtocol"
  }
}
types {
  key: "envoy.api.v2.auth.TlsSessionTicketKeys"
  value {
    qualified_package: "envoy.api.v2.auth"
    proto_path: "envoy/api/v2/auth/cert.proto"
    next_version_type_name: "envoy.api.v3alpha.auth.TlsSessionTicketKeys"
  }
}
types {
  key: "envoy.api.v2.auth.UpstreamTlsContext"
  value {
    qualified_package: "envoy.api.v2.auth"
    proto_path: "envoy/api/v2/auth/cert.proto"
    next_version_type_name: "envoy.api.v3alpha.auth.UpstreamTlsContext"
  }
}
types {
  key: "envoy.api.v2.cluster.CircuitBreakers"
  value {
    qualified_package: "envoy.api.v2.cluster"
    proto_path: "envoy/api/v2/cluster/circuit_breaker.proto"
    next_version_type_name: "envoy.api.v3alpha.cluster.CircuitBreakers"
  }
}
types {
  key: "envoy.api.v2.cluster.CircuitBreakers.Thresholds"
  value {
    qualified_package: "envoy.api.v2.cluster"
    proto_path: "envoy/api/v2/cluster/circuit_breaker.proto"
    next_version_type_name: "envoy.api.v3alpha.cluster.CircuitBreakers.Thresholds"
  }
}
types {
  key: "envoy.api.v2.cluster.Filter"
  value {
    qualified_package: "envoy.api.v2.cluster"
    proto_path: "envoy/api/v2/cluster/filter.proto"
    next_version_type_name: "envoy.api.v3alpha.cluster.Filter"
  }
}
types {
  key: "envoy.api.v2.cluster.OutlierDetection"
  value {
    qualified_package: "envoy.api.v2.cluster"
    proto_path: "envoy/api/v2/cluster/outlier_detection.proto"
    next_version_type_name: "envoy.api.v3alpha.cluster.OutlierDetection"
  }
}
types {
  key: "envoy.api.v2.core.Address"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/address.proto"
    next_version_type_name: "envoy.api.v3alpha.core.Address"
  }
}
types {
  key: "envoy.api.v2.core.AggregatedConfigSource"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/config_source.proto"
    next_version_type_name: "envoy.api.v3alpha.core.AggregatedConfigSource"
  }
}
types {
  key: "envoy.api.v2.core.ApiConfigSource"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/config_source.proto"
    next_version_type_name: "envoy.api.v3alpha.core.ApiConfigSource"
  }
}
types {
  key: "envoy.api.v2.core.ApiConfigSource.ApiType"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/config_source.proto"
    next_version_type_name: "envoy.api.v3alpha.core.ApiConfigSource.ApiType"
  }
}
types {
  key: "envoy.api.v2.core.AsyncDataSource"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/base.proto"
    next_version_type_name: "envoy.api.v3alpha.core.AsyncDataSource"
  }
}
types {
  key: "envoy.api.v2.core.BindConfig"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/address.proto"
    next_version_type_name: "envoy.api.v3alpha.core.BindConfig"
  }
}
types {
  key: "envoy.api.v2.core.CidrRange"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/address.proto"
    next_version_type_name: "envoy.api.v3alpha.core.CidrRange"
  }
}
types {
  key: "envoy.api.v2.core.ConfigSource"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/config_source.proto"
    next_version_type_name: "envoy.api.v3alpha.core.ConfigSource"
  }
}
types {
  key: "envoy.api.v2.core.ControlPlane"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/base.proto"
    next_version_type_name: "envoy.api.v3alpha.core.ControlPlane"
  }
}
types {
  key: "envoy.api.v2.core.DataSource"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/base.proto"
    next_version_type_name: "envoy.api.v3alpha.core.DataSource"
  }
}
types {
  key: "envoy.api.v2.core.GrpcProtocolOptions"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/protocol.proto"
    next_version_type_name: "envoy.api.v3alpha.core.GrpcProtocolOptions"
  }
}
types {
  key: "envoy.api.v2.core.GrpcService"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/grpc_service.proto"
    next_version_type_name: "envoy.api.v3alpha.core.GrpcService"
  }
}
types {
  key: "envoy.api.v2.core.GrpcService.EnvoyGrpc"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/grpc_service.proto"
    next_version_type_name: "envoy.api.v3alpha.core.GrpcService.EnvoyGrpc"
  }
}
types {
  key: "envoy.api.v2.core.GrpcService.GoogleGrpc"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/grpc_service.proto"
    next_version_type_name: "envoy.api.v3alpha.core.GrpcService.GoogleGrpc"
  }
}
types {
  key: "envoy.api.v2.core.GrpcService.GoogleGrpc.CallCredentials"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/grpc_service.proto"
    next_version_type_name: "envoy.api.v3alpha.core.GrpcService.GoogleGrpc.CallCredentials"
  }
}
types {
  key: "envoy.api.v2.core.GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/grpc_service.proto"
    next_version_type_name: "envoy.api.v3alpha.core.GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials"
  }
}
types {
  key: "envoy.api.v2.core.GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/grpc_service.proto"
    next_version_type_name: "envoy.api.v3alpha.core.GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin"
  }
}
types {
  key: "envoy.api.v2.core.GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/grpc_service.proto"
    next_version_type_name: "envoy.api.v3alpha.core.GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials"
  }
}
types {
  key: "envoy.api.v2.core.GrpcService.GoogleGrpc.ChannelCredentials"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/grpc_service.proto"
    next_version_type_name: "envoy.api.v3alpha.core.GrpcService.GoogleGrpc.ChannelCredentials"
  }
}
types {
  key: "envoy.api.v2.core.GrpcService.GoogleGrpc.GoogleLocalCredentials"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/grpc_service.proto"
    next_version_type_name: "envoy.api.v3alpha.core.GrpcService.GoogleGrpc.GoogleLocalCredentials"
  }
}
types {
  key: "envoy.api.v2.core.GrpcService.GoogleGrpc.SslCredentials"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/grpc_service.proto"
    next_version_type_name: "envoy.api.v3alpha.core.GrpcService.GoogleGrpc.SslCredentials"
  }
}
types {
  key: "envoy.api.v2.core.HeaderMap"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/base.proto"
    next_version_type_name: "envoy.api.v3alpha.core.HeaderMap"
  }
}
types {
  key: "envoy.api.v2.core.HeaderValue"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/base.proto"
    next_version_type_name: "envoy.api.v3alpha.core.HeaderValue"
  }
}
types {
  key: "envoy.api.v2.core.HeaderValueOption"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/base.proto"
    next_version_type_name: "envoy.api.v3alpha.core.HeaderValueOption"
  }
}
types {
  key: "envoy.api.v2.core.HealthCheck"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/health_check.proto"
    next_version_type_name: "envoy.api.v3alpha.core.HealthCheck"
  }
}
types {
  key: "envoy.api.v2.core.HealthCheck.CustomHealthCheck"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/health_check.proto"
    next_version_type_name: "envoy.api.v3alpha.core.HealthCheck.CustomHealthCheck"
  }
}
types {
  key: "envoy.api.v2.core.HealthCheck.GrpcHealthCheck"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/health_check.proto"
    next_version_type_name: "envoy.api.v3alpha.core.HealthCheck.GrpcHealthCheck"
  }
}
types {
  key: "envoy.api.v2.core.HealthCheck.HttpHealthCheck"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/health_check.proto"
    next_version_type_name: "envoy.api.v3alpha.core.HealthCheck.HttpHealthCheck"
  }
}
types {
  key: "envoy.api.v2.core.HealthCheck.Payload"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/health_check.proto"
    next_version_type_name: "envoy.api.v3alpha.core.HealthCheck.Payload"
  }
}
types {
  key: "envoy.api.v2.core.HealthCheck.RedisHealthCheck"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/health_check.proto"
    next_version_type_name: "envoy.api.v3alpha.core.HealthCheck.RedisHealthCheck"
  }
}
types {
  key: "envoy.api.v2.core.HealthCheck.TcpHealthCheck"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/health_check.proto"
    next_version_type_name: "envoy.api.v3alpha.core.HealthCheck.TcpHealthCheck"
  }
}
types {
  key: "envoy.api.v2.core.HealthStatus"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/health_check.proto"
    next_version_type_name: "envoy.api.v3alpha.core.HealthStatus"
  }
}
types {
  key: "envoy.api.v2.core.Http1ProtocolOptions"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/protocol.proto"
    next_version_type_name: "envoy.api.v3alpha.core.Http1ProtocolOptions"
  }
}
types {
  key: "envoy.api.v2.core.Http2ProtocolOptions"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/protocol.proto"
    next_version_type_name: "envoy.api.v3alpha.core.Http2ProtocolOptions"
  }
}
types {
  key: "envoy.api.v2.core.HttpProtocolOptions"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/protocol.proto"
    next_version_type_name: "envoy.api.v3alpha.core.HttpProtocolOptions"
  }
}
types {
  key: "envoy.api.v2.core.HttpUri"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/http_uri.proto"
    next_version_type_name: "envoy.api.v3alpha.core.HttpUri"
  }
}
types {
  key: "envoy.api.v2.core.Locality"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/base.proto"
    next_version_type_name: "envoy.api.v3alpha.core.Locality"
  }
}
types {
  key: "envoy.api.v2.core.Metadata"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/base.proto"
    next_version_type_name: "envoy.api.v3alpha.core.Metadata"
  }
}
types {
  key: "envoy.api.v2.core.Metadata.FilterMetadataEntry"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/base.proto"
    next_version_type_name: "envoy.api.v3alpha.core.Metadata.FilterMetadataEntry"
  }
}
types {
  key: "envoy.api.v2.core.Node"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/base.proto"
    next_version_type_name: "envoy.api.v3alpha.core.Node"
  }
}
types {
  key: "envoy.api.v2.core.Pipe"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/address.proto"
    next_version_type_name: "envoy.api.v3alpha.core.Pipe"
  }
}
types {
  key: "envoy.api.v2.core.RateLimitSettings"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/config_source.proto"
    next_version_type_name: "envoy.api.v3alpha.core.RateLimitSettings"
  }
}
types {
  key: "envoy.api.v2.core.RemoteDataSource"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/base.proto"
    next_version_type_name: "envoy.api.v3alpha.core.RemoteDataSource"
  }
}
types {
  key: "envoy.api.v2.core.RequestMethod"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/base.proto"
    next_version_type_name: "envoy.api.v3alpha.core.RequestMethod"
  }
}
types {
  key: "envoy.api.v2.core.RoutingPriority"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/base.proto"
    next_version_type_name: "envoy.api.v3alpha.core.RoutingPriority"
  }
}
types {
  key: "envoy.api.v2.core.RuntimeFeatureFlag"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/base.proto"
    next_version_type_name: "envoy.api.v3alpha.core.RuntimeFeatureFlag"
  }
}
types {
  key: "envoy.api.v2.core.RuntimeFractionalPercent"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/base.proto"
    next_version_type_name: "envoy.api.v3alpha.core.RuntimeFractionalPercent"
  }
}
types {
  key: "envoy.api.v2.core.RuntimeUInt32"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/base.proto"
    next_version_type_name: "envoy.api.v3alpha.core.RuntimeUInt32"
  }
}
types {
  key: "envoy.api.v2.core.SelfConfigSource"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/config_source.proto"
    next_version_type_name: "envoy.api.v3alpha.core.SelfConfigSource"
  }
}
types {
  key: "envoy.api.v2.core.SocketAddress"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/address.proto"
    next_version_type_name: "envoy.api.v3alpha.core.SocketAddress"
  }
}
types {
  key: "envoy.api.v2.core.SocketAddress.Protocol"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/address.proto"
    next_version_type_name: "envoy.api.v3alpha.core.SocketAddress.Protocol"
  }
}
types {
  key: "envoy.api.v2.core.SocketOption"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/base.proto"
    next_version_type_name: "envoy.api.v3alpha.core.SocketOption"
  }
}
types {
  key: "envoy.api.v2.core.SocketOption.SocketState"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/base.proto"
    next_version_type_name: "envoy.api.v3alpha.core.SocketOption.SocketState"
  }
}
types {
  key: "envoy.api.v2.core.TcpKeepalive"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/address.proto"
    next_version_type_name: "envoy.api.v3alpha.core.TcpKeepalive"
  }
}
types {
  key: "envoy.api.v2.core.TcpProtocolOptions"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/protocol.proto"
    next_version_type_name: "envoy.api.v3alpha.core.TcpProtocolOptions"
  }
}
types {
  key: "envoy.api.v2.core.TrafficDirection"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/base.proto"
    next_version_type_name: "envoy.api.v3alpha.core.TrafficDirection"
  }
}
types {
  key: "envoy.api.v2.core.TransportSocket"
  value {
    qualified_package: "envoy.api.v2.core"
    proto_path: "envoy/api/v2/core/base.proto"
    next_version_type_name: "envoy.api.v3alpha.core.TransportSocket"
  }
}
types {
  key: "envoy.api.v2.endpoint.ClusterStats"
  value {
    qualified_package: "envoy.api.v2.endpoint"
    proto_path: "envoy/api/v2/endpoint/load_report.proto"
    next_version_type_name: "envoy.api.v3alpha.endpoint.ClusterStats"
  }
}
types {
  key: "envoy.api.v2.endpoint.ClusterStats.DroppedRequests"
  value {
    qualified_package: "envoy.api.v2.endpoint"
    proto_path: "envoy/api/v2/endpoint/load_report.proto"
    next_version_type_name: "envoy.api.v3alpha.endpoint.ClusterStats.DroppedRequests"
  }
}
types {
  key: "envoy.api.v2.endpoint.Endpoint"
  value {
    qualified_package: "envoy.api.v2.endpoint"
    proto_path: "envoy/api/v2/endpoint/endpoint.proto"
    next_version_type_name: "envoy.api.v3alpha.endpoint.Endpoint"
  }
}
types {
  key: "envoy.api.v2.endpoint.Endpoint.HealthCheckConfig"
  value {
    qualified_package: "envoy.api.v2.endpoint"
    proto_path: "envoy/api/v2/endpoint/endpoint.proto"
    next_version_type_name: "envoy.api.v3alpha.endpoint.Endpoint.HealthCheckConfig"
  }
}
types {
  key: "envoy.api.v2.endpoint.EndpointLoadMetricStats"
  value {
    qualified_package: "envoy.api.v2.endpoint"
    proto_path: "envoy/api/v2/endpoint/load_report.proto"
    next_version_type_name: "envoy.api.v3alpha.endpoint.EndpointLoadMetricStats"
  }
}
types {
  key: "envoy.api.v2.endpoint.LbEndpoint"
  value {
    qualified_package: "envoy.api.v2.endpoint"
    proto_path: "envoy/api/v2/endpoint/endpoint.proto"
    next_version_type_name: "envoy.api.v3alpha.endpoint.LbEndpoint"
  }
}
types {
  key: "envoy.api.v2.endpoint.LocalityLbEndpoints"
  value {
    qualified_package: "envoy.api.v2.endpoint"
    proto_path: "envoy/api/v2/endpoint/endpoint.proto"
    next_version_type_name: "envoy.api.v3alpha.endpoint.LocalityLbEndpoints"
  }
}
types {
  key: "envoy.api.v2.endpoint.UpstreamEndpointStats"
  value {
    qualified_package: "envoy.api.v2.endpoint"
    proto_path: "envoy/api/v2/endpoint/load_report.proto"
    next_version_type_name: "envoy.api.v3alpha.endpoint.UpstreamEndpointStats"
  }
}
types {
  key: "envoy.api.v2.endpoint.UpstreamLocalityStats"
  value {
    qualified_package: "envoy.api.v2.endpoint"
    proto_path: "envoy/api/v2/endpoint/load_report.proto"
    next_version_type_name: "envoy.api.v3alpha.endpoint.UpstreamLocalityStats"
  }
}
types {
  key: "envoy.api.v2.listener.Filter"
  value {
    qualified_package: "envoy.api.v2.listener"
    proto_path: "envoy/api/v2/listener/listener.proto"
    next_version_type_name: "envoy.api.v3alpha.listener.Filter"
  }
}
types {
  key: "envoy.api.v2.listener.FilterChain"
  value {
    qualified_package: "envoy.api.v2.listener"
    proto_path: "envoy/api/v2/listener/listener.proto"
    next_version_type_name: "envoy.api.v3alpha.listener.FilterChain"
  }
}
types {
  key: "envoy.api.v2.listener.FilterChainMatch"
  value {
    qualified_package: "envoy.api.v2.listener"
    proto_path: "envoy/api/v2/listener/listener.proto"
    next_version_type_name: "envoy.api.v3alpha.listener.FilterChainMatch"
  }
}
types {
  key: "envoy.api.v2.listener.FilterChainMatch.ConnectionSourceType"
  value {
    qualified_package: "envoy.api.v2.listener"
    proto_path: "envoy/api/v2/listener/listener.proto"
    next_version_type_name: "envoy.api.v3alpha.listener.FilterChainMatch.ConnectionSourceType"
  }
}
types {
  key: "envoy.api.v2.listener.ListenerFilter"
  value {
    qualified_package: "envoy.api.v2.listener"
    proto_path: "envoy/api/v2/listener/listener.proto"
    next_version_type_name: "envoy.api.v3alpha.listener.ListenerFilter"
  }
}
types {
  key: "envoy.api.v2.listener.QuicProtocolOptions"
  value {
    qualified_package: "envoy.api.v2.listener"
    proto_path: "envoy/api/v2/listener/quic_config.proto"
    next_version_type_name: "envoy.api.v3alpha.listener.QuicProtocolOptions"
  }
}
types {
  key: "envoy.api.v2.listener.UdpListenerConfig"
  value {
    qualified_package: "envoy.api.v2.listener"
    proto_path: "envoy/api/v2/listener/udp_listener_config.proto"
    next_version_type_name: "envoy.api.v3alpha.listener.UdpListenerConfig"
  }
}
types {
  key: "envoy.api.v2.ratelimit.RateLimitDescriptor"
  value {
    qualified_package: "envoy.api.v2.ratelimit"
    proto_path: "envoy/api/v2/ratelimit/ratelimit.proto"
    next_version_type_name: "envoy.api.v3alpha.ratelimit.RateLimitDescriptor"
  }
}
types {
  key: "envoy.api.v2.ratelimit.RateLimitDescriptor.Entry"
  value {
    qualified_package: "envoy.api.v2.ratelimit"
    proto_path: "envoy/api/v2/ratelimit/ratelimit.proto"
    next_version_type_name: "envoy.api.v3alpha.ratelimit.RateLimitDescriptor.Entry"
  }
}
types {
  key: "envoy.api.v2.route.CorsPolicy"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.CorsPolicy"
  }
}
types {
  key: "envoy.api.v2.route.Decorator"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.Decorator"
  }
}
types {
  key: "envoy.api.v2.route.DirectResponseAction"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.DirectResponseAction"
  }
}
types {
  key: "envoy.api.v2.route.HeaderMatcher"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.HeaderMatcher"
  }
}
types {
  key: "envoy.api.v2.route.HedgePolicy"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.HedgePolicy"
  }
}
types {
  key: "envoy.api.v2.route.QueryParameterMatcher"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.QueryParameterMatcher"
  }
}
types {
  key: "envoy.api.v2.route.RateLimit"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.RateLimit"
  }
}
types {
  key: "envoy.api.v2.route.RateLimit.Action"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.RateLimit.Action"
  }
}
types {
  key: "envoy.api.v2.route.RateLimit.Action.DestinationCluster"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.RateLimit.Action.DestinationCluster"
  }
}
types {
  key: "envoy.api.v2.route.RateLimit.Action.GenericKey"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.RateLimit.Action.GenericKey"
  }
}
types {
  key: "envoy.api.v2.route.RateLimit.Action.HeaderValueMatch"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.RateLimit.Action.HeaderValueMatch"
  }
}
types {
  key: "envoy.api.v2.route.RateLimit.Action.RemoteAddress"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.RateLimit.Action.RemoteAddress"
  }
}
types {
  key: "envoy.api.v2.route.RateLimit.Action.RequestHeaders"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.RateLimit.Action.RequestHeaders"
  }
}
types {
  key: "envoy.api.v2.route.RateLimit.Action.SourceCluster"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.RateLimit.Action.SourceCluster"
  }
}
types {
  key: "envoy.api.v2.route.RedirectAction"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.RedirectAction"
  }
}
types {
  key: "envoy.api.v2.route.RedirectAction.RedirectResponseCode"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.RedirectAction.RedirectResponseCode"
  }
}
types {
  key: "envoy.api.v2.route.RetryPolicy"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.RetryPolicy"
  }
}
types {
  key: "envoy.api.v2.route.RetryPolicy.RetryBackOff"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.RetryPolicy.RetryBackOff"
  }
}
types {
  key: "envoy.api.v2.route.RetryPolicy.RetryHostPredicate"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.RetryPolicy.RetryHostPredicate"
  }
}
types {
  key: "envoy.api.v2.route.RetryPolicy.RetryPriority"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.RetryPolicy.RetryPriority"
  }
}
types {
  key: "envoy.api.v2.route.Route"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.Route"
  }
}
types {
  key: "envoy.api.v2.route.Route.PerFilterConfigEntry"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.Route.PerFilterConfigEntry"
  }
}
types {
  key: "envoy.api.v2.route.Route.TypedPerFilterConfigEntry"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.Route.TypedPerFilterConfigEntry"
  }
}
types {
  key: "envoy.api.v2.route.RouteAction"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.RouteAction"
  }
}
types {
  key: "envoy.api.v2.route.RouteAction.ClusterNotFoundResponseCode"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.RouteAction.ClusterNotFoundResponseCode"
  }
}
types {
  key: "envoy.api.v2.route.RouteAction.HashPolicy"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.RouteAction.HashPolicy"
  }
}
types {
  key: "envoy.api.v2.route.RouteAction.HashPolicy.ConnectionProperties"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.RouteAction.HashPolicy.ConnectionProperties"
  }
}
types {
  key: "envoy.api.v2.route.RouteAction.HashPolicy.Cookie"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.RouteAction.HashPolicy.Cookie"
  }
}
types {
  key: "envoy.api.v2.route.RouteAction.HashPolicy.Header"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.RouteAction.HashPolicy.Header"
  }
}
types {
  key: "envoy.api.v2.route.RouteAction.InternalRedirectAction"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.RouteAction.InternalRedirectAction"
  }
}
types {
  key: "envoy.api.v2.route.RouteAction.RequestMirrorPolicy"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.RouteAction.RequestMirrorPolicy"
  }
}
types {
  key: "envoy.api.v2.route.RouteAction.UpgradeConfig"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.RouteAction.UpgradeConfig"
  }
}
types {
  key: "envoy.api.v2.route.RouteMatch"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.RouteMatch"
  }
}
types {
  key: "envoy.api.v2.route.RouteMatch.GrpcRouteMatchOptions"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.RouteMatch.GrpcRouteMatchOptions"
  }
}
types {
  key: "envoy.api.v2.route.RouteMatch.TlsContextMatchOptions"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.RouteMatch.TlsContextMatchOptions"
  }
}
types {
  key: "envoy.api.v2.route.Tracing"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.Tracing"
  }
}
types {
  key: "envoy.api.v2.route.VirtualCluster"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.VirtualCluster"
  }
}
types {
  key: "envoy.api.v2.route.VirtualHost"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.VirtualHost"
  }
}
types {
  key: "envoy.api.v2.route.VirtualHost.PerFilterConfigEntry"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.VirtualHost.PerFilterConfigEntry"
  }
}
types {
  key: "envoy.api.v2.route.VirtualHost.TlsRequirementType"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.VirtualHost.TlsRequirementType"
  }
}
types {
  key: "envoy.api.v2.route.VirtualHost.TypedPerFilterConfigEntry"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.VirtualHost.TypedPerFilterConfigEntry"
  }
}
types {
  key: "envoy.api.v2.route.WeightedCluster"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.WeightedCluster"
  }
}
types {
  key: "envoy.api.v2.route.WeightedCluster.ClusterWeight"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.WeightedCluster.ClusterWeight"
  }
}
types {
  key: "envoy.api.v2.route.WeightedCluster.ClusterWeight.PerFilterConfigEntry"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.WeightedCluster.ClusterWeight.PerFilterConfigEntry"
  }
}
types {
  key: "envoy.api.v2.route.WeightedCluster.ClusterWeight.TypedPerFilterConfigEntry"
  value {
    qualified_package: "envoy.api.v2.route"
    proto_path: "envoy/api/v2/route/route.proto"
    next_version_type_name: "envoy.api.v3alpha.route.WeightedCluster.ClusterWeight.TypedPerFilterConfigEntry"
  }
}
types {
  key: "envoy.api.v3alpha.Cluster"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/cds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.Cluster.ClusterProtocolSelection"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/cds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.Cluster.CommonLbConfig"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/cds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.Cluster.CommonLbConfig.LocalityWeightedLbConfig"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/cds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.Cluster.CommonLbConfig.ZoneAwareLbConfig"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/cds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.Cluster.CustomClusterType"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/cds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.Cluster.DiscoveryType"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/cds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.Cluster.DnsLookupFamily"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/cds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.Cluster.EdsClusterConfig"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/cds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.Cluster.ExtensionProtocolOptionsEntry"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/cds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.Cluster.LbPolicy"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/cds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.Cluster.LbSubsetConfig"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/cds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.Cluster.LbSubsetConfig.LbSubsetFallbackPolicy"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/cds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.Cluster.LbSubsetConfig.LbSubsetSelector"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/cds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.Cluster.LbSubsetConfig.LbSubsetSelector.LbSubsetSelectorFallbackPolicy"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/cds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.Cluster.LeastRequestLbConfig"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/cds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.Cluster.OriginalDstLbConfig"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/cds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.Cluster.RefreshRate"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/cds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.Cluster.RingHashLbConfig"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/cds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.Cluster.RingHashLbConfig.HashFunction"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/cds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.Cluster.TransportSocketMatch"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/cds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.Cluster.TypedExtensionProtocolOptionsEntry"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/cds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.ClusterLoadAssignment"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/eds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.ClusterLoadAssignment.NamedEndpointsEntry"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/eds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.ClusterLoadAssignment.Policy"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/eds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.ClusterLoadAssignment.Policy.DropOverload"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/eds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.DeltaDiscoveryRequest"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/discovery.proto"
  }
}
types {
  key: "envoy.api.v3alpha.DeltaDiscoveryRequest.InitialResourceVersionsEntry"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/discovery.proto"
  }
}
types {
  key: "envoy.api.v3alpha.DeltaDiscoveryResponse"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/discovery.proto"
  }
}
types {
  key: "envoy.api.v3alpha.DiscoveryRequest"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/discovery.proto"
  }
}
types {
  key: "envoy.api.v3alpha.DiscoveryResponse"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/discovery.proto"
  }
}
types {
  key: "envoy.api.v3alpha.Listener"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/lds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.Listener.ConnectionBalanceConfig"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/lds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.Listener.ConnectionBalanceConfig.ExactBalance"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/lds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.Listener.DeprecatedV1"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/lds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.Listener.DrainType"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/lds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.LoadBalancingPolicy"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/cds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.LoadBalancingPolicy.Policy"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/cds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.Resource"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/discovery.proto"
  }
}
types {
  key: "envoy.api.v3alpha.RouteConfiguration"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/rds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.ScopedRouteConfiguration"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/srds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.ScopedRouteConfiguration.Key"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/srds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.ScopedRouteConfiguration.Key.Fragment"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/srds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.UpstreamBindConfig"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/cds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.UpstreamConnectionOptions"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/cds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.Vhds"
  value {
    qualified_package: "envoy.api.v3alpha"
    proto_path: "envoy/api/v3alpha/rds.proto"
  }
}
types {
  key: "envoy.api.v3alpha.auth.CertificateValidationContext"
  value {
    qualified_package: "envoy.api.v3alpha.auth"
    proto_path: "envoy/api/v3alpha/auth/cert.proto"
  }
}
types {
  key: "envoy.api.v3alpha.auth.CommonTlsContext"
  value {
    qualified_package: "envoy.api.v3alpha.auth"
    proto_path: "envoy/api/v3alpha/auth/cert.proto"
  }
}
types {
  key: "envoy.api.v3alpha.auth.CommonTlsContext.CombinedCertificateValidationContext"
  value {
    qualified_package: "envoy.api.v3alpha.auth"
    proto_path: "envoy/api/v3alpha/auth/cert.proto"
  }
}
types {
  key: "envoy.api.v3alpha.auth.DownstreamTlsContext"
  value {
    qualified_package: "envoy.api.v3alpha.auth"
    proto_path: "envoy/api/v3alpha/auth/cert.proto"
  }
}
types {
  key: "envoy.api.v3alpha.auth.PrivateKeyProvider"
  value {
    qualified_package: "envoy.api.v3alpha.auth"
    proto_path: "envoy/api/v3alpha/auth/cert.proto"
  }
}
types {
  key: "envoy.api.v3alpha.auth.SdsSecretConfig"
  value {
    qualified_package: "envoy.api.v3alpha.auth"
    proto_path: "envoy/api/v3alpha/auth/cert.proto"
  }
}
types {
  key: "envoy.api.v3alpha.auth.Secret"
  value {
    qualified_package: "envoy.api.v3alpha.auth"
    proto_path: "envoy/api/v3alpha/auth/cert.proto"
  }
}
types {
  key: "envoy.api.v3alpha.auth.TlsCertificate"
  value {
    qualified_package: "envoy.api.v3alpha.auth"
    proto_path: "envoy/api/v3alpha/auth/cert.proto"
  }
}
types {
  key: "envoy.api.v3alpha.auth.TlsParameters"
  value {
    qualified_package: "envoy.api.v3alpha.auth"
    proto_path: "envoy/api/v3alpha/auth/cert.proto"
  }
}
types {
  key: "envoy.api.v3alpha.auth.TlsParameters.TlsProtocol"
  value {
    qualified_package: "envoy.api.v3alpha.auth"
    proto_path: "envoy/api/v3alpha/auth/cert.proto"
  }
}
types {
  key: "envoy.api.v3alpha.auth.TlsSessionTicketKeys"
  value {
    qualified_package: "envoy.api.v3alpha.auth"
    proto_path: "envoy/api/v3alpha/auth/cert.proto"
  }
}
types {
  key: "envoy.api.v3alpha.auth.UpstreamTlsContext"
  value {
    qualified_package: "envoy.api.v3alpha.auth"
    proto_path: "envoy/api/v3alpha/auth/cert.proto"
  }
}
types {
  key: "envoy.api.v3alpha.cluster.CircuitBreakers"
  value {
    qualified_package: "envoy.api.v3alpha.cluster"
    proto_path: "envoy/api/v3alpha/cluster/circuit_breaker.proto"
  }
}
types {
  key: "envoy.api.v3alpha.cluster.CircuitBreakers.Thresholds"
  value {
    qualified_package: "envoy.api.v3alpha.cluster"
    proto_path: "envoy/api/v3alpha/cluster/circuit_breaker.proto"
  }
}
types {
  key: "envoy.api.v3alpha.cluster.Filter"
  value {
    qualified_package: "envoy.api.v3alpha.cluster"
    proto_path: "envoy/api/v3alpha/cluster/filter.proto"
  }
}
types {
  key: "envoy.api.v3alpha.cluster.OutlierDetection"
  value {
    qualified_package: "envoy.api.v3alpha.cluster"
    proto_path: "envoy/api/v3alpha/cluster/outlier_detection.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.Address"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/address.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.AggregatedConfigSource"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/config_source.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.ApiConfigSource"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/config_source.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.ApiConfigSource.ApiType"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/config_source.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.AsyncDataSource"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/base.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.BindConfig"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/address.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.CidrRange"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/address.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.ConfigSource"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/config_source.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.ControlPlane"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/base.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.DataSource"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/base.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.GrpcProtocolOptions"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/protocol.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.GrpcService"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/grpc_service.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.GrpcService.EnvoyGrpc"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/grpc_service.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.GrpcService.GoogleGrpc"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/grpc_service.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.GrpcService.GoogleGrpc.CallCredentials"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/grpc_service.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.GrpcService.GoogleGrpc.CallCredentials.GoogleIAMCredentials"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/grpc_service.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.GrpcService.GoogleGrpc.CallCredentials.MetadataCredentialsFromPlugin"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/grpc_service.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.GrpcService.GoogleGrpc.CallCredentials.ServiceAccountJWTAccessCredentials"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/grpc_service.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.GrpcService.GoogleGrpc.ChannelCredentials"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/grpc_service.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.GrpcService.GoogleGrpc.GoogleLocalCredentials"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/grpc_service.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.GrpcService.GoogleGrpc.SslCredentials"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/grpc_service.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.HeaderMap"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/base.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.HeaderValue"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/base.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.HeaderValueOption"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/base.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.HealthCheck"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/health_check.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.HealthCheck.CustomHealthCheck"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/health_check.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.HealthCheck.GrpcHealthCheck"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/health_check.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.HealthCheck.HttpHealthCheck"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/health_check.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.HealthCheck.Payload"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/health_check.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.HealthCheck.RedisHealthCheck"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/health_check.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.HealthCheck.TcpHealthCheck"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/health_check.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.HealthStatus"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/health_check.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.Http1ProtocolOptions"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/protocol.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.Http2ProtocolOptions"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/protocol.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.HttpProtocolOptions"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/protocol.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.HttpUri"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/http_uri.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.Locality"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/base.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.Metadata"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/base.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.Metadata.FilterMetadataEntry"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/base.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.Node"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/base.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.Pipe"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/address.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.RateLimitSettings"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/config_source.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.RemoteDataSource"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/base.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.RequestMethod"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/base.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.RoutingPriority"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/base.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.RuntimeFeatureFlag"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/base.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.RuntimeFractionalPercent"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/base.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.RuntimeUInt32"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/base.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.SelfConfigSource"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/config_source.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.SocketAddress"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/address.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.SocketAddress.Protocol"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/address.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.SocketOption"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/base.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.SocketOption.SocketState"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/base.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.TcpKeepalive"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/address.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.TcpProtocolOptions"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/protocol.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.TrafficDirection"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/base.proto"
  }
}
types {
  key: "envoy.api.v3alpha.core.TransportSocket"
  value {
    qualified_package: "envoy.api.v3alpha.core"
    proto_path: "envoy/api/v3alpha/core/base.proto"
  }
}
types {
  key: "envoy.api.v3alpha.endpoint.ClusterStats"
  value {
    qualified_package: "envoy.api.v3alpha.endpoint"
    proto_path: "envoy/api/v3alpha/endpoint/load_report.proto"
  }
}
types {
  key: "envoy.api.v3alpha.endpoint.ClusterStats.DroppedRequests"
  value {
    qualified_package: "envoy.api.v3alpha.endpoint"
    proto_path: "envoy/api/v3alpha/endpoint/load_report.proto"
  }
}
types {
  key: "envoy.api.v3alpha.endpoint.Endpoint"
  value {
    qualified_package: "envoy.api.v3alpha.endpoint"
    proto_path: "envoy/api/v3alpha/endpoint/endpoint.proto"
  }
}
types {
  key: "envoy.api.v3alpha.endpoint.Endpoint.HealthCheckConfig"
  value {
    qualified_package: "envoy.api.v3alpha.endpoint"
    proto_path: "envoy/api/v3alpha/endpoint/endpoint.proto"
  }
}
types {
  key: "envoy.api.v3alpha.endpoint.EndpointLoadMetricStats"
  value {
    qualified_package: "envoy.api.v3alpha.endpoint"
    proto_path: "envoy/api/v3alpha/endpoint/load_report.proto"
  }
}
types {
  key: "envoy.api.v3alpha.endpoint.LbEndpoint"
  value {
    qualified_package: "envoy.api.v3alpha.endpoint"
    proto_path: "envoy/api/v3alpha/endpoint/endpoint.proto"
  }
}
types {
  key: "envoy.api.v3alpha.endpoint.LocalityLbEndpoints"
  value {
    qualified_package: "envoy.api.v3alpha.endpoint"
    proto_path: "envoy/api/v3alpha/endpoint/endpoint.proto"
  }
}
types {
  key: "envoy.api.v3alpha.endpoint.UpstreamEndpointStats"
  value {
    qualified_package: "envoy.api.v3alpha.endpoint"
    proto_path: "envoy/api/v3alpha/endpoint/load_report.proto"
  }
}
types {
  key: "envoy.api.v3alpha.endpoint.UpstreamLocalityStats"
  value {
    qualified_package: "envoy.api.v3alpha.endpoint"
    proto_path: "envoy/api/v3alpha/endpoint/load_report.proto"
  }
}
types {
  key: "envoy.api.v3alpha.listener.Filter"
  value {
    qualified_package: "envoy.api.v3alpha.listener"
    proto_path: "envoy/api/v3alpha/listener/listener.proto"
  }
}
types {
  key: "envoy.api.v3alpha.listener.FilterChain"
  value {
    qualified_package: "envoy.api.v3alpha.listener"
    proto_path: "envoy/api/v3alpha/listener/listener.proto"
  }
}
types {
  key: "envoy.api.v3alpha.listener.FilterChainMatch"
  value {
    qualified_package: "envoy.api.v3alpha.listener"
    proto_path: "envoy/api/v3alpha/listener/listener.proto"
  }
}
types {
  key: "envoy.api.v3alpha.listener.FilterChainMatch.ConnectionSourceType"
  value {
    qualified_package: "envoy.api.v3alpha.listener"
    proto_path: "envoy/api/v3alpha/listener/listener.proto"
  }
}
types {
  key: "envoy.api.v3alpha.listener.ListenerFilter"
  value {
    qualified_package: "envoy.api.v3alpha.listener"
    proto_path: "envoy/api/v3alpha/listener/listener.proto"
  }
}
types {
  key: "envoy.api.v3alpha.listener.QuicProtocolOptions"
  value {
    qualified_package: "envoy.api.v3alpha.listener"
    proto_path: "envoy/api/v3alpha/listener/quic_config.proto"
  }
}
types {
  key: "envoy.api.v3alpha.listener.UdpListenerConfig"
  value {
    qualified_package: "envoy.api.v3alpha.listener"
    proto_path: "envoy/api/v3alpha/listener/udp_listener_config.proto"
  }
}
types {
  key: "envoy.api.v3alpha.ratelimit.RateLimitDescriptor"
  value {
    qualified_package: "envoy.api.v3alpha.ratelimit"
    proto_path: "envoy/api/v3alpha/ratelimit/ratelimit.proto"
  }
}
types {
  key: "envoy.api.v3alpha.ratelimit.RateLimitDescriptor.Entry"
  value {
    qualified_package: "envoy.api.v3alpha.ratelimit"
    proto_path: "envoy/api/v3alpha/ratelimit/ratelimit.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.CorsPolicy"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.Decorator"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.DirectResponseAction"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.HeaderMatcher"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.HedgePolicy"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.QueryParameterMatcher"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.RateLimit"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.RateLimit.Action"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.RateLimit.Action.DestinationCluster"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.RateLimit.Action.GenericKey"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.RateLimit.Action.HeaderValueMatch"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.RateLimit.Action.RemoteAddress"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.RateLimit.Action.RequestHeaders"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.RateLimit.Action.SourceCluster"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.RedirectAction"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.RedirectAction.RedirectResponseCode"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.RetryPolicy"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.RetryPolicy.RetryBackOff"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.RetryPolicy.RetryHostPredicate"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.RetryPolicy.RetryPriority"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.Route"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.Route.PerFilterConfigEntry"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.Route.TypedPerFilterConfigEntry"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.RouteAction"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.RouteAction.ClusterNotFoundResponseCode"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.RouteAction.HashPolicy"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.RouteAction.HashPolicy.ConnectionProperties"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.RouteAction.HashPolicy.Cookie"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.RouteAction.HashPolicy.Header"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.RouteAction.InternalRedirectAction"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.RouteAction.RequestMirrorPolicy"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.RouteAction.UpgradeConfig"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.RouteMatch"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.RouteMatch.GrpcRouteMatchOptions"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.RouteMatch.TlsContextMatchOptions"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.Tracing"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.VirtualCluster"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.VirtualHost"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.VirtualHost.PerFilterConfigEntry"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.VirtualHost.TlsRequirementType"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.VirtualHost.TypedPerFilterConfigEntry"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.WeightedCluster"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.WeightedCluster.ClusterWeight"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.WeightedCluster.ClusterWeight.PerFilterConfigEntry"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.api.v3alpha.route.WeightedCluster.ClusterWeight.TypedPerFilterConfigEntry"
  value {
    qualified_package: "envoy.api.v3alpha.route"
    proto_path: "envoy/api/v3alpha/route/route.proto"
  }
}
types {
  key: "envoy.config.accesslog.v2.CommonGrpcAccessLogConfig"
  value {
    qualified_package: "envoy.config.accesslog.v2"
    proto_path: "envoy/config/accesslog/v2/als.proto"
    next_version_type_name: "envoy.config.accesslog.v3alpha.CommonGrpcAccessLogConfig"
  }
}
types {
  key: "envoy.config.accesslog.v2.FileAccessLog"
  value {
    qualified_package: "envoy.config.accesslog.v2"
    proto_path: "envoy/config/accesslog/v2/file.proto"
    next_version_type_name: "envoy.config.accesslog.v3alpha.FileAccessLog"
  }
}
types {
  key: "envoy.config.accesslog.v2.HttpGrpcAccessLogConfig"
  value {
    qualified_package: "envoy.config.accesslog.v2"
    proto_path: "envoy/config/accesslog/v2/als.proto"
    next_version_type_name: "envoy.config.accesslog.v3alpha.HttpGrpcAccessLogConfig"
  }
}
types {
  key: "envoy.config.accesslog.v2.TcpGrpcAccessLogConfig"
  value {
    qualified_package: "envoy.config.accesslog.v2"
    proto_path: "envoy/config/accesslog/v2/als.proto"
    next_version_type_name: "envoy.config.accesslog.v3alpha.TcpGrpcAccessLogConfig"
  }
}
types {
  key: "envoy.config.accesslog.v2.WasmAccessLog"
  value {
    qualified_package: "envoy.config.accesslog.v2"
    proto_path: "envoy/config/accesslog/v2/wasm.proto"
    next_version_type_name: "envoy.config.accesslog.v3alpha.WasmAccessLog"
  }
}
types {
  key: "envoy.config.accesslog.v3alpha.CommonGrpcAccessLogConfig"
  value {
    qualified_package: "envoy.config.accesslog.v3alpha"
    proto_path: "envoy/config/accesslog/v3alpha/als.proto"
  }
}
types {
  key: "envoy.config.accesslog.v3alpha.FileAccessLog"
  value {
    qualified_package: "envoy.config.accesslog.v3alpha"
    proto_path: "envoy/config/accesslog/v3alpha/file.proto"
  }
}
types {
  key: "envoy.config.accesslog.v3alpha.HttpGrpcAccessLogConfig"
  value {
    qualified_package: "envoy.config.accesslog.v3alpha"
    proto_path: "envoy/config/accesslog/v3alpha/als.proto"
  }
}
types {
  key: "envoy.config.accesslog.v3alpha.TcpGrpcAccessLogConfig"
  value {
    qualified_package: "envoy.config.accesslog.v3alpha"
    proto_path: "envoy/config/accesslog/v3alpha/als.proto"
  }
}
types {
  key: "envoy.config.accesslog.v3alpha.WasmAccessLog"
  value {
    qualified_package: "envoy.config.accesslog.v3alpha"
    proto_path: "envoy/config/accesslog/v3alpha/wasm.proto"
  }
}
types {
  key: "envoy.config.bootstrap.v2.Admin"
  value {
    qualified_package: "envoy.config.bootstrap.v2"
    proto_path: "envoy/config/bootstrap/v2/bootstrap.proto"
    next_version_type_name: "envoy.config.bootstrap.v3alpha.Admin"
  }
}
types {
  key: "envoy.config.bootstrap.v2.Bootstrap"
  value {
    qualified_package: "envoy.config.bootstrap.v2"
    proto_path: "envoy/config/bootstrap/v2/bootstrap.proto"
    next_version_type_name: "envoy.config.bootstrap.v3alpha.Bootstrap"
  }
}
types {
  key: "envoy.config.bootstrap.v2.Bootstrap.DynamicResources"
  value {
    qualified_package: "envoy.config.bootstrap.v2"
    proto_path: "envoy/config/bootstrap/v2/bootstrap.proto"
    next_version_type_name: "envoy.config.bootstrap.v3alpha.Bootstrap.DynamicResources"
  }
}
types {
  key: "envoy.config.bootstrap.v2.Bootstrap.StaticResources"
  value {
    qualified_package: "envoy.config.bootstrap.v2"
    proto_path: "envoy/config/bootstrap/v2/bootstrap.proto"
    next_version_type_name: "envoy.config.bootstrap.v3alpha.Bootstrap.StaticResources"
  }
}
types {
  key: "envoy.config.bootstrap.v2.ClusterManager"
  value {
    qualified_package: "envoy.config.bootstrap.v2"
    proto_path: "envoy/config/bootstrap/v2/bootstrap.proto"
    next_version_type_name: "envoy.config.bootstrap.v3alpha.ClusterManager"
  }
}
types {
  key: "envoy.config.bootstrap.v2.ClusterManager.OutlierDetection"
  value {
    qualified_package: "envoy.config.bootstrap.v2"
    proto_path: "envoy/config/bootstrap/v2/bootstrap.proto"
    next_version_type_name: "envoy.config.bootstrap.v3alpha.ClusterManager.OutlierDetection"
  }
}
types {
  key: "envoy.config.bootstrap.v2.LayeredRuntime"
  value {
    qualified_package: "envoy.config.bootstrap.v2"
    proto_path: "envoy/config/bootstrap/v2/bootstrap.proto"
    next_version_type_name: "envoy.config.bootstrap.v3alpha.LayeredRuntime"
  }
}
types {
  key: "envoy.config.bootstrap.v2.Runtime"
  value {
    qualified_package: "envoy.config.bootstrap.v2"
    proto_path: "envoy/config/bootstrap/v2/bootstrap.proto"
    next_version_type_name: "envoy.config.bootstrap.v3alpha.Runtime"
  }
}
types {
  key: "envoy.config.bootstrap.v2.RuntimeLayer"
  value {
    qualified_package: "envoy.config.bootstrap.v2"
    proto_path: "envoy/config/bootstrap/v2/bootstrap.proto"
    next_version_type_name: "envoy.config.bootstrap.v3alpha.RuntimeLayer"
  }
}
types {
  key: "envoy.config.bootstrap.v2.RuntimeLayer.AdminLayer"
  value {
    qualified_package: "envoy.config.bootstrap.v2"
    proto_path: "envoy/config/bootstrap/v2/bootstrap.proto"
    next_version_type_name: "envoy.config.bootstrap.v3alpha.RuntimeLayer.AdminLayer"
  }
}
types {
  key: "envoy.config.bootstrap.v2.RuntimeLayer.DiskLayer"
  value {
    qualified_package: "envoy.config.bootstrap.v2"
    proto_path: "envoy/config/bootstrap/v2/bootstrap.proto"
    next_version_type_name: "envoy.config.bootstrap.v3alpha.RuntimeLayer.DiskLayer"
  }
}
types {
  key: "envoy.config.bootstrap.v2.RuntimeLayer.RtdsLayer"
  value {
    qualified_package: "envoy.config.bootstrap.v2"
    proto_path: "envoy/config/bootstrap/v2/bootstrap.proto"
    next_version_type_name: "envoy.config.bootstrap.v3alpha.RuntimeLayer.RtdsLayer"
  }
}
types {
  key: "envoy.config.bootstrap.v2.Watchdog"
  value {
    qualified_package: "envoy.config.bootstrap.v2"
    proto_path: "envoy/config/bootstrap/v2/bootstrap.proto"
    next_version_type_name: "envoy.config.bootstrap.v3alpha.Watchdog"
  }
}
types {
  key: "envoy.config.bootstrap.v3alpha.Admin"
  value {
    qualified_package: "envoy.config.bootstrap.v3alpha"
    proto_path: "envoy/config/bootstrap/v3alpha/bootstrap.proto"
  }
}
types {
  key: "envoy.config.bootstrap.v3alpha.Bootstrap"
  value {
    qualified_package: "envoy.config.bootstrap.v3alpha"
    proto_path: "envoy/config/bootstrap/v3alpha/bootstrap.proto"
  }
}
types {
  key: "envoy.config.bootstrap.v3alpha.Bootstrap.DynamicResources"
  value {
    qualified_package: "envoy.config.bootstrap.v3alpha"
    proto_path: "envoy/config/bootstrap/v3alpha/bootstrap.proto"
  }
}
types {
  key: "envoy.config.bootstrap.v3alpha.Bootstrap.StaticResources"
  value {
    qualified_package: "envoy.config.bootstrap.v3alpha"
    proto_path: "envoy/config/bootstrap/v3alpha/bootstrap.proto"
  }
}
types {
  key: "envoy.config.bootstrap.v3alpha.ClusterManager"
  value {
    qualified_package: "envoy.config.bootstrap.v3alpha"
    proto_path: "envoy/config/bootstrap/v3alpha/bootstrap.proto"
  }
}
types {
  key: "envoy.config.bootstrap.v3alpha.ClusterManager.OutlierDetection"
  value {
    qualified_package: "envoy.config.bootstrap.v3alpha"
    proto_path: "envoy/config/bootstrap/v3alpha/bootstrap.proto"
  }
}
types {
  key: "envoy.config.bootstrap.v3alpha.LayeredRuntime"
  value {
    qualified_package: "envoy.config.bootstrap.v3alpha"
    proto_path: "envoy/config/bootstrap/v3alpha/bootstrap.proto"
  }
}
types {
  key: "envoy.config.bootstrap.v3alpha.Runtime"
  value {
    qualified_package: "envoy.config.bootstrap.v3alpha"
    proto_path: "envoy/config/bootstrap/v3alpha/bootstrap.proto"
  }
}
types {
  key: "envoy.config.bootstrap.v3alpha.RuntimeLayer"
  value {
    qualified_package: "envoy.config.bootstrap.v3alpha"
    proto_path: "envoy/config/bootstrap/v3alpha/bootstrap.proto"
  }
}
types {
  key: "envoy.config.bootstrap.v3alpha.RuntimeLayer.AdminLayer"
  value {
    qualified_package: "envoy.config.bootstrap.v3alpha"
    proto_path: "envoy/config/bootstrap/v3alpha/bootstrap.proto"
  }
}
types {
  key: "envoy.config.bootstrap.v3alpha.RuntimeLayer.DiskLayer"
  value {
    qualified_package: "envoy.config.bootstrap.v3alpha"
    proto_path: "envoy/config/bootstrap/v3alpha/bootstrap.proto"
  }
}
types {
  key: "envoy.config.bootstrap.v3alpha.RuntimeLayer.RtdsLayer"
  value {
    qualified_package: "envoy.config.bootstrap.v3alpha"
    proto_path: "envoy/config/bootstrap/v3alpha/bootstrap.proto"
  }
}
types {
  key: "envoy.config.bootstrap.v3alpha.Watchdog"
  value {
    qualified_package: "envoy.config.bootstrap.v3alpha"
    proto_path: "envoy/config/bootstrap/v3alpha/bootstrap.proto"
  }
}
types {
  key: "envoy.config.cluster.dynamic_forward_proxy.v2alpha.ClusterConfig"
  value {
    qualified_package: "envoy.config.cluster.dynamic_forward_proxy.v2alpha"
    proto_path: "envoy/config/cluster/dynamic_forward_proxy/v2alpha/cluster.proto"
    next_version_type_name: "envoy.config.cluster.dynamic_forward_proxy.v3alpha.ClusterConfig"
  }
}
types {
  key: "envoy.config.cluster.dynamic_forward_proxy.v3alpha.ClusterConfig"
  value {
    qualified_package: "envoy.config.cluster.dynamic_forward_proxy.v3alpha"
    proto_path: "envoy/config/cluster/dynamic_forward_proxy/v3alpha/cluster.proto"
  }
}
types {
  key: "envoy.config.cluster.redis.RedisClusterConfig"
  value {
    qualified_package: "envoy.config.cluster.redis"
    proto_path: "envoy/config/cluster/redis/redis_cluster.proto"
  }
}
types {
  key: "envoy.config.common.dynamic_forward_proxy.v2alpha.DnsCacheConfig"
  value {
    qualified_package: "envoy.config.common.dynamic_forward_proxy.v2alpha"
    proto_path: "envoy/config/common/dynamic_forward_proxy/v2alpha/dns_cache.proto"
    next_version_type_name: "envoy.config.common.dynamic_forward_proxy.v3alpha.DnsCacheConfig"
  }
}
types {
  key: "envoy.config.common.dynamic_forward_proxy.v3alpha.DnsCacheConfig"
  value {
    qualified_package: "envoy.config.common.dynamic_forward_proxy.v3alpha"
    proto_path: "envoy/config/common/dynamic_forward_proxy/v3alpha/dns_cache.proto"
  }
}
types {
  key: "envoy.config.common.tap.v2alpha.AdminConfig"
  value {
    qualified_package: "envoy.config.common.tap.v2alpha"
    proto_path: "envoy/config/common/tap/v2alpha/common.proto"
    next_version_type_name: "envoy.config.common.tap.v3alpha.AdminConfig"
  }
}
types {
  key: "envoy.config.common.tap.v2alpha.CommonExtensionConfig"
  value {
    qualified_package: "envoy.config.common.tap.v2alpha"
    proto_path: "envoy/config/common/tap/v2alpha/common.proto"
    next_version_type_name: "envoy.config.common.tap.v3alpha.CommonExtensionConfig"
  }
}
types {
  key: "envoy.config.common.tap.v2alpha.CommonExtensionConfig.TapDSConfig"
  value {
    qualified_package: "envoy.config.common.tap.v2alpha"
    proto_path: "envoy/config/common/tap/v2alpha/common.proto"
    next_version_type_name: "envoy.config.common.tap.v3alpha.CommonExtensionConfig.TapDSConfig"
  }
}
types {
  key: "envoy.config.common.tap.v3alpha.AdminConfig"
  value {
    qualified_package: "envoy.config.common.tap.v3alpha"
    proto_path: "envoy/config/common/tap/v3alpha/common.proto"
  }
}
types {
  key: "envoy.config.common.tap.v3alpha.CommonExtensionConfig"
  value {
    qualified_package: "envoy.config.common.tap.v3alpha"
    proto_path: "envoy/config/common/tap/v3alpha/common.proto"
  }
}
types {
  key: "envoy.config.common.tap.v3alpha.CommonExtensionConfig.TapDSConfig"
  value {
    qualified_package: "envoy.config.common.tap.v3alpha"
    proto_path: "envoy/config/common/tap/v3alpha/common.proto"
  }
}
types {
  key: "envoy.config.filter.accesslog.v2.AccessLog"
  value {
    qualified_package: "envoy.config.filter.accesslog.v2"
    proto_path: "envoy/config/filter/accesslog/v2/accesslog.proto"
    next_version_type_name: "envoy.config.filter.accesslog.v3alpha.AccessLog"
  }
}
types {
  key: "envoy.config.filter.accesslog.v2.AccessLogFilter"
  value {
    qualified_package: "envoy.config.filter.accesslog.v2"
    proto_path: "envoy/config/filter/accesslog/v2/accesslog.proto"
    next_version_type_name: "envoy.config.filter.accesslog.v3alpha.AccessLogFilter"
  }
}
types {
  key: "envoy.config.filter.accesslog.v2.AndFilter"
  value {
    qualified_package: "envoy.config.filter.accesslog.v2"
    proto_path: "envoy/config/filter/accesslog/v2/accesslog.proto"
    next_version_type_name: "envoy.config.filter.accesslog.v3alpha.AndFilter"
  }
}
types {
  key: "envoy.config.filter.accesslog.v2.ComparisonFilter"
  value {
    qualified_package: "envoy.config.filter.accesslog.v2"
    proto_path: "envoy/config/filter/accesslog/v2/accesslog.proto"
    next_version_type_name: "envoy.config.filter.accesslog.v3alpha.ComparisonFilter"
  }
}
types {
  key: "envoy.config.filter.accesslog.v2.ComparisonFilter.Op"
  value {
    qualified_package: "envoy.config.filter.accesslog.v2"
    proto_path: "envoy/config/filter/accesslog/v2/accesslog.proto"
    next_version_type_name: "envoy.config.filter.accesslog.v3alpha.ComparisonFilter.Op"
  }
}
types {
  key: "envoy.config.filter.accesslog.v2.DurationFilter"
  value {
    qualified_package: "envoy.config.filter.accesslog.v2"
    proto_path: "envoy/config/filter/accesslog/v2/accesslog.proto"
    next_version_type_name: "envoy.config.filter.accesslog.v3alpha.DurationFilter"
  }
}
types {
  key: "envoy.config.filter.accesslog.v2.ExtensionFilter"
  value {
    qualified_package: "envoy.config.filter.accesslog.v2"
    proto_path: "envoy/config/filter/accesslog/v2/accesslog.proto"
    next_version_type_name: "envoy.config.filter.accesslog.v3alpha.ExtensionFilter"
  }
}
types {
  key: "envoy.config.filter.accesslog.v2.GrpcStatusFilter"
  value {
    qualified_package: "envoy.config.filter.accesslog.v2"
    proto_path: "envoy/config/filter/accesslog/v2/accesslog.proto"
    next_version_type_name: "envoy.config.filter.accesslog.v3alpha.GrpcStatusFilter"
  }
}
types {
  key: "envoy.config.filter.accesslog.v2.GrpcStatusFilter.Status"
  value {
    qualified_package: "envoy.config.filter.accesslog.v2"
    proto_path: "envoy/config/filter/accesslog/v2/accesslog.proto"
    next_version_type_name: "envoy.config.filter.accesslog.v3alpha.GrpcStatusFilter.Status"
  }
}
types {
  key: "envoy.config.filter.accesslog.v2.HeaderFilter"
  value {
    qualified_package: "envoy.config.filter.accesslog.v2"
    proto_path: "envoy/config/filter/accesslog/v2/accesslog.proto"
    next_version_type_name: "envoy.config.filter.accesslog.v3alpha.HeaderFilter"
  }
}
types {
  key: "envoy.config.filter.accesslog.v2.NotHealthCheckFilter"
  value {
    qualified_package: "envoy.config.filter.accesslog.v2"
    proto_path: "envoy/config/filter/accesslog/v2/accesslog.proto"
    next_version_type_name: "envoy.config.filter.accesslog.v3alpha.NotHealthCheckFilter"
  }
}
types {
  key: "envoy.config.filter.accesslog.v2.OrFilter"
  value {
    qualified_package: "envoy.config.filter.accesslog.v2"
    proto_path: "envoy/config/filter/accesslog/v2/accesslog.proto"
    next_version_type_name: "envoy.config.filter.accesslog.v3alpha.OrFilter"
  }
}
types {
  key: "envoy.config.filter.accesslog.v2.ResponseFlagFilter"
  value {
    qualified_package: "envoy.config.filter.accesslog.v2"
    proto_path: "envoy/config/filter/accesslog/v2/accesslog.proto"
    next_version_type_name: "envoy.config.filter.accesslog.v3alpha.ResponseFlagFilter"
  }
}
types {
  key: "envoy.config.filter.accesslog.v2.RuntimeFilter"
  value {
    qualified_package: "envoy.config.filter.accesslog.v2"
    proto_path: "envoy/config/filter/accesslog/v2/accesslog.proto"
    next_version_type_name: "envoy.config.filter.accesslog.v3alpha.RuntimeFilter"
  }
}
types {
  key: "envoy.config.filter.accesslog.v2.StatusCodeFilter"
  value {
    qualified_package: "envoy.config.filter.accesslog.v2"
    proto_path: "envoy/config/filter/accesslog/v2/accesslog.proto"
    next_version_type_name: "envoy.config.filter.accesslog.v3alpha.StatusCodeFilter"
  }
}
types {
  key: "envoy.config.filter.accesslog.v2.TraceableFilter"
  value {
    qualified_package: "envoy.config.filter.accesslog.v2"
    proto_path: "envoy/config/filter/accesslog/v2/accesslog.proto"
    next_version_type_name: "envoy.config.filter.accesslog.v3alpha.TraceableFilter"
  }
}
types {
  key: "envoy.config.filter.accesslog.v3alpha.AccessLog"
  value {
    qualified_package: "envoy.config.filter.accesslog.v3alpha"
    proto_path: "envoy/config/filter/accesslog/v3alpha/accesslog.proto"
  }
}
types {
  key: "envoy.config.filter.accesslog.v3alpha.AccessLogFilter"
  value {
    qualified_package: "envoy.config.filter.accesslog.v3alpha"
    proto_path: "envoy/config/filter/accesslog/v3alpha/accesslog.proto"
  }
}
types {
  key: "envoy.config.filter.accesslog.v3alpha.AndFilter"
  value {
    qualified_package: "envoy.config.filter.accesslog.v3alpha"
    proto_path: "envoy/config/filter/accesslog/v3alpha/accesslog.proto"
  }
}
types {
  key: "envoy.config.filter.accesslog.v3alpha.ComparisonFilter"
  value {
    qualified_package: "envoy.config.filter.accesslog.v3alpha"
    proto_path: "envoy/config/filter/accesslog/v3alpha/accesslog.proto"
  }
}
types {
  key: "envoy.config.filter.accesslog.v3alpha.ComparisonFilter.Op"
  value {
    qualified_package: "envoy.config.filter.accesslog.v3alpha"
    proto_path: "envoy/config/filter/accesslog/v3alpha/accesslog.proto"
  }
}
types {
  key: "envoy.config.filter.accesslog.v3alpha.DurationFilter"
  value {
    qualified_package: "envoy.config.filter.accesslog.v3alpha"
    proto_path: "envoy/config/filter/accesslog/v3alpha/accesslog.proto"
  }
}
types {
  key: "envoy.config.filter.accesslog.v3alpha.ExtensionFilter"
  value {
    qualified_package: "envoy.config.filter.accesslog.v3alpha"
    proto_path: "envoy/config/filter/accesslog/v3alpha/accesslog.proto"
  }
}
types {
  key: "envoy.config.filter.accesslog.v3alpha.GrpcStatusFilter"
  value {
    qualified_package: "envoy.config.filter.accesslog.v3alpha"
    proto_path: "envoy/config/filter/accesslog/v3alpha/accesslog.proto"
  }
}
types {
  key: "envoy.config.filter.accesslog.v3alpha.GrpcStatusFilter.Status"
  value {
    qualified_package: "envoy.config.filter.accesslog.v3alpha"
    proto_path: "envoy/config/filter/accesslog/v3alpha/accesslog.proto"
  }
}
types {
  key: "envoy.config.filter.accesslog.v3alpha.HeaderFilter"
  value {
    qualified_package: "envoy.config.filter.accesslog.v3alpha"
    proto_path: "envoy/config/filter/accesslog/v3alpha/accesslog.proto"
  }
}
types {
  key: "envoy.config.filter.accesslog.v3alpha.NotHealthCheckFilter"
  value {
    qualified_package: "envoy.config.filter.accesslog.v3alpha"
    proto_path: "envoy/config/filter/accesslog/v3alpha/accesslog.proto"
  }
}
types {
  key: "envoy.config.filter.accesslog.v3alpha.OrFilter"
  value {
    qualified_package: "envoy.config.filter.accesslog.v3alpha"
    proto_path: "envoy/config/filter/accesslog/v3alpha/accesslog.proto"
  }
}
types {
  key: "envoy.config.filter.accesslog.v3alpha.ResponseFlagFilter"
  value {
    qualified_package: "envoy.config.filter.accesslog.v3alpha"
    proto_path: "envoy/config/filter/accesslog/v3alpha/accesslog.proto"
  }
}
types {
  key: "envoy.config.filter.accesslog.v3alpha.RuntimeFilter"
  value {
    qualified_package: "envoy.config.filter.accesslog.v3alpha"
    proto_path: "envoy/config/filter/accesslog/v3alpha/accesslog.proto"
  }
}
types {
  key: "envoy.config.filter.accesslog.v3alpha.StatusCodeFilter"
  value {
    qualified_package: "envoy.config.filter.accesslog.v3alpha"
    proto_path: "envoy/config/filter/accesslog/v3alpha/accesslog.proto"
  }
}
types {
  key: "envoy.config.filter.accesslog.v3alpha.TraceableFilter"
  value {
    qualified_package: "envoy.config.filter.accesslog.v3alpha"
    proto_path: "envoy/config/filter/accesslog/v3alpha/accesslog.proto"
  }
}
types {
  key: "envoy.config.filter.dubbo.router.v2alpha1.Router"
  value {
    qualified_package: "envoy.config.filter.dubbo.router.v2alpha1"
    proto_path: "envoy/config/filter/dubbo/router/v2alpha1/router.proto"
  }
}
types {
  key: "envoy.config.filter.fault.v2.FaultDelay"
  value {
    qualified_package: "envoy.config.filter.fault.v2"
    proto_path: "envoy/config/filter/fault/v2/fault.proto"
    next_version_type_name: "envoy.config.filter.fault.v3alpha.FaultDelay"
  }
}
types {
  key: "envoy.config.filter.fault.v2.FaultDelay.FaultDelayType"
  value {
    qualified_package: "envoy.config.filter.fault.v2"
    proto_path: "envoy/config/filter/fault/v2/fault.proto"
    next_version_type_name: "envoy.config.filter.fault.v3alpha.FaultDelay.FaultDelayType"
  }
}
types {
  key: "envoy.config.filter.fault.v2.FaultDelay.HeaderDelay"
  value {
    qualified_package: "envoy.config.filter.fault.v2"
    proto_path: "envoy/config/filter/fault/v2/fault.proto"
    next_version_type_name: "envoy.config.filter.fault.v3alpha.FaultDelay.HeaderDelay"
  }
}
types {
  key: "envoy.config.filter.fault.v2.FaultRateLimit"
  value {
    qualified_package: "envoy.config.filter.fault.v2"
    proto_path: "envoy/config/filter/fault/v2/fault.proto"
    next_version_type_name: "envoy.config.filter.fault.v3alpha.FaultRateLimit"
  }
}
types {
  key: "envoy.config.filter.fault.v2.FaultRateLimit.FixedLimit"
  value {
    qualified_package: "envoy.config.filter.fault.v2"
    proto_path: "envoy/config/filter/fault/v2/fault.proto"
    next_version_type_name: "envoy.config.filter.fault.v3alpha.FaultRateLimit.FixedLimit"
  }
}
types {
  key: "envoy.config.filter.fault.v2.FaultRateLimit.HeaderLimit"
  value {
    qualified_package: "envoy.config.filter.fault.v2"
    proto_path: "envoy/config/filter/fault/v2/fault.proto"
    next_version_type_name: "envoy.config.filter.fault.v3alpha.FaultRateLimit.HeaderLimit"
  }
}
types {
  key: "envoy.config.filter.fault.v3alpha.FaultDelay"
  value {
    qualified_package: "envoy.config.filter.fault.v3alpha"
    proto_path: "envoy/config/filter/fault/v3alpha/fault.proto"
  }
}
types {
  key: "envoy.config.filter.fault.v3alpha.FaultDelay.FaultDelayType"
  value {
    qualified_package: "envoy.config.filter.fault.v3alpha"
    proto_path: "envoy/config/filter/fault/v3alpha/fault.proto"
  }
}
types {
  key: "envoy.config.filter.fault.v3alpha.FaultDelay.HeaderDelay"
  value {
    qualified_package: "envoy.config.filter.fault.v3alpha"
    proto_path: "envoy/config/filter/fault/v3alpha/fault.proto"
  }
}
types {
  key: "envoy.config.filter.fault.v3alpha.FaultRateLimit"
  value {
    qualified_package: "envoy.config.filter.fault.v3alpha"
    proto_path: "envoy/config/filter/fault/v3alpha/fault.proto"
  }
}
types {
  key: "envoy.config.filter.fault.v3alpha.FaultRateLimit.FixedLimit"
  value {
    qualified_package: "envoy.config.filter.fault.v3alpha"
    proto_path: "envoy/config/filter/fault/v3alpha/fault.proto"
  }
}
types {
  key: "envoy.config.filter.fault.v3alpha.FaultRateLimit.HeaderLimit"
  value {
    qualified_package: "envoy.config.filter.fault.v3alpha"
    proto_path: "envoy/config/filter/fault/v3alpha/fault.proto"
  }
}
types {
  key: "envoy.config.filter.http.adaptive_concurrency.v2alpha.AdaptiveConcurrency"
  value {
    qualified_package: "envoy.config.filter.http.adaptive_concurrency.v2alpha"
    proto_path: "envoy/config/filter/http/adaptive_concurrency/v2alpha/adaptive_concurrency.proto"
    next_version_type_name: "envoy.config.filter.http.adaptive_concurrency.v3alpha.AdaptiveConcurrency"
  }
}
types {
  key: "envoy.config.filter.http.adaptive_concurrency.v2alpha.GradientControllerConfig"
  value {
    qualified_package: "envoy.config.filter.http.adaptive_concurrency.v2alpha"
    proto_path: "envoy/config/filter/http/adaptive_concurrency/v2alpha/adaptive_concurrency.proto"
    next_version_type_name: "envoy.config.filter.http.adaptive_concurrency.v3alpha.GradientControllerConfig"
  }
}
types {
  key: "envoy.config.filter.http.adaptive_concurrency.v2alpha.GradientControllerConfig.ConcurrencyLimitCalculationParams"
  value {
    qualified_package: "envoy.config.filter.http.adaptive_concurrency.v2alpha"
    proto_path: "envoy/config/filter/http/adaptive_concurrency/v2alpha/adaptive_concurrency.proto"
    next_version_type_name: "envoy.config.filter.http.adaptive_concurrency.v3alpha.GradientControllerConfig.ConcurrencyLimitCalculationParams"
  }
}
types {
  key: "envoy.config.filter.http.adaptive_concurrency.v2alpha.GradientControllerConfig.MinimumRTTCalculationParams"
  value {
    qualified_package: "envoy.config.filter.http.adaptive_concurrency.v2alpha"
    proto_path: "envoy/config/filter/http/adaptive_concurrency/v2alpha/adaptive_concurrency.proto"
    next_version_type_name: "envoy.config.filter.http.adaptive_concurrency.v3alpha.GradientControllerConfig.MinimumRTTCalculationParams"
  }
}
types {
  key: "envoy.config.filter.http.adaptive_concurrency.v3alpha.AdaptiveConcurrency"
  value {
    qualified_package: "envoy.config.filter.http.adaptive_concurrency.v3alpha"
    proto_path: "envoy/config/filter/http/adaptive_concurrency/v3alpha/adaptive_concurrency.proto"
  }
}
types {
  key: "envoy.config.filter.http.adaptive_concurrency.v3alpha.GradientControllerConfig"
  value {
    qualified_package: "envoy.config.filter.http.adaptive_concurrency.v3alpha"
    proto_path: "envoy/config/filter/http/adaptive_concurrency/v3alpha/adaptive_concurrency.proto"
  }
}
types {
  key: "envoy.config.filter.http.adaptive_concurrency.v3alpha.GradientControllerConfig.ConcurrencyLimitCalculationParams"
  value {
    qualified_package: "envoy.config.filter.http.adaptive_concurrency.v3alpha"
    proto_path: "envoy/config/filter/http/adaptive_concurrency/v3alpha/adaptive_concurrency.proto"
  }
}
types {
  key: "envoy.config.filter.http.adaptive_concurrency.v3alpha.GradientControllerConfig.MinimumRTTCalculationParams"
  value {
    qualified_package: "envoy.config.filter.http.adaptive_concurrency.v3alpha"
    proto_path: "envoy/config/filter/http/adaptive_concurrency/v3alpha/adaptive_concurrency.proto"
  }
}
types {
  key: "envoy.config.filter.http.buffer.v2.Buffer"
  value {
    qualified_package: "envoy.config.filter.http.buffer.v2"
    proto_path: "envoy/config/filter/http/buffer/v2/buffer.proto"
  }
}
types {
  key: "envoy.config.filter.http.buffer.v2.BufferPerRoute"
  value {
    qualified_package: "envoy.config.filter.http.buffer.v2"
    proto_path: "envoy/config/filter/http/buffer/v2/buffer.proto"
  }
}
types {
  key: "envoy.config.filter.http.csrf.v2.CsrfPolicy"
  value {
    qualified_package: "envoy.config.filter.http.csrf.v2"
    proto_path: "envoy/config/filter/http/csrf/v2/csrf.proto"
    next_version_type_name: "envoy.config.filter.http.csrf.v3alpha.CsrfPolicy"
  }
}
types {
  key: "envoy.config.filter.http.csrf.v3alpha.CsrfPolicy"
  value {
    qualified_package: "envoy.config.filter.http.csrf.v3alpha"
    proto_path: "envoy/config/filter/http/csrf/v3alpha/csrf.proto"
  }
}
types {
  key: "envoy.config.filter.http.dynamic_forward_proxy.v2alpha.FilterConfig"
  value {
    qualified_package: "envoy.config.filter.http.dynamic_forward_proxy.v2alpha"
    proto_path: "envoy/config/filter/http/dynamic_forward_proxy/v2alpha/dynamic_forward_proxy.proto"
    next_version_type_name: "envoy.config.filter.http.dynamic_forward_proxy.v3alpha.FilterConfig"
  }
}
types {
  key: "envoy.config.filter.http.dynamic_forward_proxy.v2alpha.PerRouteConfig"
  value {
    qualified_package: "envoy.config.filter.http.dynamic_forward_proxy.v2alpha"
    proto_path: "envoy/config/filter/http/dynamic_forward_proxy/v2alpha/dynamic_forward_proxy.proto"
    next_version_type_name: "envoy.config.filter.http.dynamic_forward_proxy.v3alpha.PerRouteConfig"
  }
}
types {
  key: "envoy.config.filter.http.dynamic_forward_proxy.v3alpha.FilterConfig"
  value {
    qualified_package: "envoy.config.filter.http.dynamic_forward_proxy.v3alpha"
    proto_path: "envoy/config/filter/http/dynamic_forward_proxy/v3alpha/dynamic_forward_proxy.proto"
  }
}
types {
  key: "envoy.config.filter.http.dynamic_forward_proxy.v3alpha.PerRouteConfig"
  value {
    qualified_package: "envoy.config.filter.http.dynamic_forward_proxy.v3alpha"
    proto_path: "envoy/config/filter/http/dynamic_forward_proxy/v3alpha/dynamic_forward_proxy.proto"
  }
}
types {
  key: "envoy.config.filter.http.ext_authz.v2.AuthorizationRequest"
  value {
    qualified_package: "envoy.config.filter.http.ext_authz.v2"
    proto_path: "envoy/config/filter/http/ext_authz/v2/ext_authz.proto"
    next_version_type_name: "envoy.config.filter.http.ext_authz.v3alpha.AuthorizationRequest"
  }
}
types {
  key: "envoy.config.filter.http.ext_authz.v2.AuthorizationResponse"
  value {
    qualified_package: "envoy.config.filter.http.ext_authz.v2"
    proto_path: "envoy/config/filter/http/ext_authz/v2/ext_authz.proto"
    next_version_type_name: "envoy.config.filter.http.ext_authz.v3alpha.AuthorizationResponse"
  }
}
types {
  key: "envoy.config.filter.http.ext_authz.v2.BufferSettings"
  value {
    qualified_package: "envoy.config.filter.http.ext_authz.v2"
    proto_path: "envoy/config/filter/http/ext_authz/v2/ext_authz.proto"
    next_version_type_name: "envoy.config.filter.http.ext_authz.v3alpha.BufferSettings"
  }
}
types {
  key: "envoy.config.filter.http.ext_authz.v2.CheckSettings"
  value {
    qualified_package: "envoy.config.filter.http.ext_authz.v2"
    proto_path: "envoy/config/filter/http/ext_authz/v2/ext_authz.proto"
    next_version_type_name: "envoy.config.filter.http.ext_authz.v3alpha.CheckSettings"
  }
}
types {
  key: "envoy.config.filter.http.ext_authz.v2.CheckSettings.ContextExtensionsEntry"
  value {
    qualified_package: "envoy.config.filter.http.ext_authz.v2"
    proto_path: "envoy/config/filter/http/ext_authz/v2/ext_authz.proto"
    next_version_type_name: "envoy.config.filter.http.ext_authz.v3alpha.CheckSettings.ContextExtensionsEntry"
  }
}
types {
  key: "envoy.config.filter.http.ext_authz.v2.ExtAuthz"
  value {
    qualified_package: "envoy.config.filter.http.ext_authz.v2"
    proto_path: "envoy/config/filter/http/ext_authz/v2/ext_authz.proto"
    next_version_type_name: "envoy.config.filter.http.ext_authz.v3alpha.ExtAuthz"
  }
}
types {
  key: "envoy.config.filter.http.ext_authz.v2.ExtAuthzPerRoute"
  value {
    qualified_package: "envoy.config.filter.http.ext_authz.v2"
    proto_path: "envoy/config/filter/http/ext_authz/v2/ext_authz.proto"
    next_version_type_name: "envoy.config.filter.http.ext_authz.v3alpha.ExtAuthzPerRoute"
  }
}
types {
  key: "envoy.config.filter.http.ext_authz.v2.HttpService"
  value {
    qualified_package: "envoy.config.filter.http.ext_authz.v2"
    proto_path: "envoy/config/filter/http/ext_authz/v2/ext_authz.proto"
    next_version_type_name: "envoy.config.filter.http.ext_authz.v3alpha.HttpService"
  }
}
types {
  key: "envoy.config.filter.http.ext_authz.v3alpha.AuthorizationRequest"
  value {
    qualified_package: "envoy.config.filter.http.ext_authz.v3alpha"
    proto_path: "envoy/config/filter/http/ext_authz/v3alpha/ext_authz.proto"
  }
}
types {
  key: "envoy.config.filter.http.ext_authz.v3alpha.AuthorizationResponse"
  value {
    qualified_package: "envoy.config.filter.http.ext_authz.v3alpha"
    proto_path: "envoy/config/filter/http/ext_authz/v3alpha/ext_authz.proto"
  }
}
types {
  key: "envoy.config.filter.http.ext_authz.v3alpha.BufferSettings"
  value {
    qualified_package: "envoy.config.filter.http.ext_authz.v3alpha"
    proto_path: "envoy/config/filter/http/ext_authz/v3alpha/ext_authz.proto"
  }
}
types {
  key: "envoy.config.filter.http.ext_authz.v3alpha.CheckSettings"
  value {
    qualified_package: "envoy.config.filter.http.ext_authz.v3alpha"
    proto_path: "envoy/config/filter/http/ext_authz/v3alpha/ext_authz.proto"
  }
}
types {
  key: "envoy.config.filter.http.ext_authz.v3alpha.CheckSettings.ContextExtensionsEntry"
  value {
    qualified_package: "envoy.config.filter.http.ext_authz.v3alpha"
    proto_path: "envoy/config/filter/http/ext_authz/v3alpha/ext_authz.proto"
  }
}
types {
  key: "envoy.config.filter.http.ext_authz.v3alpha.ExtAuthz"
  value {
    qualified_package: "envoy.config.filter.http.ext_authz.v3alpha"
    proto_path: "envoy/config/filter/http/ext_authz/v3alpha/ext_authz.proto"
  }
}
types {
  key: "envoy.config.filter.http.ext_authz.v3alpha.ExtAuthzPerRoute"
  value {
    qualified_package: "envoy.config.filter.http.ext_authz.v3alpha"
    proto_path: "envoy/config/filter/http/ext_authz/v3alpha/ext_authz.proto"
  }
}
types {
  key: "envoy.config.filter.http.ext_authz.v3alpha.HttpService"
  value {
    qualified_package: "envoy.config.filter.http.ext_authz.v3alpha"
    proto_path: "envoy/config/filter/http/ext_authz/v3alpha/ext_authz.proto"
  }
}
types {
  key: "envoy.config.filter.http.fault.v2.FaultAbort"
  value {
    qualified_package: "envoy.config.filter.http.fault.v2"
    proto_path: "envoy/config/filter/http/fault/v2/fault.proto"
    next_version_type_name: "envoy.config.filter.http.fault.v3alpha.FaultAbort"
  }
}
types {
  key: "envoy.config.filter.http.fault.v2.HTTPFault"
  value {
    qualified_package: "envoy.config.filter.http.fault.v2"
    proto_path: "envoy/config/filter/http/fault/v2/fault.proto"
    next_version_type_name: "envoy.config.filter.http.fault.v3alpha.HTTPFault"
  }
}
types {
  key: "envoy.config.filter.http.fault.v3alpha.FaultAbort"
  value {
    qualified_package: "envoy.config.filter.http.fault.v3alpha"
    proto_path: "envoy/config/filter/http/fault/v3alpha/fault.proto"
  }
}
types {
  key: "envoy.config.filter.http.fault.v3alpha.HTTPFault"
  value {
    qualified_package: "envoy.config.filter.http.fault.v3alpha"
    proto_path: "envoy/config/filter/http/fault/v3alpha/fault.proto"
  }
}
types {
  key: "envoy.config.filter.http.grpc_http1_reverse_bridge.v2alpha1.FilterConfig"
  value {
    qualified_package: "envoy.config.filter.http.grpc_http1_reverse_bridge.v2alpha1"
    proto_path: "envoy/config/filter/http/grpc_http1_reverse_bridge/v2alpha1/config.proto"
  }
}
types {
  key: "envoy.config.filter.http.grpc_http1_reverse_bridge.v2alpha1.FilterConfigPerRoute"
  value {
    qualified_package: "envoy.config.filter.http.grpc_http1_reverse_bridge.v2alpha1"
    proto_path: "envoy/config/filter/http/grpc_http1_reverse_bridge/v2alpha1/config.proto"
  }
}
types {
  key: "envoy.config.filter.http.gzip.v2.Gzip"
  value {
    qualified_package: "envoy.config.filter.http.gzip.v2"
    proto_path: "envoy/config/filter/http/gzip/v2/gzip.proto"
  }
}
types {
  key: "envoy.config.filter.http.gzip.v2.Gzip.CompressionLevel"
  value {
    qualified_package: "envoy.config.filter.http.gzip.v2"
    proto_path: "envoy/config/filter/http/gzip/v2/gzip.proto"
  }
}
types {
  key: "envoy.config.filter.http.gzip.v2.Gzip.CompressionLevel.Enum"
  value {
    qualified_package: "envoy.config.filter.http.gzip.v2"
    proto_path: "envoy/config/filter/http/gzip/v2/gzip.proto"
  }
}
types {
  key: "envoy.config.filter.http.gzip.v2.Gzip.CompressionStrategy"
  value {
    qualified_package: "envoy.config.filter.http.gzip.v2"
    proto_path: "envoy/config/filter/http/gzip/v2/gzip.proto"
  }
}
types {
  key: "envoy.config.filter.http.header_to_metadata.v2.Config"
  value {
    qualified_package: "envoy.config.filter.http.header_to_metadata.v2"
    proto_path: "envoy/config/filter/http/header_to_metadata/v2/header_to_metadata.proto"
  }
}
types {
  key: "envoy.config.filter.http.header_to_metadata.v2.Config.KeyValuePair"
  value {
    qualified_package: "envoy.config.filter.http.header_to_metadata.v2"
    proto_path: "envoy/config/filter/http/header_to_metadata/v2/header_to_metadata.proto"
  }
}
types {
  key: "envoy.config.filter.http.header_to_metadata.v2.Config.Rule"
  value {
    qualified_package: "envoy.config.filter.http.header_to_metadata.v2"
    proto_path: "envoy/config/filter/http/header_to_metadata/v2/header_to_metadata.proto"
  }
}
types {
  key: "envoy.config.filter.http.header_to_metadata.v2.Config.ValueEncode"
  value {
    qualified_package: "envoy.config.filter.http.header_to_metadata.v2"
    proto_path: "envoy/config/filter/http/header_to_metadata/v2/header_to_metadata.proto"
  }
}
types {
  key: "envoy.config.filter.http.header_to_metadata.v2.Config.ValueType"
  value {
    qualified_package: "envoy.config.filter.http.header_to_metadata.v2"
    proto_path: "envoy/config/filter/http/header_to_metadata/v2/header_to_metadata.proto"
  }
}
types {
  key: "envoy.config.filter.http.health_check.v2.HealthCheck"
  value {
    qualified_package: "envoy.config.filter.http.health_check.v2"
    proto_path: "envoy/config/filter/http/health_check/v2/health_check.proto"
    next_version_type_name: "envoy.config.filter.http.health_check.v3alpha.HealthCheck"
  }
}
types {
  key: "envoy.config.filter.http.health_check.v2.HealthCheck.ClusterMinHealthyPercentagesEntry"
  value {
    qualified_package: "envoy.config.filter.http.health_check.v2"
    proto_path: "envoy/config/filter/http/health_check/v2/health_check.proto"
    next_version_type_name: "envoy.config.filter.http.health_check.v3alpha.HealthCheck.ClusterMinHealthyPercentagesEntry"
  }
}
types {
  key: "envoy.config.filter.http.health_check.v3alpha.HealthCheck"
  value {
    qualified_package: "envoy.config.filter.http.health_check.v3alpha"
    proto_path: "envoy/config/filter/http/health_check/v3alpha/health_check.proto"
  }
}
types {
  key: "envoy.config.filter.http.health_check.v3alpha.HealthCheck.ClusterMinHealthyPercentagesEntry"
  value {
    qualified_package: "envoy.config.filter.http.health_check.v3alpha"
    proto_path: "envoy/config/filter/http/health_check/v3alpha/health_check.proto"
  }
}
types {
  key: "envoy.config.filter.http.ip_tagging.v2.IPTagging"
  value {
    qualified_package: "envoy.config.filter.http.ip_tagging.v2"
    proto_path: "envoy/config/filter/http/ip_tagging/v2/ip_tagging.proto"
    next_version_type_name: "envoy.config.filter.http.ip_tagging.v3alpha.IPTagging"
  }
}
types {
  key: "envoy.config.filter.http.ip_tagging.v2.IPTagging.IPTag"
  value {
    qualified_package: "envoy.config.filter.http.ip_tagging.v2"
    proto_path: "envoy/config/filter/http/ip_tagging/v2/ip_tagging.proto"
    next_version_type_name: "envoy.config.filter.http.ip_tagging.v3alpha.IPTagging.IPTag"
  }
}
types {
  key: "envoy.config.filter.http.ip_tagging.v2.IPTagging.RequestType"
  value {
    qualified_package: "envoy.config.filter.http.ip_tagging.v2"
    proto_path: "envoy/config/filter/http/ip_tagging/v2/ip_tagging.proto"
    next_version_type_name: "envoy.config.filter.http.ip_tagging.v3alpha.IPTagging.RequestType"
  }
}
types {
  key: "envoy.config.filter.http.ip_tagging.v3alpha.IPTagging"
  value {
    qualified_package: "envoy.config.filter.http.ip_tagging.v3alpha"
    proto_path: "envoy/config/filter/http/ip_tagging/v3alpha/ip_tagging.proto"
  }
}
types {
  key: "envoy.config.filter.http.ip_tagging.v3alpha.IPTagging.IPTag"
  value {
    qualified_package: "envoy.config.filter.http.ip_tagging.v3alpha"
    proto_path: "envoy/config/filter/http/ip_tagging/v3alpha/ip_tagging.proto"
  }
}
types {
  key: "envoy.config.filter.http.ip_tagging.v3alpha.IPTagging.RequestType"
  value {
    qualified_package: "envoy.config.filter.http.ip_tagging.v3alpha"
    proto_path: "envoy/config/filter/http/ip_tagging/v3alpha/ip_tagging.proto"
  }
}
types {
  key: "envoy.config.filter.http.jwt_authn.v2alpha.FilterStateRule"
  value {
    qualified_package: "envoy.config.filter.http.jwt_authn.v2alpha"
    proto_path: "envoy/config/filter/http/jwt_authn/v2alpha/config.proto"
    next_version_type_name: "envoy.config.filter.http.jwt_authn.v3alpha.FilterStateRule"
  }
}
types {
  key: "envoy.config.filter.http.jwt_authn.v2alpha.FilterStateRule.RequiresEntry"
  value {
    qualified_package: "envoy.config.filter.http.jwt_authn.v2alpha"
    proto_path: "envoy/config/filter/http/jwt_authn/v2alpha/config.proto"
    next_version_type_name: "envoy.config.filter.http.jwt_authn.v3alpha.FilterStateRule.RequiresEntry"
  }
}
types {
  key: "envoy.config.filter.http.jwt_authn.v2alpha.JwtAuthentication"
  value {
    qualified_package: "envoy.config.filter.http.jwt_authn.v2alpha"
    proto_path: "envoy/config/filter/http/jwt_authn/v2alpha/config.proto"
    next_version_type_name: "envoy.config.filter.http.jwt_authn.v3alpha.JwtAuthentication"
  }
}
types {
  key: "envoy.config.filter.http.jwt_authn.v2alpha.JwtAuthentication.ProvidersEntry"
  value {
    qualified_package: "envoy.config.filter.http.jwt_authn.v2alpha"
    proto_path: "envoy/config/filter/http/jwt_authn/v2alpha/config.proto"
    next_version_type_name: "envoy.config.filter.http.jwt_authn.v3alpha.JwtAuthentication.ProvidersEntry"
  }
}
types {
  key: "envoy.config.filter.http.jwt_authn.v2alpha.JwtHeader"
  value {
    qualified_package: "envoy.config.filter.http.jwt_authn.v2alpha"
    proto_path: "envoy/config/filter/http/jwt_authn/v2alpha/config.proto"
    next_version_type_name: "envoy.config.filter.http.jwt_authn.v3alpha.JwtHeader"
  }
}
types {
  key: "envoy.config.filter.http.jwt_authn.v2alpha.JwtProvider"
  value {
    qualified_package: "envoy.config.filter.http.jwt_authn.v2alpha"
    proto_path: "envoy/config/filter/http/jwt_authn/v2alpha/config.proto"
    next_version_type_name: "envoy.config.filter.http.jwt_authn.v3alpha.JwtProvider"
  }
}
types {
  key: "envoy.config.filter.http.jwt_authn.v2alpha.JwtRequirement"
  value {
    qualified_package: "envoy.config.filter.http.jwt_authn.v2alpha"
    proto_path: "envoy/config/filter/http/jwt_authn/v2alpha/config.proto"
    next_version_type_name: "envoy.config.filter.http.jwt_authn.v3alpha.JwtRequirement"
  }
}
types {
  key: "envoy.config.filter.http.jwt_authn.v2alpha.JwtRequirementAndList"
  value {
    qualified_package: "envoy.config.filter.http.jwt_authn.v2alpha"
    proto_path: "envoy/config/filter/http/jwt_authn/v2alpha/config.proto"
    next_version_type_name: "envoy.config.filter.http.jwt_authn.v3alpha.JwtRequirementAndList"
  }
}
types {
  key: "envoy.config.filter.http.jwt_authn.v2alpha.JwtRequirementOrList"
  value {
    qualified_package: "envoy.config.filter.http.jwt_authn.v2alpha"
    proto_path: "envoy/config/filter/http/jwt_authn/v2alpha/config.proto"
    next_version_type_name: "envoy.config.filter.http.jwt_authn.v3alpha.JwtRequirementOrList"
  }
}
types {
  key: "envoy.config.filter.http.jwt_authn.v2alpha.ProviderWithAudiences"
  value {
    qualified_package: "envoy.config.filter.http.jwt_authn.v2alpha"
    proto_path: "envoy/config/filter/http/jwt_authn/v2alpha/config.proto"
    next_version_type_name: "envoy.config.filter.http.jwt_authn.v3alpha.ProviderWithAudiences"
  }
}
types {
  key: "envoy.config.filter.http.jwt_authn.v2alpha.RemoteJwks"
  value {
    qualified_package: "envoy.config.filter.http.jwt_authn.v2alpha"
    proto_path: "envoy/config/filter/http/jwt_authn/v2alpha/config.proto"
    next_version_type_name: "envoy.config.filter.http.jwt_authn.v3alpha.RemoteJwks"
  }
}
types {
  key: "envoy.config.filter.http.jwt_authn.v2alpha.RequirementRule"
  value {
    qualified_package: "envoy.config.filter.http.jwt_authn.v2alpha"
    proto_path: "envoy/config/filter/http/jwt_authn/v2alpha/config.proto"
    next_version_type_name: "envoy.config.filter.http.jwt_authn.v3alpha.RequirementRule"
  }
}
types {
  key: "envoy.config.filter.http.jwt_authn.v3alpha.FilterStateRule"
  value {
    qualified_package: "envoy.config.filter.http.jwt_authn.v3alpha"
    proto_path: "envoy/config/filter/http/jwt_authn/v3alpha/config.proto"
  }
}
types {
  key: "envoy.config.filter.http.jwt_authn.v3alpha.FilterStateRule.RequiresEntry"
  value {
    qualified_package: "envoy.config.filter.http.jwt_authn.v3alpha"
    proto_path: "envoy/config/filter/http/jwt_authn/v3alpha/config.proto"
  }
}
types {
  key: "envoy.config.filter.http.jwt_authn.v3alpha.JwtAuthentication"
  value {
    qualified_package: "envoy.config.filter.http.jwt_authn.v3alpha"
    proto_path: "envoy/config/filter/http/jwt_authn/v3alpha/config.proto"
  }
}
types {
  key: "envoy.config.filter.http.jwt_authn.v3alpha.JwtAuthentication.ProvidersEntry"
  value {
    qualified_package: "envoy.config.filter.http.jwt_authn.v3alpha"
    proto_path: "envoy/config/filter/http/jwt_authn/v3alpha/config.proto"
  }
}
types {
  key: "envoy.config.filter.http.jwt_authn.v3alpha.JwtHeader"
  value {
    qualified_package: "envoy.config.filter.http.jwt_authn.v3alpha"
    proto_path: "envoy/config/filter/http/jwt_authn/v3alpha/config.proto"
  }
}
types {
  key: "envoy.config.filter.http.jwt_authn.v3alpha.JwtProvider"
  value {
    qualified_package: "envoy.config.filter.http.jwt_authn.v3alpha"
    proto_path: "envoy/config/filter/http/jwt_authn/v3alpha/config.proto"
  }
}
types {
  key: "envoy.config.filter.http.jwt_authn.v3alpha.JwtRequirement"
  value {
    qualified_package: "envoy.config.filter.http.jwt_authn.v3alpha"
    proto_path: "envoy/config/filter/http/jwt_authn/v3alpha/config.proto"
  }
}
types {
  key: "envoy.config.filter.http.jwt_authn.v3alpha.JwtRequirementAndList"
  value {
    qualified_package: "envoy.config.filter.http.jwt_authn.v3alpha"
    proto_path: "envoy/config/filter/http/jwt_authn/v3alpha/config.proto"
  }
}
types {
  key: "envoy.config.filter.http.jwt_authn.v3alpha.JwtRequirementOrList"
  value {
    qualified_package: "envoy.config.filter.http.jwt_authn.v3alpha"
    proto_path: "envoy/config/filter/http/jwt_authn/v3alpha/config.proto"
  }
}
types {
  key: "envoy.config.filter.http.jwt_authn.v3alpha.ProviderWithAudiences"
  value {
    qualified_package: "envoy.config.filter.http.jwt_authn.v3alpha"
    proto_path: "envoy/config/filter/http/jwt_authn/v3alpha/config.proto"
  }
}
types {
  key: "envoy.config.filter.http.jwt_authn.v3alpha.RemoteJwks"
  value {
    qualified_package: "envoy.config.filter.http.jwt_authn.v3alpha"
    proto_path: "envoy/config/filter/http/jwt_authn/v3alpha/config.proto"
  }
}
types {
  key: "envoy.config.filter.http.jwt_authn.v3alpha.RequirementRule"
  value {
    qualified_package: "envoy.config.filter.http.jwt_authn.v3alpha"
    proto_path: "envoy/config/filter/http/jwt_authn/v3alpha/config.proto"
  }
}
types {
  key: "envoy.config.filter.http.lua.v2.Lua"
  value {
    qualified_package: "envoy.config.filter.http.lua.v2"
    proto_path: "envoy/config/filter/http/lua/v2/lua.proto"
  }
}
types {
  key: "envoy.config.filter.http.original_src.v2alpha1.OriginalSrc"
  value {
    qualified_package: "envoy.config.filter.http.original_src.v2alpha1"
    proto_path: "envoy/config/filter/http/original_src/v2alpha1/original_src.proto"
  }
}
types {
  key: "envoy.config.filter.http.rate_limit.v2.RateLimit"
  value {
    qualified_package: "envoy.config.filter.http.rate_limit.v2"
    proto_path: "envoy/config/filter/http/rate_limit/v2/rate_limit.proto"
    next_version_type_name: "envoy.config.filter.http.rate_limit.v3alpha.RateLimit"
  }
}
types {
  key: "envoy.config.filter.http.rate_limit.v3alpha.RateLimit"
  value {
    qualified_package: "envoy.config.filter.http.rate_limit.v3alpha"
    proto_path: "envoy/config/filter/http/rate_limit/v3alpha/rate_limit.proto"
  }
}
types {
  key: "envoy.config.filter.http.rbac.v2.RBAC"
  value {
    qualified_package: "envoy.config.filter.http.rbac.v2"
    proto_path: "envoy/config/filter/http/rbac/v2/rbac.proto"
    next_version_type_name: "envoy.config.filter.http.rbac.v3alpha.RBAC"
  }
}
types {
  key: "envoy.config.filter.http.rbac.v2.RBACPerRoute"
  value {
    qualified_package: "envoy.config.filter.http.rbac.v2"
    proto_path: "envoy/config/filter/http/rbac/v2/rbac.proto"
    next_version_type_name: "envoy.config.filter.http.rbac.v3alpha.RBACPerRoute"
  }
}
types {
  key: "envoy.config.filter.http.rbac.v3alpha.RBAC"
  value {
    qualified_package: "envoy.config.filter.http.rbac.v3alpha"
    proto_path: "envoy/config/filter/http/rbac/v3alpha/rbac.proto"
  }
}
types {
  key: "envoy.config.filter.http.rbac.v3alpha.RBACPerRoute"
  value {
    qualified_package: "envoy.config.filter.http.rbac.v3alpha"
    proto_path: "envoy/config/filter/http/rbac/v3alpha/rbac.proto"
  }
}
types {
  key: "envoy.config.filter.http.router.v2.Router"
  value {
    qualified_package: "envoy.config.filter.http.router.v2"
    proto_path: "envoy/config/filter/http/router/v2/router.proto"
    next_version_type_name: "envoy.config.filter.http.router.v3alpha.Router"
  }
}
types {
  key: "envoy.config.filter.http.router.v3alpha.Router"
  value {
    qualified_package: "envoy.config.filter.http.router.v3alpha"
    proto_path: "envoy/config/filter/http/router/v3alpha/router.proto"
  }
}
types {
  key: "envoy.config.filter.http.squash.v2.Squash"
  value {
    qualified_package: "envoy.config.filter.http.squash.v2"
    proto_path: "envoy/config/filter/http/squash/v2/squash.proto"
  }
}
types {
  key: "envoy.config.filter.http.tap.v2alpha.Tap"
  value {
    qualified_package: "envoy.config.filter.http.tap.v2alpha"
    proto_path: "envoy/config/filter/http/tap/v2alpha/tap.proto"
    next_version_type_name: "envoy.config.filter.http.tap.v3alpha.Tap"
  }
}
types {
  key: "envoy.config.filter.http.tap.v3alpha.Tap"
  value {
    qualified_package: "envoy.config.filter.http.tap.v3alpha"
    proto_path: "envoy/config/filter/http/tap/v3alpha/tap.proto"
  }
}
types {
  key: "envoy.config.filter.http.transcoder.v2.GrpcJsonTranscoder"
  value {
    qualified_package: "envoy.config.filter.http.transcoder.v2"
    proto_path: "envoy/config/filter/http/transcoder/v2/transcoder.proto"
  }
}
types {
  key: "envoy.config.filter.http.transcoder.v2.GrpcJsonTranscoder.PrintOptions"
  value {
    qualified_package: "envoy.config.filter.http.transcoder.v2"
    proto_path: "envoy/config/filter/http/transcoder/v2/transcoder.proto"
  }
}
types {
  key: "envoy.config.filter.listener.original_src.v2alpha1.OriginalSrc"
  value {
    qualified_package: "envoy.config.filter.listener.original_src.v2alpha1"
    proto_path: "envoy/config/filter/listener/original_src/v2alpha1/original_src.proto"
  }
}
types {
  key: "envoy.config.filter.network.client_ssl_auth.v2.ClientSSLAuth"
  value {
    qualified_package: "envoy.config.filter.network.client_ssl_auth.v2"
    proto_path: "envoy/config/filter/network/client_ssl_auth/v2/client_ssl_auth.proto"
    next_version_type_name: "envoy.config.filter.network.client_ssl_auth.v3alpha.ClientSSLAuth"
  }
}
types {
  key: "envoy.config.filter.network.client_ssl_auth.v3alpha.ClientSSLAuth"
  value {
    qualified_package: "envoy.config.filter.network.client_ssl_auth.v3alpha"
    proto_path: "envoy/config/filter/network/client_ssl_auth/v3alpha/client_ssl_auth.proto"
  }
}
types {
  key: "envoy.config.filter.network.dubbo_proxy.v2alpha1.DubboFilter"
  value {
    qualified_package: "envoy.config.filter.network.dubbo_proxy.v2alpha1"
    proto_path: "envoy/config/filter/network/dubbo_proxy/v2alpha1/dubbo_proxy.proto"
    next_version_type_name: "envoy.config.filter.network.dubbo_proxy.v3alpha.DubboFilter"
  }
}
types {
  key: "envoy.config.filter.network.dubbo_proxy.v2alpha1.DubboProxy"
  value {
    qualified_package: "envoy.config.filter.network.dubbo_proxy.v2alpha1"
    proto_path: "envoy/config/filter/network/dubbo_proxy/v2alpha1/dubbo_proxy.proto"
    next_version_type_name: "envoy.config.filter.network.dubbo_proxy.v3alpha.DubboProxy"
  }
}
types {
  key: "envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch"
  value {
    qualified_package: "envoy.config.filter.network.dubbo_proxy.v2alpha1"
    proto_path: "envoy/config/filter/network/dubbo_proxy/v2alpha1/route.proto"
    next_version_type_name: "envoy.config.filter.network.dubbo_proxy.v3alpha.MethodMatch"
  }
}
types {
  key: "envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParameterMatchSpecifier"
  value {
    qualified_package: "envoy.config.filter.network.dubbo_proxy.v2alpha1"
    proto_path: "envoy/config/filter/network/dubbo_proxy/v2alpha1/route.proto"
    next_version_type_name: "envoy.config.filter.network.dubbo_proxy.v3alpha.MethodMatch.ParameterMatchSpecifier"
  }
}
types {
  key: "envoy.config.filter.network.dubbo_proxy.v2alpha1.MethodMatch.ParamsMatchEntry"
  value {
    qualified_package: "envoy.config.filter.network.dubbo_proxy.v2alpha1"
    proto_path: "envoy/config/filter/network/dubbo_proxy/v2alpha1/route.proto"
    next_version_type_name: "envoy.config.filter.network.dubbo_proxy.v3alpha.MethodMatch.ParamsMatchEntry"
  }
}
types {
  key: "envoy.config.filter.network.dubbo_proxy.v2alpha1.ProtocolType"
  value {
    qualified_package: "envoy.config.filter.network.dubbo_proxy.v2alpha1"
    proto_path: "envoy/config/filter/network/dubbo_proxy/v2alpha1/dubbo_proxy.proto"
    next_version_type_name: "envoy.config.filter.network.dubbo_proxy.v3alpha.ProtocolType"
  }
}
types {
  key: "envoy.config.filter.network.dubbo_proxy.v2alpha1.Route"
  value {
    qualified_package: "envoy.config.filter.network.dubbo_proxy.v2alpha1"
    proto_path: "envoy/config/filter/network/dubbo_proxy/v2alpha1/route.proto"
    next_version_type_name: "envoy.config.filter.network.dubbo_proxy.v3alpha.Route"
  }
}
types {
  key: "envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteAction"
  value {
    qualified_package: "envoy.config.filter.network.dubbo_proxy.v2alpha1"
    proto_path: "envoy/config/filter/network/dubbo_proxy/v2alpha1/route.proto"
    next_version_type_name: "envoy.config.filter.network.dubbo_proxy.v3alpha.RouteAction"
  }
}
types {
  key: "envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteConfiguration"
  value {
    qualified_package: "envoy.config.filter.network.dubbo_proxy.v2alpha1"
    proto_path: "envoy/config/filter/network/dubbo_proxy/v2alpha1/route.proto"
    next_version_type_name: "envoy.config.filter.network.dubbo_proxy.v3alpha.RouteConfiguration"
  }
}
types {
  key: "envoy.config.filter.network.dubbo_proxy.v2alpha1.RouteMatch"
  value {
    qualified_package: "envoy.config.filter.network.dubbo_proxy.v2alpha1"
    proto_path: "envoy/config/filter/network/dubbo_proxy/v2alpha1/route.proto"
    next_version_type_name: "envoy.config.filter.network.dubbo_proxy.v3alpha.RouteMatch"
  }
}
types {
  key: "envoy.config.filter.network.dubbo_proxy.v2alpha1.SerializationType"
  value {
    qualified_package: "envoy.config.filter.network.dubbo_proxy.v2alpha1"
    proto_path: "envoy/config/filter/network/dubbo_proxy/v2alpha1/dubbo_proxy.proto"
    next_version_type_name: "envoy.config.filter.network.dubbo_proxy.v3alpha.SerializationType"
  }
}
types {
  key: "envoy.config.filter.network.dubbo_proxy.v3alpha.DubboFilter"
  value {
    qualified_package: "envoy.config.filter.network.dubbo_proxy.v3alpha"
    proto_path: "envoy/config/filter/network/dubbo_proxy/v3alpha/dubbo_proxy.proto"
  }
}
types {
  key: "envoy.config.filter.network.dubbo_proxy.v3alpha.DubboProxy"
  value {
    qualified_package: "envoy.config.filter.network.dubbo_proxy.v3alpha"
    proto_path: "envoy/config/filter/network/dubbo_proxy/v3alpha/dubbo_proxy.proto"
  }
}
types {
  key: "envoy.config.filter.network.dubbo_proxy.v3alpha.MethodMatch"
  value {
    qualified_package: "envoy.config.filter.network.dubbo_proxy.v3alpha"
    proto_path: "envoy/config/filter/network/dubbo_proxy/v3alpha/route.proto"
  }
}
types {
  key: "envoy.config.filter.network.dubbo_proxy.v3alpha.MethodMatch.ParameterMatchSpecifier"
  value {
    qualified_package: "envoy.config.filter.network.dubbo_proxy.v3alpha"
    proto_path: "envoy/config/filter/network/dubbo_proxy/v3alpha/route.proto"
  }
}
types {
  key: "envoy.config.filter.network.dubbo_proxy.v3alpha.MethodMatch.ParamsMatchEntry"
  value {
    qualified_package: "envoy.config.filter.network.dubbo_proxy.v3alpha"
    proto_path: "envoy/config/filter/network/dubbo_proxy/v3alpha/route.proto"
  }
}
types {
  key: "envoy.config.filter.network.dubbo_proxy.v3alpha.ProtocolType"
  value {
    qualified_package: "envoy.config.filter.network.dubbo_proxy.v3alpha"
    proto_path: "envoy/config/filter/network/dubbo_proxy/v3alpha/dubbo_proxy.proto"
  }
}
types {
  key: "envoy.config.filter.network.dubbo_proxy.v3alpha.Route"
  value {
    qualified_package: "envoy.config.filter.network.dubbo_proxy.v3alpha"
    proto_path: "envoy/config/filter/network/dubbo_proxy/v3alpha/route.proto"
  }
}
types {
  key: "envoy.config.filter.network.dubbo_proxy.v3alpha.RouteAction"
  value {
    qualified_package: "envoy.config.filter.network.dubbo_proxy.v3alpha"
    proto_path: "envoy/config/filter/network/dubbo_proxy/v3alpha/route.proto"
  }
}
types {
  key: "envoy.config.filter.network.dubbo_proxy.v3alpha.RouteConfiguration"
  value {
    qualified_package: "envoy.config.filter.network.dubbo_proxy.v3alpha"
    proto_path: "envoy/config/filter/network/dubbo_proxy/v3alpha/route.proto"
  }
}
types {
  key: "envoy.config.filter.network.dubbo_proxy.v3alpha.RouteMatch"
  value {
    qualified_package: "envoy.config.filter.network.dubbo_proxy.v3alpha"
    proto_path: "envoy/config/filter/network/dubbo_proxy/v3alpha/route.proto"
  }
}
types {
  key: "envoy.config.filter.network.dubbo_proxy.v3alpha.SerializationType"
  value {
    qualified_package: "envoy.config.filter.network.dubbo_proxy.v3alpha"
    proto_path: "envoy/config/filter/network/dubbo_proxy/v3alpha/dubbo_proxy.proto"
  }
}
types {
  key: "envoy.config.filter.network.ext_authz.v2.ExtAuthz"
  value {
    qualified_package: "envoy.config.filter.network.ext_authz.v2"
    proto_path: "envoy/config/filter/network/ext_authz/v2/ext_authz.proto"
    next_version_type_name: "envoy.config.filter.network.ext_authz.v3alpha.ExtAuthz"
  }
}
types {
  key: "envoy.config.filter.network.ext_authz.v3alpha.ExtAuthz"
  value {
    qualified_package: "envoy.config.filter.network.ext_authz.v3alpha"
    proto_path: "envoy/config/filter/network/ext_authz/v3alpha/ext_authz.proto"
  }
}
types {
  key: "envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager"
  value {
    qualified_package: "envoy.config.filter.network.http_connection_manager.v2"
    proto_path: "envoy/config/filter/network/http_connection_manager/v2/http_connection_manager.proto"
    next_version_type_name: "envoy.config.filter.network.http_connection_manager.v3alpha.HttpConnectionManager"
  }
}
types {
  key: "envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager.CodecType"
  value {
    qualified_package: "envoy.config.filter.network.http_connection_manager.v2"
    proto_path: "envoy/config/filter/network/http_connection_manager/v2/http_connection_manager.proto"
    next_version_type_name: "envoy.config.filter.network.http_connection_manager.v3alpha.HttpConnectionManager.CodecType"
  }
}
types {
  key: "envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager.ForwardClientCertDetails"
  value {
    qualified_package: "envoy.config.filter.network.http_connection_manager.v2"
    proto_path: "envoy/config/filter/network/http_connection_manager/v2/http_connection_manager.proto"
    next_version_type_name: "envoy.config.filter.network.http_connection_manager.v3alpha.HttpConnectionManager.ForwardClientCertDetails"
  }
}
types {
  key: "envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager.InternalAddressConfig"
  value {
    qualified_package: "envoy.config.filter.network.http_connection_manager.v2"
    proto_path: "envoy/config/filter/network/http_connection_manager/v2/http_connection_manager.proto"
    next_version_type_name: "envoy.config.filter.network.http_connection_manager.v3alpha.HttpConnectionManager.InternalAddressConfig"
  }
}
types {
  key: "envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager.ServerHeaderTransformation"
  value {
    qualified_package: "envoy.config.filter.network.http_connection_manager.v2"
    proto_path: "envoy/config/filter/network/http_connection_manager/v2/http_connection_manager.proto"
    next_version_type_name: "envoy.config.filter.network.http_connection_manager.v3alpha.HttpConnectionManager.ServerHeaderTransformation"
  }
}
types {
  key: "envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager.SetCurrentClientCertDetails"
  value {
    qualified_package: "envoy.config.filter.network.http_connection_manager.v2"
    proto_path: "envoy/config/filter/network/http_connection_manager/v2/http_connection_manager.proto"
    next_version_type_name: "envoy.config.filter.network.http_connection_manager.v3alpha.HttpConnectionManager.SetCurrentClientCertDetails"
  }
}
types {
  key: "envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager.Tracing"
  value {
    qualified_package: "envoy.config.filter.network.http_connection_manager.v2"
    proto_path: "envoy/config/filter/network/http_connection_manager/v2/http_connection_manager.proto"
    next_version_type_name: "envoy.config.filter.network.http_connection_manager.v3alpha.HttpConnectionManager.Tracing"
  }
}
types {
  key: "envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager.Tracing.OperationName"
  value {
    qualified_package: "envoy.config.filter.network.http_connection_manager.v2"
    proto_path: "envoy/config/filter/network/http_connection_manager/v2/http_connection_manager.proto"
    next_version_type_name: "envoy.config.filter.network.http_connection_manager.v3alpha.HttpConnectionManager.Tracing.OperationName"
  }
}
types {
  key: "envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager.UpgradeConfig"
  value {
    qualified_package: "envoy.config.filter.network.http_connection_manager.v2"
    proto_path: "envoy/config/filter/network/http_connection_manager/v2/http_connection_manager.proto"
    next_version_type_name: "envoy.config.filter.network.http_connection_manager.v3alpha.HttpConnectionManager.UpgradeConfig"
  }
}
types {
  key: "envoy.config.filter.network.http_connection_manager.v2.HttpFilter"
  value {
    qualified_package: "envoy.config.filter.network.http_connection_manager.v2"
    proto_path: "envoy/config/filter/network/http_connection_manager/v2/http_connection_manager.proto"
    next_version_type_name: "envoy.config.filter.network.http_connection_manager.v3alpha.HttpFilter"
  }
}
types {
  key: "envoy.config.filter.network.http_connection_manager.v2.Rds"
  value {
    qualified_package: "envoy.config.filter.network.http_connection_manager.v2"
    proto_path: "envoy/config/filter/network/http_connection_manager/v2/http_connection_manager.proto"
    next_version_type_name: "envoy.config.filter.network.http_connection_manager.v3alpha.Rds"
  }
}
types {
  key: "envoy.config.filter.network.http_connection_manager.v2.ScopedRds"
  value {
    qualified_package: "envoy.config.filter.network.http_connection_manager.v2"
    proto_path: "envoy/config/filter/network/http_connection_manager/v2/http_connection_manager.proto"
    next_version_type_name: "envoy.config.filter.network.http_connection_manager.v3alpha.ScopedRds"
  }
}
types {
  key: "envoy.config.filter.network.http_connection_manager.v2.ScopedRouteConfigurationsList"
  value {
    qualified_package: "envoy.config.filter.network.http_connection_manager.v2"
    proto_path: "envoy/config/filter/network/http_connection_manager/v2/http_connection_manager.proto"
    next_version_type_name: "envoy.config.filter.network.http_connection_manager.v3alpha.ScopedRouteConfigurationsList"
  }
}
types {
  key: "envoy.config.filter.network.http_connection_manager.v2.ScopedRoutes"
  value {
    qualified_package: "envoy.config.filter.network.http_connection_manager.v2"
    proto_path: "envoy/config/filter/network/http_connection_manager/v2/http_connection_manager.proto"
    next_version_type_name: "envoy.config.filter.network.http_connection_manager.v3alpha.ScopedRoutes"
  }
}
types {
  key: "envoy.config.filter.network.http_connection_manager.v2.ScopedRoutes.ScopeKeyBuilder"
  value {
    qualified_package: "envoy.config.filter.network.http_connection_manager.v2"
    proto_path: "envoy/config/filter/network/http_connection_manager/v2/http_connection_manager.proto"
    next_version_type_name: "envoy.config.filter.network.http_connection_manager.v3alpha.ScopedRoutes.ScopeKeyBuilder"
  }
}
types {
  key: "envoy.config.filter.network.http_connection_manager.v2.ScopedRoutes.ScopeKeyBuilder.FragmentBuilder"
  value {
    qualified_package: "envoy.config.filter.network.http_connection_manager.v2"
    proto_path: "envoy/config/filter/network/http_connection_manager/v2/http_connection_manager.proto"
    next_version_type_name: "envoy.config.filter.network.http_connection_manager.v3alpha.ScopedRoutes.ScopeKeyBuilder.FragmentBuilder"
  }
}
types {
  key: "envoy.config.filter.network.http_connection_manager.v2.ScopedRoutes.ScopeKeyBuilder.FragmentBuilder.HeaderValueExtractor"
  value {
    qualified_package: "envoy.config.filter.network.http_connection_manager.v2"
    proto_path: "envoy/config/filter/network/http_connection_manager/v2/http_connection_manager.proto"
    next_version_type_name: "envoy.config.filter.network.http_connection_manager.v3alpha.ScopedRoutes.ScopeKeyBuilder.FragmentBuilder.HeaderValueExtractor"
  }
}
types {
  key: "envoy.config.filter.network.http_connection_manager.v2.ScopedRoutes.ScopeKeyBuilder.FragmentBuilder.HeaderValueExtractor.KvElement"
  value {
    qualified_package: "envoy.config.filter.network.http_connection_manager.v2"
    proto_path: "envoy/config/filter/network/http_connection_manager/v2/http_connection_manager.proto"
    next_version_type_name: "envoy.config.filter.network.http_connection_manager.v3alpha.ScopedRoutes.ScopeKeyBuilder.FragmentBuilder.HeaderValueExtractor.KvElement"
  }
}
types {
  key: "envoy.config.filter.network.http_connection_manager.v3alpha.HttpConnectionManager"
  value {
    qualified_package: "envoy.config.filter.network.http_connection_manager.v3alpha"
    proto_path: "envoy/config/filter/network/http_connection_manager/v3alpha/http_connection_manager.proto"
  }
}
types {
  key: "envoy.config.filter.network.http_connection_manager.v3alpha.HttpConnectionManager.CodecType"
  value {
    qualified_package: "envoy.config.filter.network.http_connection_manager.v3alpha"
    proto_path: "envoy/config/filter/network/http_connection_manager/v3alpha/http_connection_manager.proto"
  }
}
types {
  key: "envoy.config.filter.network.http_connection_manager.v3alpha.HttpConnectionManager.ForwardClientCertDetails"
  value {
    qualified_package: "envoy.config.filter.network.http_connection_manager.v3alpha"
    proto_path: "envoy/config/filter/network/http_connection_manager/v3alpha/http_connection_manager.proto"
  }
}
types {
  key: "envoy.config.filter.network.http_connection_manager.v3alpha.HttpConnectionManager.InternalAddressConfig"
  value {
    qualified_package: "envoy.config.filter.network.http_connection_manager.v3alpha"
    proto_path: "envoy/config/filter/network/http_connection_manager/v3alpha/http_connection_manager.proto"
  }
}
types {
  key: "envoy.config.filter.network.http_connection_manager.v3alpha.HttpConnectionManager.ServerHeaderTransformation"
  value {
    qualified_package: "envoy.config.filter.network.http_connection_manager.v3alpha"
    proto_path: "envoy/config/filter/network/http_connection_manager/v3alpha/http_connection_manager.proto"
  }
}
types {
  key: "envoy.config.filter.network.http_connection_manager.v3alpha.HttpConnectionManager.SetCurrentClientCertDetails"
  value {
    qualified_package: "envoy.config.filter.network.http_connection_manager.v3alpha"
    proto_path: "envoy/config/filter/network/http_connection_manager/v3alpha/http_connection_manager.proto"
  }
}
types {
  key: "envoy.config.filter.network.http_connection_manager.v3alpha.HttpConnectionManager.Tracing"
  value {
    qualified_package: "envoy.config.filter.network.http_connection_manager.v3alpha"
    proto_path: "envoy/config/filter/network/http_connection_manager/v3alpha/http_connection_manager.proto"
  }
}
types {
  key: "envoy.config.filter.network.http_connection_manager.v3alpha.HttpConnectionManager.Tracing.OperationName"
  value {
    qualified_package: "envoy.config.filter.network.http_connection_manager.v3alpha"
    proto_path: "envoy/config/filter/network/http_connection_manager/v3alpha/http_connection_manager.proto"
  }
}
types {
  key: "envoy.config.filter.network.http_connection_manager.v3alpha.HttpConnectionManager.UpgradeConfig"
  value {
    qualified_package: "envoy.config.filter.network.http_connection_manager.v3alpha"
    proto_path: "envoy/config/filter/network/http_connection_manager/v3alpha/http_connection_manager.proto"
  }
}
types {
  key: "envoy.config.filter.network.http_connection_manager.v3alpha.HttpFilter"
  value {
    qualified_package: "envoy.config.filter.network.http_connection_manager.v3alpha"
    proto_path: "envoy/config/filter/network/http_connection_manager/v3alpha/http_connection_manager.proto"
  }
}
types {
  key: "envoy.config.filter.network.http_connection_manager.v3alpha.Rds"
  value {
    qualified_package: "envoy.config.filter.network.http_connection_manager.v3alpha"
    proto_path: "envoy/config/filter/network/http_connection_manager/v3alpha/http_connection_manager.proto"
  }
}
types {
  key: "envoy.config.filter.network.http_connection_manager.v3alpha.ScopedRds"
  value {
    qualified_package: "envoy.config.filter.network.http_connection_manager.v3alpha"
    proto_path: "envoy/config/filter/network/http_connection_manager/v3alpha/http_connection_manager.proto"
  }
}
types {
  key: "envoy.config.filter.network.http_connection_manager.v3alpha.ScopedRouteConfigurationsList"
  value {
    qualified_package: "envoy.config.filter.network.http_connection_manager.v3alpha"
    proto_path: "envoy/config/filter/network/http_connection_manager/v3alpha/http_connection_manager.proto"
  }
}
types {
  key: "envoy.config.filter.network.http_connection_manager.v3alpha.ScopedRoutes"
  value {
    qualified_package: "envoy.config.filter.network.http_connection_manager.v3alpha"
    proto_path: "envoy/config/filter/network/http_connection_manager/v3alpha/http_connection_manager.proto"
  }
}
types {
  key: "envoy.config.filter.network.http_connection_manager.v3alpha.ScopedRoutes.ScopeKeyBuilder"
  value {
    qualified_package: "envoy.config.filter.network.http_connection_manager.v3alpha"
    proto_path: "envoy/config/filter/network/http_connection_manager/v3alpha/http_connection_manager.proto"
  }
}
types {
  key: "envoy.config.filter.network.http_connection_manager.v3alpha.ScopedRoutes.ScopeKeyBuilder.FragmentBuilder"
  value {
    qualified_package: "envoy.config.filter.network.http_connection_manager.v3alpha"
    proto_path: "envoy/config/filter/network/http_connection_manager/v3alpha/http_connection_manager.proto"
  }
}
types {
  key: "envoy.config.filter.network.http_connection_manager.v3alpha.ScopedRoutes.ScopeKeyBuilder.FragmentBuilder.HeaderValueExtractor"
  value {
    qualified_package: "envoy.config.filter.network.http_connection_manager.v3alpha"
    proto_path: "envoy/config/filter/network/http_connection_manager/v3alpha/http_connection_manager.proto"
  }
}
types {
  key: "envoy.config.filter.network.http_connection_manager.v3alpha.ScopedRoutes.ScopeKeyBuilder.FragmentBuilder.HeaderValueExtractor.KvElement"
  value {
    qualified_package: "envoy.config.filter.network.http_connection_manager.v3alpha"
    proto_path: "envoy/config/filter/network/http_connection_manager/v3alpha/http_connection_manager.proto"
  }
}
types {
  key: "envoy.config.filter.network.mongo_proxy.v2.MongoProxy"
  value {
    qualified_package: "envoy.config.filter.network.mongo_proxy.v2"
    proto_path: "envoy/config/filter/network/mongo_proxy/v2/mongo_proxy.proto"
    next_version_type_name: "envoy.config.filter.network.mongo_proxy.v3alpha.MongoProxy"
  }
}
types {
  key: "envoy.config.filter.network.mongo_proxy.v3alpha.MongoProxy"
  value {
    qualified_package: "envoy.config.filter.network.mongo_proxy.v3alpha"
    proto_path: "envoy/config/filter/network/mongo_proxy/v3alpha/mongo_proxy.proto"
  }
}
types {
  key: "envoy.config.filter.network.rate_limit.v2.RateLimit"
  value {
    qualified_package: "envoy.config.filter.network.rate_limit.v2"
    proto_path: "envoy/config/filter/network/rate_limit/v2/rate_limit.proto"
    next_version_type_name: "envoy.config.filter.network.rate_limit.v3alpha.RateLimit"
  }
}
types {
  key: "envoy.config.filter.network.rate_limit.v3alpha.RateLimit"
  value {
    qualified_package: "envoy.config.filter.network.rate_limit.v3alpha"
    proto_path: "envoy/config/filter/network/rate_limit/v3alpha/rate_limit.proto"
  }
}
types {
  key: "envoy.config.filter.network.rbac.v2.RBAC"
  value {
    qualified_package: "envoy.config.filter.network.rbac.v2"
    proto_path: "envoy/config/filter/network/rbac/v2/rbac.proto"
    next_version_type_name: "envoy.config.filter.network.rbac.v3alpha.RBAC"
  }
}
types {
  key: "envoy.config.filter.network.rbac.v2.RBAC.EnforcementType"
  value {
    qualified_package: "envoy.config.filter.network.rbac.v2"
    proto_path: "envoy/config/filter/network/rbac/v2/rbac.proto"
    next_version_type_name: "envoy.config.filter.network.rbac.v3alpha.RBAC.EnforcementType"
  }
}
types {
  key: "envoy.config.filter.network.rbac.v3alpha.RBAC"
  value {
    qualified_package: "envoy.config.filter.network.rbac.v3alpha"
    proto_path: "envoy/config/filter/network/rbac/v3alpha/rbac.proto"
  }
}
types {
  key: "envoy.config.filter.network.rbac.v3alpha.RBAC.EnforcementType"
  value {
    qualified_package: "envoy.config.filter.network.rbac.v3alpha"
    proto_path: "envoy/config/filter/network/rbac/v3alpha/rbac.proto"
  }
}
types {
  key: "envoy.config.filter.network.redis_proxy.v2.RedisProtocolOptions"
  value {
    qualified_package: "envoy.config.filter.network.redis_proxy.v2"
    proto_path: "envoy/config/filter/network/redis_proxy/v2/redis_proxy.proto"
    next_version_type_name: "envoy.config.filter.network.redis_proxy.v3alpha.RedisProtocolOptions"
  }
}
types {
  key: "envoy.config.filter.network.redis_proxy.v2.RedisProxy"
  value {
    qualified_package: "envoy.config.filter.network.redis_proxy.v2"
    proto_path: "envoy/config/filter/network/redis_proxy/v2/redis_proxy.proto"
    next_version_type_name: "envoy.config.filter.network.redis_proxy.v3alpha.RedisProxy"
  }
}
types {
  key: "envoy.config.filter.network.redis_proxy.v2.RedisProxy.ConnPoolSettings"
  value {
    qualified_package: "envoy.config.filter.network.redis_proxy.v2"
    proto_path: "envoy/config/filter/network/redis_proxy/v2/redis_proxy.proto"
    next_version_type_name: "envoy.config.filter.network.redis_proxy.v3alpha.RedisProxy.ConnPoolSettings"
  }
}
types {
  key: "envoy.config.filter.network.redis_proxy.v2.RedisProxy.ConnPoolSettings.ReadPolicy"
  value {
    qualified_package: "envoy.config.filter.network.redis_proxy.v2"
    proto_path: "envoy/config/filter/network/redis_proxy/v2/redis_proxy.proto"
    next_version_type_name: "envoy.config.filter.network.redis_proxy.v3alpha.RedisProxy.ConnPoolSettings.ReadPolicy"
  }
}
types {
  key: "envoy.config.filter.network.redis_proxy.v2.RedisProxy.PrefixRoutes"
  value {
    qualified_package: "envoy.config.filter.network.redis_proxy.v2"
    proto_path: "envoy/config/filter/network/redis_proxy/v2/redis_proxy.proto"
    next_version_type_name: "envoy.config.filter.network.redis_proxy.v3alpha.RedisProxy.PrefixRoutes"
  }
}
types {
  key: "envoy.config.filter.network.redis_proxy.v2.RedisProxy.PrefixRoutes.Route"
  value {
    qualified_package: "envoy.config.filter.network.redis_proxy.v2"
    proto_path: "envoy/config/filter/network/redis_proxy/v2/redis_proxy.proto"
    next_version_type_name: "envoy.config.filter.network.redis_proxy.v3alpha.RedisProxy.PrefixRoutes.Route"
  }
}
types {
  key: "envoy.config.filter.network.redis_proxy.v2.RedisProxy.PrefixRoutes.Route.RequestMirrorPolicy"
  value {
    qualified_package: "envoy.config.filter.network.redis_proxy.v2"
    proto_path: "envoy/config/filter/network/redis_proxy/v2/redis_proxy.proto"
    next_version_type_name: "envoy.config.filter.network.redis_proxy.v3alpha.RedisProxy.PrefixRoutes.Route.RequestMirrorPolicy"
  }
}
types {
  key: "envoy.config.filter.network.redis_proxy.v3alpha.RedisProtocolOptions"
  value {
    qualified_package: "envoy.config.filter.network.redis_proxy.v3alpha"
    proto_path: "envoy/config/filter/network/redis_proxy/v3alpha/redis_proxy.proto"
  }
}
types {
  key: "envoy.config.filter.network.redis_proxy.v3alpha.RedisProxy"
  value {
    qualified_package: "envoy.config.filter.network.redis_proxy.v3alpha"
    proto_path: "envoy/config/filter/network/redis_proxy/v3alpha/redis_proxy.proto"
  }
}
types {
  key: "envoy.config.filter.network.redis_proxy.v3alpha.RedisProxy.ConnPoolSettings"
  value {
    qualified_package: "envoy.config.filter.network.redis_proxy.v3alpha"
    proto_path: "envoy/config/filter/network/redis_proxy/v3alpha/redis_proxy.proto"
  }
}
types {
  key: "envoy.config.filter.network.redis_proxy.v3alpha.RedisProxy.ConnPoolSettings.ReadPolicy"
  value {
    qualified_package: "envoy.config.filter.network.redis_proxy.v3alpha"
    proto_path: "envoy/config/filter/network/redis_proxy/v3alpha/redis_proxy.proto"
  }
}
types {
  key: "envoy.config.filter.network.redis_proxy.v3alpha.RedisProxy.PrefixRoutes"
  value {
    qualified_package: "envoy.config.filter.network.redis_proxy.v3alpha"
    proto_path: "envoy/config/filter/network/redis_proxy/v3alpha/redis_proxy.proto"
  }
}
types {
  key: "envoy.config.filter.network.redis_proxy.v3alpha.RedisProxy.PrefixRoutes.Route"
  value {
    qualified_package: "envoy.config.filter.network.redis_proxy.v3alpha"
    proto_path: "envoy/config/filter/network/redis_proxy/v3alpha/redis_proxy.proto"
  }
}
types {
  key: "envoy.config.filter.network.redis_proxy.v3alpha.RedisProxy.PrefixRoutes.Route.RequestMirrorPolicy"
  value {
    qualified_package: "envoy.config.filter.network.redis_proxy.v3alpha"
    proto_path: "envoy/config/filter/network/redis_proxy/v3alpha/redis_proxy.proto"
  }
}
types {
  key: "envoy.config.filter.network.tcp_proxy.v2.TcpProxy"
  value {
    qualified_package: "envoy.config.filter.network.tcp_proxy.v2"
    proto_path: "envoy/config/filter/network/tcp_proxy/v2/tcp_proxy.proto"
    next_version_type_name: "envoy.config.filter.network.tcp_proxy.v3alpha.TcpProxy"
  }
}
types {
  key: "envoy.config.filter.network.tcp_proxy.v2.TcpProxy.DeprecatedV1"
  value {
    qualified_package: "envoy.config.filter.network.tcp_proxy.v2"
    proto_path: "envoy/config/filter/network/tcp_proxy/v2/tcp_proxy.proto"
    next_version_type_name: "envoy.config.filter.network.tcp_proxy.v3alpha.TcpProxy.DeprecatedV1"
  }
}
types {
  key: "envoy.config.filter.network.tcp_proxy.v2.TcpProxy.DeprecatedV1.TCPRoute"
  value {
    qualified_package: "envoy.config.filter.network.tcp_proxy.v2"
    proto_path: "envoy/config/filter/network/tcp_proxy/v2/tcp_proxy.proto"
    next_version_type_name: "envoy.config.filter.network.tcp_proxy.v3alpha.TcpProxy.DeprecatedV1.TCPRoute"
  }
}
types {
  key: "envoy.config.filter.network.tcp_proxy.v2.TcpProxy.WeightedCluster"
  value {
    qualified_package: "envoy.config.filter.network.tcp_proxy.v2"
    proto_path: "envoy/config/filter/network/tcp_proxy/v2/tcp_proxy.proto"
    next_version_type_name: "envoy.config.filter.network.tcp_proxy.v3alpha.TcpProxy.WeightedCluster"
  }
}
types {
  key: "envoy.config.filter.network.tcp_proxy.v2.TcpProxy.WeightedCluster.ClusterWeight"
  value {
    qualified_package: "envoy.config.filter.network.tcp_proxy.v2"
    proto_path: "envoy/config/filter/network/tcp_proxy/v2/tcp_proxy.proto"
    next_version_type_name: "envoy.config.filter.network.tcp_proxy.v3alpha.TcpProxy.WeightedCluster.ClusterWeight"
  }
}
types {
  key: "envoy.config.filter.network.tcp_proxy.v3alpha.TcpProxy"
  value {
    qualified_package: "envoy.config.filter.network.tcp_proxy.v3alpha"
    proto_path: "envoy/config/filter/network/tcp_proxy/v3alpha/tcp_proxy.proto"
  }
}
types {
  key: "envoy.config.filter.network.tcp_proxy.v3alpha.TcpProxy.DeprecatedV1"
  value {
    qualified_package: "envoy.config.filter.network.tcp_proxy.v3alpha"
    proto_path: "envoy/config/filter/network/tcp_proxy/v3alpha/tcp_proxy.proto"
  }
}
types {
  key: "envoy.config.filter.network.tcp_proxy.v3alpha.TcpProxy.DeprecatedV1.TCPRoute"
  value {
    qualified_package: "envoy.config.filter.network.tcp_proxy.v3alpha"
    proto_path: "envoy/config/filter/network/tcp_proxy/v3alpha/tcp_proxy.proto"
  }
}
types {
  key: "envoy.config.filter.network.tcp_proxy.v3alpha.TcpProxy.WeightedCluster"
  value {
    qualified_package: "envoy.config.filter.network.tcp_proxy.v3alpha"
    proto_path: "envoy/config/filter/network/tcp_proxy/v3alpha/tcp_proxy.proto"
  }
}
types {
  key: "envoy.config.filter.network.tcp_proxy.v3alpha.TcpProxy.WeightedCluster.ClusterWeight"
  value {
    qualified_package: "envoy.config.filter.network.tcp_proxy.v3alpha"
    proto_path: "envoy/config/filter/network/tcp_proxy/v3alpha/tcp_proxy.proto"
  }
}
types {
  key: "envoy.config.filter.network.thrift_proxy.v2alpha1.ProtocolType"
  value {
    qualified_package: "envoy.config.filter.network.thrift_proxy.v2alpha1"
    proto_path: "envoy/config/filter/network/thrift_proxy/v2alpha1/thrift_proxy.proto"
    next_version_type_name: "envoy.config.filter.network.thrift_proxy.v3alpha.ProtocolType"
  }
}
types {
  key: "envoy.config.filter.network.thrift_proxy.v2alpha1.Route"
  value {
    qualified_package: "envoy.config.filter.network.thrift_proxy.v2alpha1"
    proto_path: "envoy/config/filter/network/thrift_proxy/v2alpha1/route.proto"
    next_version_type_name: "envoy.config.filter.network.thrift_proxy.v3alpha.Route"
  }
}
types {
  key: "envoy.config.filter.network.thrift_proxy.v2alpha1.RouteAction"
  value {
    qualified_package: "envoy.config.filter.network.thrift_proxy.v2alpha1"
    proto_path: "envoy/config/filter/network/thrift_proxy/v2alpha1/route.proto"
    next_version_type_name: "envoy.config.filter.network.thrift_proxy.v3alpha.RouteAction"
  }
}
types {
  key: "envoy.config.filter.network.thrift_proxy.v2alpha1.RouteConfiguration"
  value {
    qualified_package: "envoy.config.filter.network.thrift_proxy.v2alpha1"
    proto_path: "envoy/config/filter/network/thrift_proxy/v2alpha1/route.proto"
    next_version_type_name: "envoy.config.filter.network.thrift_proxy.v3alpha.RouteConfiguration"
  }
}
types {
  key: "envoy.config.filter.network.thrift_proxy.v2alpha1.RouteMatch"
  value {
    qualified_package: "envoy.config.filter.network.thrift_proxy.v2alpha1"
    proto_path: "envoy/config/filter/network/thrift_proxy/v2alpha1/route.proto"
    next_version_type_name: "envoy.config.filter.network.thrift_proxy.v3alpha.RouteMatch"
  }
}
types {
  key: "envoy.config.filter.network.thrift_proxy.v2alpha1.ThriftFilter"
  value {
    qualified_package: "envoy.config.filter.network.thrift_proxy.v2alpha1"
    proto_path: "envoy/config/filter/network/thrift_proxy/v2alpha1/thrift_proxy.proto"
    next_version_type_name: "envoy.config.filter.network.thrift_proxy.v3alpha.ThriftFilter"
  }
}
types {
  key: "envoy.config.filter.network.thrift_proxy.v2alpha1.ThriftProtocolOptions"
  value {
    qualified_package: "envoy.config.filter.network.thrift_proxy.v2alpha1"
    proto_path: "envoy/config/filter/network/thrift_proxy/v2alpha1/thrift_proxy.proto"
    next_version_type_name: "envoy.config.filter.network.thrift_proxy.v3alpha.ThriftProtocolOptions"
  }
}
types {
  key: "envoy.config.filter.network.thrift_proxy.v2alpha1.ThriftProxy"
  value {
    qualified_package: "envoy.config.filter.network.thrift_proxy.v2alpha1"
    proto_path: "envoy/config/filter/network/thrift_proxy/v2alpha1/thrift_proxy.proto"
    next_version_type_name: "envoy.config.filter.network.thrift_proxy.v3alpha.ThriftProxy"
  }
}
types {
  key: "envoy.config.filter.network.thrift_proxy.v2alpha1.TransportType"
  value {
    qualified_package: "envoy.config.filter.network.thrift_proxy.v2alpha1"
    proto_path: "envoy/config/filter/network/thrift_proxy/v2alpha1/thrift_proxy.proto"
    next_version_type_name: "envoy.config.filter.network.thrift_proxy.v3alpha.TransportType"
  }
}
types {
  key: "envoy.config.filter.network.thrift_proxy.v2alpha1.WeightedCluster"
  value {
    qualified_package: "envoy.config.filter.network.thrift_proxy.v2alpha1"
    proto_path: "envoy/config/filter/network/thrift_proxy/v2alpha1/route.proto"
    next_version_type_name: "envoy.config.filter.network.thrift_proxy.v3alpha.WeightedCluster"
  }
}
types {
  key: "envoy.config.filter.network.thrift_proxy.v2alpha1.WeightedCluster.ClusterWeight"
  value {
    qualified_package: "envoy.config.filter.network.thrift_proxy.v2alpha1"
    proto_path: "envoy/config/filter/network/thrift_proxy/v2alpha1/route.proto"
    next_version_type_name: "envoy.config.filter.network.thrift_proxy.v3alpha.WeightedCluster.ClusterWeight"
  }
}
types {
  key: "envoy.config.filter.network.thrift_proxy.v3alpha.ProtocolType"
  value {
    qualified_package: "envoy.config.filter.network.thrift_proxy.v3alpha"
    proto_path: "envoy/config/filter/network/thrift_proxy/v3alpha/thrift_proxy.proto"
  }
}
types {
  key: "envoy.config.filter.network.thrift_proxy.v3alpha.Route"
  value {
    qualified_package: "envoy.config.filter.network.thrift_proxy.v3alpha"
    proto_path: "envoy/config/filter/network/thrift_proxy/v3alpha/route.proto"
  }
}
types {
  key: "envoy.config.filter.network.thrift_proxy.v3alpha.RouteAction"
  value {
    qualified_package: "envoy.config.filter.network.thrift_proxy.v3alpha"
    proto_path: "envoy/config/filter/network/thrift_proxy/v3alpha/route.proto"
  }
}
types {
  key: "envoy.config.filter.network.thrift_proxy.v3alpha.RouteConfiguration"
  value {
    qualified_package: "envoy.config.filter.network.thrift_proxy.v3alpha"
    proto_path: "envoy/config/filter/network/thrift_proxy/v3alpha/route.proto"
  }
}
types {
  key: "envoy.config.filter.network.thrift_proxy.v3alpha.RouteMatch"
  value {
    qualified_package: "envoy.config.filter.network.thrift_proxy.v3alpha"
    proto_path: "envoy/config/filter/network/thrift_proxy/v3alpha/route.proto"
  }
}
types {
  key: "envoy.config.filter.network.thrift_proxy.v3alpha.ThriftFilter"
  value {
    qualified_package: "envoy.config.filter.network.thrift_proxy.v3alpha"
    proto_path: "envoy/config/filter/network/thrift_proxy/v3alpha/thrift_proxy.proto"
  }
}
types {
  key: "envoy.config.filter.network.thrift_proxy.v3alpha.ThriftProtocolOptions"
  value {
    qualified_package: "envoy.config.filter.network.thrift_proxy.v3alpha"
    proto_path: "envoy/config/filter/network/thrift_proxy/v3alpha/thrift_proxy.proto"
  }
}
types {
  key: "envoy.config.filter.network.thrift_proxy.v3alpha.ThriftProxy"
  value {
    qualified_package: "envoy.config.filter.network.thrift_proxy.v3alpha"
    proto_path: "envoy/config/filter/network/thrift_proxy/v3alpha/thrift_proxy.proto"
  }
}
types {
  key: "envoy.config.filter.network.thrift_proxy.v3alpha.TransportType"
  value {
    qualified_package: "envoy.config.filter.network.thrift_proxy.v3alpha"
    proto_path: "envoy/config/filter/network/thrift_proxy/v3alpha/thrift_proxy.proto"
  }
}
types {
  key: "envoy.config.filter.network.thrift_proxy.v3alpha.WeightedCluster"
  value {
    qualified_package: "envoy.config.filter.network.thrift_proxy.v3alpha"
    proto_path: "envoy/config/filter/network/thrift_proxy/v3alpha/route.proto"
  }
}
types {
  key: "envoy.config.filter.network.thrift_proxy.v3alpha.WeightedCluster.ClusterWeight"
  value {
    qualified_package: "envoy.config.filter.network.thrift_proxy.v3alpha"
    proto_path: "envoy/config/filter/network/thrift_proxy/v3alpha/route.proto"
  }
}
types {
  key: "envoy.config.filter.thrift.rate_limit.v2alpha1.RateLimit"
  value {
    qualified_package: "envoy.config.filter.thrift.rate_limit.v2alpha1"
    proto_path: "envoy/config/filter/thrift/rate_limit/v2alpha1/rate_limit.proto"
    next_version_type_name: "envoy.config.filter.thrift.rate_limit.v3alpha.RateLimit"
  }
}
types {
  key: "envoy.config.filter.thrift.rate_limit.v3alpha.RateLimit"
  value {
    qualified_package: "envoy.config.filter.thrift.rate_limit.v3alpha"
    proto_path: "envoy/config/filter/thrift/rate_limit/v3alpha/rate_limit.proto"
  }
}
types {
  key: "envoy.config.filter.thrift.router.v2alpha1.Router"
  value {
    qualified_package: "envoy.config.filter.thrift.router.v2alpha1"
    proto_path: "envoy/config/filter/thrift/router/v2alpha1/router.proto"
  }
}
types {
  key: "envoy.config.grpc_credential.v2alpha.AwsIamConfig"
  value {
    qualified_package: "envoy.config.grpc_credential.v2alpha"
    proto_path: "envoy/config/grpc_credential/v2alpha/aws_iam.proto"
    next_version_type_name: "envoy.config.grpc_credential.v3alpha.AwsIamConfig"
  }
}
types {
  key: "envoy.config.grpc_credential.v2alpha.FileBasedMetadataConfig"
  value {
    qualified_package: "envoy.config.grpc_credential.v2alpha"
    proto_path: "envoy/config/grpc_credential/v2alpha/file_based_metadata.proto"
    next_version_type_name: "envoy.config.grpc_credential.v3alpha.FileBasedMetadataConfig"
  }
}
types {
  key: "envoy.config.grpc_credential.v3alpha.AwsIamConfig"
  value {
    qualified_package: "envoy.config.grpc_credential.v3alpha"
    proto_path: "envoy/config/grpc_credential/v3alpha/aws_iam.proto"
  }
}
types {
  key: "envoy.config.grpc_credential.v3alpha.FileBasedMetadataConfig"
  value {
    qualified_package: "envoy.config.grpc_credential.v3alpha"
    proto_path: "envoy/config/grpc_credential/v3alpha/file_based_metadata.proto"
  }
}
types {
  key: "envoy.config.health_checker.redis.v2.Redis"
  value {
    qualified_package: "envoy.config.health_checker.redis.v2"
    proto_path: "envoy/config/health_checker/redis/v2/redis.proto"
  }
}
types {
  key: "envoy.config.listener.v2.ApiListener"
  value {
    qualified_package: "envoy.config.listener.v2"
    proto_path: "envoy/config/listener/v2/api_listener.proto"
  }
}
types {
  key: "envoy.config.metrics.v2.DogStatsdSink"
  value {
    qualified_package: "envoy.config.metrics.v2"
    proto_path: "envoy/config/metrics/v2/stats.proto"
    next_version_type_name: "envoy.config.metrics.v3alpha.DogStatsdSink"
  }
}
types {
  key: "envoy.config.metrics.v2.HystrixSink"
  value {
    qualified_package: "envoy.config.metrics.v2"
    proto_path: "envoy/config/metrics/v2/stats.proto"
    next_version_type_name: "envoy.config.metrics.v3alpha.HystrixSink"
  }
}
types {
  key: "envoy.config.metrics.v2.MetricsServiceConfig"
  value {
    qualified_package: "envoy.config.metrics.v2"
    proto_path: "envoy/config/metrics/v2/metrics_service.proto"
    next_version_type_name: "envoy.config.metrics.v3alpha.MetricsServiceConfig"
  }
}
types {
  key: "envoy.config.metrics.v2.StatsConfig"
  value {
    qualified_package: "envoy.config.metrics.v2"
    proto_path: "envoy/config/metrics/v2/stats.proto"
    next_version_type_name: "envoy.config.metrics.v3alpha.StatsConfig"
  }
}
types {
  key: "envoy.config.metrics.v2.StatsMatcher"
  value {
    qualified_package: "envoy.config.metrics.v2"
    proto_path: "envoy/config/metrics/v2/stats.proto"
    next_version_type_name: "envoy.config.metrics.v3alpha.StatsMatcher"
  }
}
types {
  key: "envoy.config.metrics.v2.StatsSink"
  value {
    qualified_package: "envoy.config.metrics.v2"
    proto_path: "envoy/config/metrics/v2/stats.proto"
    next_version_type_name: "envoy.config.metrics.v3alpha.StatsSink"
  }
}
types {
  key: "envoy.config.metrics.v2.StatsdSink"
  value {
    qualified_package: "envoy.config.metrics.v2"
    proto_path: "envoy/config/metrics/v2/stats.proto"
    next_version_type_name: "envoy.config.metrics.v3alpha.StatsdSink"
  }
}
types {
  key: "envoy.config.metrics.v2.TagSpecifier"
  value {
    qualified_package: "envoy.config.metrics.v2"
    proto_path: "envoy/config/metrics/v2/stats.proto"
    next_version_type_name: "envoy.config.metrics.v3alpha.TagSpecifier"
  }
}
types {
  key: "envoy.config.metrics.v3alpha.DogStatsdSink"
  value {
    qualified_package: "envoy.config.metrics.v3alpha"
    proto_path: "envoy/config/metrics/v3alpha/stats.proto"
  }
}
types {
  key: "envoy.config.metrics.v3alpha.HystrixSink"
  value {
    qualified_package: "envoy.config.metrics.v3alpha"
    proto_path: "envoy/config/metrics/v3alpha/stats.proto"
  }
}
types {
  key: "envoy.config.metrics.v3alpha.MetricsServiceConfig"
  value {
    qualified_package: "envoy.config.metrics.v3alpha"
    proto_path: "envoy/config/metrics/v3alpha/metrics_service.proto"
  }
}
types {
  key: "envoy.config.metrics.v3alpha.StatsConfig"
  value {
    qualified_package: "envoy.config.metrics.v3alpha"
    proto_path: "envoy/config/metrics/v3alpha/stats.proto"
  }
}
types {
  key: "envoy.config.metrics.v3alpha.StatsMatcher"
  value {
    qualified_package: "envoy.config.metrics.v3alpha"
    proto_path: "envoy/config/metrics/v3alpha/stats.proto"
  }
}
types {
  key: "envoy.config.metrics.v3alpha.StatsSink"
  value {
    qualified_package: "envoy.config.metrics.v3alpha"
    proto_path: "envoy/config/metrics/v3alpha/stats.proto"
  }
}
types {
  key: "envoy.config.metrics.v3alpha.StatsdSink"
  value {
    qualified_package: "envoy.config.metrics.v3alpha"
    proto_path: "envoy/config/metrics/v3alpha/stats.proto"
  }
}
types {
  key: "envoy.config.metrics.v3alpha.TagSpecifier"
  value {
    qualified_package: "envoy.config.metrics.v3alpha"
    proto_path: "envoy/config/metrics/v3alpha/stats.proto"
  }
}
types {
  key: "envoy.config.overload.v2alpha.OverloadAction"
  value {
    qualified_package: "envoy.config.overload.v2alpha"
    proto_path: "envoy/config/overload/v2alpha/overload.proto"
  }
}
types {
  key: "envoy.config.overload.v2alpha.OverloadManager"
  value {
    qualified_package: "envoy.config.overload.v2alpha"
    proto_path: "envoy/config/overload/v2alpha/overload.proto"
  }
}
types {
  key: "envoy.config.overload.v2alpha.ResourceMonitor"
  value {
    qualified_package: "envoy.config.overload.v2alpha"
    proto_path: "envoy/config/overload/v2alpha/overload.proto"
  }
}
types {
  key: "envoy.config.overload.v2alpha.ThresholdTrigger"
  value {
    qualified_package: "envoy.config.overload.v2alpha"
    proto_path: "envoy/config/overload/v2alpha/overload.proto"
  }
}
types {
  key: "envoy.config.overload.v2alpha.Trigger"
  value {
    qualified_package: "envoy.config.overload.v2alpha"
    proto_path: "envoy/config/overload/v2alpha/overload.proto"
  }
}
types {
  key: "envoy.config.ratelimit.v2.RateLimitServiceConfig"
  value {
    qualified_package: "envoy.config.ratelimit.v2"
    proto_path: "envoy/config/ratelimit/v2/rls.proto"
    next_version_type_name: "envoy.config.ratelimit.v3alpha.RateLimitServiceConfig"
  }
}
types {
  key: "envoy.config.ratelimit.v3alpha.RateLimitServiceConfig"
  value {
    qualified_package: "envoy.config.ratelimit.v3alpha"
    proto_path: "envoy/config/ratelimit/v3alpha/rls.proto"
  }
}
types {
  key: "envoy.config.rbac.v2.Permission"
  value {
    qualified_package: "envoy.config.rbac.v2"
    proto_path: "envoy/config/rbac/v2/rbac.proto"
    next_version_type_name: "envoy.config.rbac.v3alpha.Permission"
  }
}
types {
  key: "envoy.config.rbac.v2.Permission.Set"
  value {
    qualified_package: "envoy.config.rbac.v2"
    proto_path: "envoy/config/rbac/v2/rbac.proto"
    next_version_type_name: "envoy.config.rbac.v3alpha.Permission.Set"
  }
}
types {
  key: "envoy.config.rbac.v2.Policy"
  value {
    qualified_package: "envoy.config.rbac.v2"
    proto_path: "envoy/config/rbac/v2/rbac.proto"
    next_version_type_name: "envoy.config.rbac.v3alpha.Policy"
  }
}
types {
  key: "envoy.config.rbac.v2.Principal"
  value {
    qualified_package: "envoy.config.rbac.v2"
    proto_path: "envoy/config/rbac/v2/rbac.proto"
    next_version_type_name: "envoy.config.rbac.v3alpha.Principal"
  }
}
types {
  key: "envoy.config.rbac.v2.Principal.Authenticated"
  value {
    qualified_package: "envoy.config.rbac.v2"
    proto_path: "envoy/config/rbac/v2/rbac.proto"
    next_version_type_name: "envoy.config.rbac.v3alpha.Principal.Authenticated"
  }
}
types {
  key: "envoy.config.rbac.v2.Principal.Set"
  value {
    qualified_package: "envoy.config.rbac.v2"
    proto_path: "envoy/config/rbac/v2/rbac.proto"
    next_version_type_name: "envoy.config.rbac.v3alpha.Principal.Set"
  }
}
types {
  key: "envoy.config.rbac.v2.RBAC"
  value {
    qualified_package: "envoy.config.rbac.v2"
    proto_path: "envoy/config/rbac/v2/rbac.proto"
    next_version_type_name: "envoy.config.rbac.v3alpha.RBAC"
  }
}
types {
  key: "envoy.config.rbac.v2.RBAC.Action"
  value {
    qualified_package: "envoy.config.rbac.v2"
    proto_path: "envoy/config/rbac/v2/rbac.proto"
    next_version_type_name: "envoy.config.rbac.v3alpha.RBAC.Action"
  }
}
types {
  key: "envoy.config.rbac.v2.RBAC.PoliciesEntry"
  value {
    qualified_package: "envoy.config.rbac.v2"
    proto_path: "envoy/config/rbac/v2/rbac.proto"
    next_version_type_name: "envoy.config.rbac.v3alpha.RBAC.PoliciesEntry"
  }
}
types {
  key: "envoy.config.rbac.v3alpha.Permission"
  value {
    qualified_package: "envoy.config.rbac.v3alpha"
    proto_path: "envoy/config/rbac/v3alpha/rbac.proto"
  }
}
types {
  key: "envoy.config.rbac.v3alpha.Permission.Set"
  value {
    qualified_package: "envoy.config.rbac.v3alpha"
    proto_path: "envoy/config/rbac/v3alpha/rbac.proto"
  }
}
types {
  key: "envoy.config.rbac.v3alpha.Policy"
  value {
    qualified_package: "envoy.config.rbac.v3alpha"
    proto_path: "envoy/config/rbac/v3alpha/rbac.proto"
  }
}
types {
  key: "envoy.config.rbac.v3alpha.Principal"
  value {
    qualified_package: "envoy.config.rbac.v3alpha"
    proto_path: "envoy/config/rbac/v3alpha/rbac.proto"
  }
}
types {
  key: "envoy.config.rbac.v3alpha.Principal.Authenticated"
  value {
    qualified_package: "envoy.config.rbac.v3alpha"
    proto_path: "envoy/config/rbac/v3alpha/rbac.proto"
  }
}
types {
  key: "envoy.config.rbac.v3alpha.Principal.Set"
  value {
    qualified_package: "envoy.config.rbac.v3alpha"
    proto_path: "envoy/config/rbac/v3alpha/rbac.proto"
  }
}
types {
  key: "envoy.config.rbac.v3alpha.RBAC"
  value {
    qualified_package: "envoy.config.rbac.v3alpha"
    proto_path: "envoy/config/rbac/v3alpha/rbac.proto"
  }
}
types {
  key: "envoy.config.rbac.v3alpha.RBAC.Action"
  value {
    qualified_package: "envoy.config.rbac.v3alpha"
    proto_path: "envoy/config/rbac/v3alpha/rbac.proto"
  }
}
types {
  key: "envoy.config.rbac.v3alpha.RBAC.PoliciesEntry"
  value {
    qualified_package: "envoy.config.rbac.v3alpha"
    proto_path: "envoy/config/rbac/v3alpha/rbac.proto"
  }
}
types {
  key: "envoy.config.resource_monitor.fixed_heap.v2alpha.FixedHeapConfig"
  value {
    qualified_package: "envoy.config.resource_monitor.fixed_heap.v2alpha"
    proto_path: "envoy/config/resource_monitor/fixed_heap/v2alpha/fixed_heap.proto"
  }
}
types {
  key: "envoy.config.resource_monitor.injected_resource.v2alpha.InjectedResourceConfig"
  value {
    qualified_package: "envoy.config.resource_monitor.injected_resource.v2alpha"
    proto_path: "envoy/config/resource_monitor/injected_resource/v2alpha/injected_resource.proto"
  }
}
types {
  key: "envoy.config.trace.v2.DatadogConfig"
  value {
    qualified_package: "envoy.config.trace.v2"
    proto_path: "envoy/config/trace/v2/trace.proto"
    next_version_type_name: "envoy.config.trace.v3alpha.DatadogConfig"
  }
}
types {
  key: "envoy.config.trace.v2.DynamicOtConfig"
  value {
    qualified_package: "envoy.config.trace.v2"
    proto_path: "envoy/config/trace/v2/trace.proto"
    next_version_type_name: "envoy.config.trace.v3alpha.DynamicOtConfig"
  }
}
types {
  key: "envoy.config.trace.v2.LightstepConfig"
  value {
    qualified_package: "envoy.config.trace.v2"
    proto_path: "envoy/config/trace/v2/trace.proto"
    next_version_type_name: "envoy.config.trace.v3alpha.LightstepConfig"
  }
}
types {
  key: "envoy.config.trace.v2.OpenCensusConfig"
  value {
    qualified_package: "envoy.config.trace.v2"
    proto_path: "envoy/config/trace/v2/trace.proto"
    next_version_type_name: "envoy.config.trace.v3alpha.OpenCensusConfig"
  }
}
types {
  key: "envoy.config.trace.v2.OpenCensusConfig.TraceContext"
  value {
    qualified_package: "envoy.config.trace.v2"
    proto_path: "envoy/config/trace/v2/trace.proto"
    next_version_type_name: "envoy.config.trace.v3alpha.OpenCensusConfig.TraceContext"
  }
}
types {
  key: "envoy.config.trace.v2.TraceServiceConfig"
  value {
    qualified_package: "envoy.config.trace.v2"
    proto_path: "envoy/config/trace/v2/trace.proto"
    next_version_type_name: "envoy.config.trace.v3alpha.TraceServiceConfig"
  }
}
types {
  key: "envoy.config.trace.v2.Tracing"
  value {
    qualified_package: "envoy.config.trace.v2"
    proto_path: "envoy/config/trace/v2/trace.proto"
    next_version_type_name: "envoy.config.trace.v3alpha.Tracing"
  }
}
types {
  key: "envoy.config.trace.v2.Tracing.Http"
  value {
    qualified_package: "envoy.config.trace.v2"
    proto_path: "envoy/config/trace/v2/trace.proto"
    next_version_type_name: "envoy.config.trace.v3alpha.Tracing.Http"
  }
}
types {
  key: "envoy.config.trace.v2.ZipkinConfig"
  value {
    qualified_package: "envoy.config.trace.v2"
    proto_path: "envoy/config/trace/v2/trace.proto"
    next_version_type_name: "envoy.config.trace.v3alpha.ZipkinConfig"
  }
}
types {
  key: "envoy.config.trace.v2.ZipkinConfig.CollectorEndpointVersion"
  value {
    qualified_package: "envoy.config.trace.v2"
    proto_path: "envoy/config/trace/v2/trace.proto"
    next_version_type_name: "envoy.config.trace.v3alpha.ZipkinConfig.CollectorEndpointVersion"
  }
}
types {
  key: "envoy.config.trace.v3alpha.DatadogConfig"
  value {
    qualified_package: "envoy.config.trace.v3alpha"
    proto_path: "envoy/config/trace/v3alpha/trace.proto"
  }
}
types {
  key: "envoy.config.trace.v3alpha.DynamicOtConfig"
  value {
    qualified_package: "envoy.config.trace.v3alpha"
    proto_path: "envoy/config/trace/v3alpha/trace.proto"
  }
}
types {
  key: "envoy.config.trace.v3alpha.LightstepConfig"
  value {
    qualified_package: "envoy.config.trace.v3alpha"
    proto_path: "envoy/config/trace/v3alpha/trace.proto"
  }
}
types {
  key: "envoy.config.trace.v3alpha.OpenCensusConfig"
  value {
    qualified_package: "envoy.config.trace.v3alpha"
    proto_path: "envoy/config/trace/v3alpha/trace.proto"
  }
}
types {
  key: "envoy.config.trace.v3alpha.OpenCensusConfig.TraceContext"
  value {
    qualified_package: "envoy.config.trace.v3alpha"
    proto_path: "envoy/config/trace/v3alpha/trace.proto"
  }
}
types {
  key: "envoy.config.trace.v3alpha.TraceServiceConfig"
  value {
    qualified_package: "envoy.config.trace.v3alpha"
    proto_path: "envoy/config/trace/v3alpha/trace.proto"
  }
}
types {
  key: "envoy.config.trace.v3alpha.Tracing"
  value {
    qualified_package: "envoy.config.trace.v3alpha"
    proto_path: "envoy/config/trace/v3alpha/trace.proto"
  }
}
types {
  key: "envoy.config.trace.v3alpha.Tracing.Http"
  value {
    qualified_package: "envoy.config.trace.v3alpha"
    proto_path: "envoy/config/trace/v3alpha/trace.proto"
  }
}
types {
  key: "envoy.config.trace.v3alpha.ZipkinConfig"
  value {
    qualified_package: "envoy.config.trace.v3alpha"
    proto_path: "envoy/config/trace/v3alpha/trace.proto"
  }
}
types {
  key: "envoy.config.trace.v3alpha.ZipkinConfig.CollectorEndpointVersion"
  value {
    qualified_package: "envoy.config.trace.v3alpha"
    proto_path: "envoy/config/trace/v3alpha/trace.proto"
  }
}
types {
  key: "envoy.config.transport_socket.alts.v2alpha.Alts"
  value {
    qualified_package: "envoy.config.transport_socket.alts.v2alpha"
    proto_path: "envoy/config/transport_socket/alts/v2alpha/alts.proto"
  }
}
types {
  key: "envoy.config.transport_socket.tap.v2alpha.Tap"
  value {
    qualified_package: "envoy.config.transport_socket.tap.v2alpha"
    proto_path: "envoy/config/transport_socket/tap/v2alpha/tap.proto"
    next_version_type_name: "envoy.config.transport_socket.tap.v3alpha.Tap"
  }
}
types {
  key: "envoy.config.transport_socket.tap.v3alpha.Tap"
  value {
    qualified_package: "envoy.config.transport_socket.tap.v3alpha"
    proto_path: "envoy/config/transport_socket/tap/v3alpha/tap.proto"
  }
}
types {
  key: "envoy.config.wasm.v2.PluginConfig"
  value {
    qualified_package: "envoy.config.wasm.v2"
    proto_path: "envoy/config/wasm/v2/wasm.proto"
    next_version_type_name: "envoy.config.wasm.v3alpha.PluginConfig"
  }
}
types {
  key: "envoy.config.wasm.v2.VmConfig"
  value {
    qualified_package: "envoy.config.wasm.v2"
    proto_path: "envoy/config/wasm/v2/wasm.proto"
    next_version_type_name: "envoy.config.wasm.v3alpha.VmConfig"
  }
}
types {
  key: "envoy.config.wasm.v2.WasmService"
  value {
    qualified_package: "envoy.config.wasm.v2"
    proto_path: "envoy/config/wasm/v2/wasm.proto"
    next_version_type_name: "envoy.config.wasm.v3alpha.WasmService"
  }
}
types {
  key: "envoy.config.wasm.v3alpha.PluginConfig"
  value {
    qualified_package: "envoy.config.wasm.v3alpha"
    proto_path: "envoy/config/wasm/v3alpha/wasm.proto"
  }
}
types {
  key: "envoy.config.wasm.v3alpha.VmConfig"
  value {
    qualified_package: "envoy.config.wasm.v3alpha"
    proto_path: "envoy/config/wasm/v3alpha/wasm.proto"
  }
}
types {
  key: "envoy.config.wasm.v3alpha.WasmService"
  value {
    qualified_package: "envoy.config.wasm.v3alpha"
    proto_path: "envoy/config/wasm/v3alpha/wasm.proto"
  }
}
types {
  key: "envoy.data.accesslog.v2.AccessLogCommon"
  value {
    qualified_package: "envoy.data.accesslog.v2"
    proto_path: "envoy/data/accesslog/v2/accesslog.proto"
    next_version_type_name: "envoy.data.accesslog.v3alpha.AccessLogCommon"
  }
}
types {
  key: "envoy.data.accesslog.v2.ConnectionProperties"
  value {
    qualified_package: "envoy.data.accesslog.v2"
    proto_path: "envoy/data/accesslog/v2/accesslog.proto"
    next_version_type_name: "envoy.data.accesslog.v3alpha.ConnectionProperties"
  }
}
types {
  key: "envoy.data.accesslog.v2.HTTPAccessLogEntry"
  value {
    qualified_package: "envoy.data.accesslog.v2"
    proto_path: "envoy/data/accesslog/v2/accesslog.proto"
    next_version_type_name: "envoy.data.accesslog.v3alpha.HTTPAccessLogEntry"
  }
}
types {
  key: "envoy.data.accesslog.v2.HTTPAccessLogEntry.HTTPVersion"
  value {
    qualified_package: "envoy.data.accesslog.v2"
    proto_path: "envoy/data/accesslog/v2/accesslog.proto"
    next_version_type_name: "envoy.data.accesslog.v3alpha.HTTPAccessLogEntry.HTTPVersion"
  }
}
types {
  key: "envoy.data.accesslog.v2.HTTPRequestProperties"
  value {
    qualified_package: "envoy.data.accesslog.v2"
    proto_path: "envoy/data/accesslog/v2/accesslog.proto"
    next_version_type_name: "envoy.data.accesslog.v3alpha.HTTPRequestProperties"
  }
}
types {
  key: "envoy.data.accesslog.v2.HTTPRequestProperties.RequestHeadersEntry"
  value {
    qualified_package: "envoy.data.accesslog.v2"
    proto_path: "envoy/data/accesslog/v2/accesslog.proto"
    next_version_type_name: "envoy.data.accesslog.v3alpha.HTTPRequestProperties.RequestHeadersEntry"
  }
}
types {
  key: "envoy.data.accesslog.v2.HTTPResponseProperties"
  value {
    qualified_package: "envoy.data.accesslog.v2"
    proto_path: "envoy/data/accesslog/v2/accesslog.proto"
    next_version_type_name: "envoy.data.accesslog.v3alpha.HTTPResponseProperties"
  }
}
types {
  key: "envoy.data.accesslog.v2.HTTPResponseProperties.ResponseHeadersEntry"
  value {
    qualified_package: "envoy.data.accesslog.v2"
    proto_path: "envoy/data/accesslog/v2/accesslog.proto"
    next_version_type_name: "envoy.data.accesslog.v3alpha.HTTPResponseProperties.ResponseHeadersEntry"
  }
}
types {
  key: "envoy.data.accesslog.v2.HTTPResponseProperties.ResponseTrailersEntry"
  value {
    qualified_package: "envoy.data.accesslog.v2"
    proto_path: "envoy/data/accesslog/v2/accesslog.proto"
    next_version_type_name: "envoy.data.accesslog.v3alpha.HTTPResponseProperties.ResponseTrailersEntry"
  }
}
types {
  key: "envoy.data.accesslog.v2.ResponseFlags"
  value {
    qualified_package: "envoy.data.accesslog.v2"
    proto_path: "envoy/data/accesslog/v2/accesslog.proto"
    next_version_type_name: "envoy.data.accesslog.v3alpha.ResponseFlags"
  }
}
types {
  key: "envoy.data.accesslog.v2.ResponseFlags.Unauthorized"
  value {
    qualified_package: "envoy.data.accesslog.v2"
    proto_path: "envoy/data/accesslog/v2/accesslog.proto"
    next_version_type_name: "envoy.data.accesslog.v3alpha.ResponseFlags.Unauthorized"
  }
}
types {
  key: "envoy.data.accesslog.v2.ResponseFlags.Unauthorized.Reason"
  value {
    qualified_package: "envoy.data.accesslog.v2"
    proto_path: "envoy/data/accesslog/v2/accesslog.proto"
    next_version_type_name: "envoy.data.accesslog.v3alpha.ResponseFlags.Unauthorized.Reason"
  }
}
types {
  key: "envoy.data.accesslog.v2.TCPAccessLogEntry"
  value {
    qualified_package: "envoy.data.accesslog.v2"
    proto_path: "envoy/data/accesslog/v2/accesslog.proto"
    next_version_type_name: "envoy.data.accesslog.v3alpha.TCPAccessLogEntry"
  }
}
types {
  key: "envoy.data.accesslog.v2.TLSProperties"
  value {
    qualified_package: "envoy.data.accesslog.v2"
    proto_path: "envoy/data/accesslog/v2/accesslog.proto"
    next_version_type_name: "envoy.data.accesslog.v3alpha.TLSProperties"
  }
}
types {
  key: "envoy.data.accesslog.v2.TLSProperties.CertificateProperties"
  value {
    qualified_package: "envoy.data.accesslog.v2"
    proto_path: "envoy/data/accesslog/v2/accesslog.proto"
    next_version_type_name: "envoy.data.accesslog.v3alpha.TLSProperties.CertificateProperties"
  }
}
types {
  key: "envoy.data.accesslog.v2.TLSProperties.CertificateProperties.SubjectAltName"
  value {
    qualified_package: "envoy.data.accesslog.v2"
    proto_path: "envoy/data/accesslog/v2/accesslog.proto"
    next_version_type_name: "envoy.data.accesslog.v3alpha.TLSProperties.CertificateProperties.SubjectAltName"
  }
}
types {
  key: "envoy.data.accesslog.v2.TLSProperties.TLSVersion"
  value {
    qualified_package: "envoy.data.accesslog.v2"
    proto_path: "envoy/data/accesslog/v2/accesslog.proto"
    next_version_type_name: "envoy.data.accesslog.v3alpha.TLSProperties.TLSVersion"
  }
}
types {
  key: "envoy.data.accesslog.v3alpha.AccessLogCommon"
  value {
    qualified_package: "envoy.data.accesslog.v3alpha"
    proto_path: "envoy/data/accesslog/v3alpha/accesslog.proto"
  }
}
types {
  key: "envoy.data.accesslog.v3alpha.ConnectionProperties"
  value {
    qualified_package: "envoy.data.accesslog.v3alpha"
    proto_path: "envoy/data/accesslog/v3alpha/accesslog.proto"
  }
}
types {
  key: "envoy.data.accesslog.v3alpha.HTTPAccessLogEntry"
  value {
    qualified_package: "envoy.data.accesslog.v3alpha"
    proto_path: "envoy/data/accesslog/v3alpha/accesslog.proto"
  }
}
types {
  key: "envoy.data.accesslog.v3alpha.HTTPAccessLogEntry.HTTPVersion"
  value {
    qualified_package: "envoy.data.accesslog.v3alpha"
    proto_path: "envoy/data/accesslog/v3alpha/accesslog.proto"
  }
}
types {
  key: "envoy.data.accesslog.v3alpha.HTTPRequestProperties"
  value {
    qualified_package: "envoy.data.accesslog.v3alpha"
    proto_path: "envoy/data/accesslog/v3alpha/accesslog.proto"
  }
}
types {
  key: "envoy.data.accesslog.v3alpha.HTTPRequestProperties.RequestHeadersEntry"
  value {
    qualified_package: "envoy.data.accesslog.v3alpha"
    proto_path: "envoy/data/accesslog/v3alpha/accesslog.proto"
  }
}
types {
  key: "envoy.data.accesslog.v3alpha.HTTPResponseProperties"
  value {
    qualified_package: "envoy.data.accesslog.v3alpha"
    proto_path: "envoy/data/accesslog/v3alpha/accesslog.proto"
  }
}
types {
  key: "envoy.data.accesslog.v3alpha.HTTPResponseProperties.ResponseHeadersEntry"
  value {
    qualified_package: "envoy.data.accesslog.v3alpha"
    proto_path: "envoy/data/accesslog/v3alpha/accesslog.proto"
  }
}
types {
  key: "envoy.data.accesslog.v3alpha.HTTPResponseProperties.ResponseTrailersEntry"
  value {
    qualified_package: "envoy.data.accesslog.v3alpha"
    proto_path: "envoy/data/accesslog/v3alpha/accesslog.proto"
  }
}
types {
  key: "envoy.data.accesslog.v3alpha.ResponseFlags"
  value {
    qualified_package: "envoy.data.accesslog.v3alpha"
    proto_path: "envoy/data/accesslog/v3alpha/accesslog.proto"
  }
}
types {
  key: "envoy.data.accesslog.v3alpha.ResponseFlags.Unauthorized"
  value {
    qualified_package: "envoy.data.accesslog.v3alpha"
    proto_path: "envoy/data/accesslog/v3alpha/accesslog.proto"
  }
}
types {
  key: "envoy.data.accesslog.v3alpha.ResponseFlags.Unauthorized.Reason"
  value {
    qualified_package: "envoy.data.accesslog.v3alpha"
    proto_path: "envoy/data/accesslog/v3alpha/accesslog.proto"
  }
}
types {
  key: "envoy.data.accesslog.v3alpha.TCPAccessLogEntry"
  value {
    qualified_package: "envoy.data.accesslog.v3alpha"
    proto_path: "envoy/data/accesslog/v3alpha/accesslog.proto"
  }
}
types {
  key: "envoy.data.accesslog.v3alpha.TLSProperties"
  value {
    qualified_package: "envoy.data.accesslog.v3alpha"
    proto_path: "envoy/data/accesslog/v3alpha/accesslog.proto"
  }
}
types {
  key: "envoy.data.accesslog.v3alpha.TLSProperties.CertificateProperties"
  value {
    qualified_package: "envoy.data.accesslog.v3alpha"
    proto_path: "envoy/data/accesslog/v3alpha/accesslog.proto"
  }
}
types {
  key: "envoy.data.accesslog.v3alpha.TLSProperties.CertificateProperties.SubjectAltName"
  value {
    qualified_package: "envoy.data.accesslog.v3alpha"
    proto_path: "envoy/data/accesslog/v3alpha/accesslog.proto"
  }
}
types {
  key: "envoy.data.accesslog.v3alpha.TLSProperties.TLSVersion"
  value {
    qualified_package: "envoy.data.accesslog.v3alpha"
    proto_path: "envoy/data/accesslog/v3alpha/accesslog.proto"
  }
}
types {
  key: "envoy.data.cluster.v2alpha.Action"
  value {
    qualified_package: "envoy.data.cluster.v2alpha"
    proto_path: "envoy/data/cluster/v2alpha/outlier_detection_event.proto"
  }
}
types {
  key: "envoy.data.cluster.v2alpha.OutlierDetectionEvent"
  value {
    qualified_package: "envoy.data.cluster.v2alpha"
    proto_path: "envoy/data/cluster/v2alpha/outlier_detection_event.proto"
  }
}
types {
  key: "envoy.data.cluster.v2alpha.OutlierEjectConsecutive"
  value {
    qualified_package: "envoy.data.cluster.v2alpha"
    proto_path: "envoy/data/cluster/v2alpha/outlier_detection_event.proto"
  }
}
types {
  key: "envoy.data.cluster.v2alpha.OutlierEjectFailurePercentage"
  value {
    qualified_package: "envoy.data.cluster.v2alpha"
    proto_path: "envoy/data/cluster/v2alpha/outlier_detection_event.proto"
  }
}
types {
  key: "envoy.data.cluster.v2alpha.OutlierEjectSuccessRate"
  value {
    qualified_package: "envoy.data.cluster.v2alpha"
    proto_path: "envoy/data/cluster/v2alpha/outlier_detection_event.proto"
  }
}
types {
  key: "envoy.data.cluster.v2alpha.OutlierEjectionType"
  value {
    qualified_package: "envoy.data.cluster.v2alpha"
    proto_path: "envoy/data/cluster/v2alpha/outlier_detection_event.proto"
  }
}
types {
  key: "envoy.data.core.v2alpha.DegradedHealthyHost"
  value {
    qualified_package: "envoy.data.core.v2alpha"
    proto_path: "envoy/data/core/v2alpha/health_check_event.proto"
    next_version_type_name: "envoy.data.core.v3alpha.DegradedHealthyHost"
  }
}
types {
  key: "envoy.data.core.v2alpha.HealthCheckAddHealthy"
  value {
    qualified_package: "envoy.data.core.v2alpha"
    proto_path: "envoy/data/core/v2alpha/health_check_event.proto"
    next_version_type_name: "envoy.data.core.v3alpha.HealthCheckAddHealthy"
  }
}
types {
  key: "envoy.data.core.v2alpha.HealthCheckEjectUnhealthy"
  value {
    qualified_package: "envoy.data.core.v2alpha"
    proto_path: "envoy/data/core/v2alpha/health_check_event.proto"
    next_version_type_name: "envoy.data.core.v3alpha.HealthCheckEjectUnhealthy"
  }
}
types {
  key: "envoy.data.core.v2alpha.HealthCheckEvent"
  value {
    qualified_package: "envoy.data.core.v2alpha"
    proto_path: "envoy/data/core/v2alpha/health_check_event.proto"
    next_version_type_name: "envoy.data.core.v3alpha.HealthCheckEvent"
  }
}
types {
  key: "envoy.data.core.v2alpha.HealthCheckFailure"
  value {
    qualified_package: "envoy.data.core.v2alpha"
    proto_path: "envoy/data/core/v2alpha/health_check_event.proto"
    next_version_type_name: "envoy.data.core.v3alpha.HealthCheckFailure"
  }
}
types {
  key: "envoy.data.core.v2alpha.HealthCheckFailureType"
  value {
    qualified_package: "envoy.data.core.v2alpha"
    proto_path: "envoy/data/core/v2alpha/health_check_event.proto"
    next_version_type_name: "envoy.data.core.v3alpha.HealthCheckFailureType"
  }
}
types {
  key: "envoy.data.core.v2alpha.HealthCheckerType"
  value {
    qualified_package: "envoy.data.core.v2alpha"
    proto_path: "envoy/data/core/v2alpha/health_check_event.proto"
    next_version_type_name: "envoy.data.core.v3alpha.HealthCheckerType"
  }
}
types {
  key: "envoy.data.core.v2alpha.NoLongerDegradedHost"
  value {
    qualified_package: "envoy.data.core.v2alpha"
    proto_path: "envoy/data/core/v2alpha/health_check_event.proto"
    next_version_type_name: "envoy.data.core.v3alpha.NoLongerDegradedHost"
  }
}
types {
  key: "envoy.data.core.v3alpha.DegradedHealthyHost"
  value {
    qualified_package: "envoy.data.core.v3alpha"
    proto_path: "envoy/data/core/v3alpha/health_check_event.proto"
  }
}
types {
  key: "envoy.data.core.v3alpha.HealthCheckAddHealthy"
  value {
    qualified_package: "envoy.data.core.v3alpha"
    proto_path: "envoy/data/core/v3alpha/health_check_event.proto"
  }
}
types {
  key: "envoy.data.core.v3alpha.HealthCheckEjectUnhealthy"
  value {
    qualified_package: "envoy.data.core.v3alpha"
    proto_path: "envoy/data/core/v3alpha/health_check_event.proto"
  }
}
types {
  key: "envoy.data.core.v3alpha.HealthCheckEvent"
  value {
    qualified_package: "envoy.data.core.v3alpha"
    proto_path: "envoy/data/core/v3alpha/health_check_event.proto"
  }
}
types {
  key: "envoy.data.core.v3alpha.HealthCheckFailure"
  value {
    qualified_package: "envoy.data.core.v3alpha"
    proto_path: "envoy/data/core/v3alpha/health_check_event.proto"
  }
}
types {
  key: "envoy.data.core.v3alpha.HealthCheckFailureType"
  value {
    qualified_package: "envoy.data.core.v3alpha"
    proto_path: "envoy/data/core/v3alpha/health_check_event.proto"
  }
}
types {
  key: "envoy.data.core.v3alpha.HealthCheckerType"
  value {
    qualified_package: "envoy.data.core.v3alpha"
    proto_path: "envoy/data/core/v3alpha/health_check_event.proto"
  }
}
types {
  key: "envoy.data.core.v3alpha.NoLongerDegradedHost"
  value {
    qualified_package: "envoy.data.core.v3alpha"
    proto_path: "envoy/data/core/v3alpha/health_check_event.proto"
  }
}
types {
  key: "envoy.data.tap.v2alpha.Body"
  value {
    qualified_package: "envoy.data.tap.v2alpha"
    proto_path: "envoy/data/tap/v2alpha/common.proto"
    next_version_type_name: "envoy.data.tap.v3alpha.Body"
  }
}
types {
  key: "envoy.data.tap.v2alpha.Connection"
  value {
    qualified_package: "envoy.data.tap.v2alpha"
    proto_path: "envoy/data/tap/v2alpha/transport.proto"
    next_version_type_name: "envoy.data.tap.v3alpha.Connection"
  }
}
types {
  key: "envoy.data.tap.v2alpha.HttpBufferedTrace"
  value {
    qualified_package: "envoy.data.tap.v2alpha"
    proto_path: "envoy/data/tap/v2alpha/http.proto"
    next_version_type_name: "envoy.data.tap.v3alpha.HttpBufferedTrace"
  }
}
types {
  key: "envoy.data.tap.v2alpha.HttpBufferedTrace.Message"
  value {
    qualified_package: "envoy.data.tap.v2alpha"
    proto_path: "envoy/data/tap/v2alpha/http.proto"
    next_version_type_name: "envoy.data.tap.v3alpha.HttpBufferedTrace.Message"
  }
}
types {
  key: "envoy.data.tap.v2alpha.HttpStreamedTraceSegment"
  value {
    qualified_package: "envoy.data.tap.v2alpha"
    proto_path: "envoy/data/tap/v2alpha/http.proto"
    next_version_type_name: "envoy.data.tap.v3alpha.HttpStreamedTraceSegment"
  }
}
types {
  key: "envoy.data.tap.v2alpha.SocketBufferedTrace"
  value {
    qualified_package: "envoy.data.tap.v2alpha"
    proto_path: "envoy/data/tap/v2alpha/transport.proto"
    next_version_type_name: "envoy.data.tap.v3alpha.SocketBufferedTrace"
  }
}
types {
  key: "envoy.data.tap.v2alpha.SocketEvent"
  value {
    qualified_package: "envoy.data.tap.v2alpha"
    proto_path: "envoy/data/tap/v2alpha/transport.proto"
    next_version_type_name: "envoy.data.tap.v3alpha.SocketEvent"
  }
}
types {
  key: "envoy.data.tap.v2alpha.SocketEvent.Closed"
  value {
    qualified_package: "envoy.data.tap.v2alpha"
    proto_path: "envoy/data/tap/v2alpha/transport.proto"
    next_version_type_name: "envoy.data.tap.v3alpha.SocketEvent.Closed"
  }
}
types {
  key: "envoy.data.tap.v2alpha.SocketEvent.Read"
  value {
    qualified_package: "envoy.data.tap.v2alpha"
    proto_path: "envoy/data/tap/v2alpha/transport.proto"
    next_version_type_name: "envoy.data.tap.v3alpha.SocketEvent.Read"
  }
}
types {
  key: "envoy.data.tap.v2alpha.SocketEvent.Write"
  value {
    qualified_package: "envoy.data.tap.v2alpha"
    proto_path: "envoy/data/tap/v2alpha/transport.proto"
    next_version_type_name: "envoy.data.tap.v3alpha.SocketEvent.Write"
  }
}
types {
  key: "envoy.data.tap.v2alpha.SocketStreamedTraceSegment"
  value {
    qualified_package: "envoy.data.tap.v2alpha"
    proto_path: "envoy/data/tap/v2alpha/transport.proto"
    next_version_type_name: "envoy.data.tap.v3alpha.SocketStreamedTraceSegment"
  }
}
types {
  key: "envoy.data.tap.v2alpha.TraceWrapper"
  value {
    qualified_package: "envoy.data.tap.v2alpha"
    proto_path: "envoy/data/tap/v2alpha/wrapper.proto"
    next_version_type_name: "envoy.data.tap.v3alpha.TraceWrapper"
  }
}
types {
  key: "envoy.data.tap.v3alpha.Body"
  value {
    qualified_package: "envoy.data.tap.v3alpha"
    proto_path: "envoy/data/tap/v3alpha/common.proto"
  }
}
types {
  key: "envoy.data.tap.v3alpha.Connection"
  value {
    qualified_package: "envoy.data.tap.v3alpha"
    proto_path: "envoy/data/tap/v3alpha/transport.proto"
  }
}
types {
  key: "envoy.data.tap.v3alpha.HttpBufferedTrace"
  value {
    qualified_package: "envoy.data.tap.v3alpha"
    proto_path: "envoy/data/tap/v3alpha/http.proto"
  }
}
types {
  key: "envoy.data.tap.v3alpha.HttpBufferedTrace.Message"
  value {
    qualified_package: "envoy.data.tap.v3alpha"
    proto_path: "envoy/data/tap/v3alpha/http.proto"
  }
}
types {
  key: "envoy.data.tap.v3alpha.HttpStreamedTraceSegment"
  value {
    qualified_package: "envoy.data.tap.v3alpha"
    proto_path: "envoy/data/tap/v3alpha/http.proto"
  }
}
types {
  key: "envoy.data.tap.v3alpha.SocketBufferedTrace"
  value {
    qualified_package: "envoy.data.tap.v3alpha"
    proto_path: "envoy/data/tap/v3alpha/transport.proto"
  }
}
types {
  key: "envoy.data.tap.v3alpha.SocketEvent"
  value {
    qualified_package: "envoy.data.tap.v3alpha"
    proto_path: "envoy/data/tap/v3alpha/transport.proto"
  }
}
types {
  key: "envoy.data.tap.v3alpha.SocketEvent.Closed"
  value {
    qualified_package: "envoy.data.tap.v3alpha"
    proto_path: "envoy/data/tap/v3alpha/transport.proto"
  }
}
types {
  key: "envoy.data.tap.v3alpha.SocketEvent.Read"
  value {
    qualified_package: "envoy.data.tap.v3alpha"
    proto_path: "envoy/data/tap/v3alpha/transport.proto"
  }
}
types {
  key: "envoy.data.tap.v3alpha.SocketEvent.Write"
  value {
    qualified_package: "envoy.data.tap.v3alpha"
    proto_path: "envoy/data/tap/v3alpha/transport.proto"
  }
}
types {
  key: "envoy.data.tap.v3alpha.SocketStreamedTraceSegment"
  value {
    qualified_package: "envoy.data.tap.v3alpha"
    proto_path: "envoy/data/tap/v3alpha/transport.proto"
  }
}
types {
  key: "envoy.data.tap.v3alpha.TraceWrapper"
  value {
    qualified_package: "envoy.data.tap.v3alpha"
    proto_path: "envoy/data/tap/v3alpha/wrapper.proto"
  }
}
types {
  key: "envoy.service.accesslog.v2.StreamAccessLogsMessage"
  value {
    qualified_package: "envoy.service.accesslog.v2"
    proto_path: "envoy/service/accesslog/v2/als.proto"
    next_version_type_name: "envoy.service.accesslog.v3alpha.StreamAccessLogsMessage"
  }
}
types {
  key: "envoy.service.accesslog.v2.StreamAccessLogsMessage.HTTPAccessLogEntries"
  value {
    qualified_package: "envoy.service.accesslog.v2"
    proto_path: "envoy/service/accesslog/v2/als.proto"
    next_version_type_name: "envoy.service.accesslog.v3alpha.StreamAccessLogsMessage.HTTPAccessLogEntries"
  }
}
types {
  key: "envoy.service.accesslog.v2.StreamAccessLogsMessage.Identifier"
  value {
    qualified_package: "envoy.service.accesslog.v2"
    proto_path: "envoy/service/accesslog/v2/als.proto"
    next_version_type_name: "envoy.service.accesslog.v3alpha.StreamAccessLogsMessage.Identifier"
  }
}
types {
  key: "envoy.service.accesslog.v2.StreamAccessLogsMessage.TCPAccessLogEntries"
  value {
    qualified_package: "envoy.service.accesslog.v2"
    proto_path: "envoy/service/accesslog/v2/als.proto"
    next_version_type_name: "envoy.service.accesslog.v3alpha.StreamAccessLogsMessage.TCPAccessLogEntries"
  }
}
types {
  key: "envoy.service.accesslog.v2.StreamAccessLogsResponse"
  value {
    qualified_package: "envoy.service.accesslog.v2"
    proto_path: "envoy/service/accesslog/v2/als.proto"
    next_version_type_name: "envoy.service.accesslog.v3alpha.StreamAccessLogsResponse"
  }
}
types {
  key: "envoy.service.accesslog.v3alpha.StreamAccessLogsMessage"
  value {
    qualified_package: "envoy.service.accesslog.v3alpha"
    proto_path: "envoy/service/accesslog/v3alpha/als.proto"
  }
}
types {
  key: "envoy.service.accesslog.v3alpha.StreamAccessLogsMessage.HTTPAccessLogEntries"
  value {
    qualified_package: "envoy.service.accesslog.v3alpha"
    proto_path: "envoy/service/accesslog/v3alpha/als.proto"
  }
}
types {
  key: "envoy.service.accesslog.v3alpha.StreamAccessLogsMessage.Identifier"
  value {
    qualified_package: "envoy.service.accesslog.v3alpha"
    proto_path: "envoy/service/accesslog/v3alpha/als.proto"
  }
}
types {
  key: "envoy.service.accesslog.v3alpha.StreamAccessLogsMessage.TCPAccessLogEntries"
  value {
    qualified_package: "envoy.service.accesslog.v3alpha"
    proto_path: "envoy/service/accesslog/v3alpha/als.proto"
  }
}
types {
  key: "envoy.service.accesslog.v3alpha.StreamAccessLogsResponse"
  value {
    qualified_package: "envoy.service.accesslog.v3alpha"
    proto_path: "envoy/service/accesslog/v3alpha/als.proto"
  }
}
types {
  key: "envoy.service.auth.v2.AttributeContext"
  value {
    qualified_package: "envoy.service.auth.v2"
    proto_path: "envoy/service/auth/v2/attribute_context.proto"
    next_version_type_name: "envoy.service.auth.v3alpha.AttributeContext"
  }
}
types {
  key: "envoy.service.auth.v2.AttributeContext.ContextExtensionsEntry"
  value {
    qualified_package: "envoy.service.auth.v2"
    proto_path: "envoy/service/auth/v2/attribute_context.proto"
    next_version_type_name: "envoy.service.auth.v3alpha.AttributeContext.ContextExtensionsEntry"
  }
}
types {
  key: "envoy.service.auth.v2.AttributeContext.HttpRequest"
  value {
    qualified_package: "envoy.service.auth.v2"
    proto_path: "envoy/service/auth/v2/attribute_context.proto"
    next_version_type_name: "envoy.service.auth.v3alpha.AttributeContext.HttpRequest"
  }
}
types {
  key: "envoy.service.auth.v2.AttributeContext.HttpRequest.HeadersEntry"
  value {
    qualified_package: "envoy.service.auth.v2"
    proto_path: "envoy/service/auth/v2/attribute_context.proto"
    next_version_type_name: "envoy.service.auth.v3alpha.AttributeContext.HttpRequest.HeadersEntry"
  }
}
types {
  key: "envoy.service.auth.v2.AttributeContext.Peer"
  value {
    qualified_package: "envoy.service.auth.v2"
    proto_path: "envoy/service/auth/v2/attribute_context.proto"
    next_version_type_name: "envoy.service.auth.v3alpha.AttributeContext.Peer"
  }
}
types {
  key: "envoy.service.auth.v2.AttributeContext.Peer.LabelsEntry"
  value {
    qualified_package: "envoy.service.auth.v2"
    proto_path: "envoy/service/auth/v2/attribute_context.proto"
    next_version_type_name: "envoy.service.auth.v3alpha.AttributeContext.Peer.LabelsEntry"
  }
}
types {
  key: "envoy.service.auth.v2.AttributeContext.Request"
  value {
    qualified_package: "envoy.service.auth.v2"
    proto_path: "envoy/service/auth/v2/attribute_context.proto"
    next_version_type_name: "envoy.service.auth.v3alpha.AttributeContext.Request"
  }
}
types {
  key: "envoy.service.auth.v2.CheckRequest"
  value {
    qualified_package: "envoy.service.auth.v2"
    proto_path: "envoy/service/auth/v2/external_auth.proto"
    next_version_type_name: "envoy.service.auth.v3alpha.CheckRequest"
  }
}
types {
  key: "envoy.service.auth.v2.CheckResponse"
  value {
    qualified_package: "envoy.service.auth.v2"
    proto_path: "envoy/service/auth/v2/external_auth.proto"
    next_version_type_name: "envoy.service.auth.v3alpha.CheckResponse"
  }
}
types {
  key: "envoy.service.auth.v2.DeniedHttpResponse"
  value {
    qualified_package: "envoy.service.auth.v2"
    proto_path: "envoy/service/auth/v2/external_auth.proto"
    next_version_type_name: "envoy.service.auth.v3alpha.DeniedHttpResponse"
  }
}
types {
  key: "envoy.service.auth.v2.OkHttpResponse"
  value {
    qualified_package: "envoy.service.auth.v2"
    proto_path: "envoy/service/auth/v2/external_auth.proto"
    next_version_type_name: "envoy.service.auth.v3alpha.OkHttpResponse"
  }
}
types {
  key: "envoy.service.auth.v3alpha.AttributeContext"
  value {
    qualified_package: "envoy.service.auth.v3alpha"
    proto_path: "envoy/service/auth/v3alpha/attribute_context.proto"
  }
}
types {
  key: "envoy.service.auth.v3alpha.AttributeContext.ContextExtensionsEntry"
  value {
    qualified_package: "envoy.service.auth.v3alpha"
    proto_path: "envoy/service/auth/v3alpha/attribute_context.proto"
  }
}
types {
  key: "envoy.service.auth.v3alpha.AttributeContext.HttpRequest"
  value {
    qualified_package: "envoy.service.auth.v3alpha"
    proto_path: "envoy/service/auth/v3alpha/attribute_context.proto"
  }
}
types {
  key: "envoy.service.auth.v3alpha.AttributeContext.HttpRequest.HeadersEntry"
  value {
    qualified_package: "envoy.service.auth.v3alpha"
    proto_path: "envoy/service/auth/v3alpha/attribute_context.proto"
  }
}
types {
  key: "envoy.service.auth.v3alpha.AttributeContext.Peer"
  value {
    qualified_package: "envoy.service.auth.v3alpha"
    proto_path: "envoy/service/auth/v3alpha/attribute_context.proto"
  }
}
types {
  key: "envoy.service.auth.v3alpha.AttributeContext.Peer.LabelsEntry"
  value {
    qualified_package: "envoy.service.auth.v3alpha"
    proto_path: "envoy/service/auth/v3alpha/attribute_context.proto"
  }
}
types {
  key: "envoy.service.auth.v3alpha.AttributeContext.Request"
  value {
    qualified_package: "envoy.service.auth.v3alpha"
    proto_path: "envoy/service/auth/v3alpha/attribute_context.proto"
  }
}
types {
  key: "envoy.service.auth.v3alpha.CheckRequest"
  value {
    qualified_package: "envoy.service.auth.v3alpha"
    proto_path: "envoy/service/auth/v3alpha/external_auth.proto"
  }
}
types {
  key: "envoy.service.auth.v3alpha.CheckResponse"
  value {
    qualified_package: "envoy.service.auth.v3alpha"
    proto_path: "envoy/service/auth/v3alpha/external_auth.proto"
  }
}
types {
  key: "envoy.service.auth.v3alpha.DeniedHttpResponse"
  value {
    qualified_package: "envoy.service.auth.v3alpha"
    proto_path: "envoy/service/auth/v3alpha/external_auth.proto"
  }
}
types {
  key: "envoy.service.auth.v3alpha.OkHttpResponse"
  value {
    qualified_package: "envoy.service.auth.v3alpha"
    proto_path: "envoy/service/auth/v3alpha/external_auth.proto"
  }
}
types {
  key: "envoy.service.discovery.v2.AdsDummy"
  value {
    qualified_package: "envoy.service.discovery.v2"
    proto_path: "envoy/service/discovery/v2/ads.proto"
    next_version_type_name: "envoy.service.discovery.v3alpha.AdsDummy"
  }
}
types {
  key: "envoy.service.discovery.v2.Capability"
  value {
    qualified_package: "envoy.service.discovery.v2"
    proto_path: "envoy/service/discovery/v2/hds.proto"
    next_version_type_name: "envoy.service.discovery.v3alpha.Capability"
  }
}
types {
  key: "envoy.service.discovery.v2.Capability.Protocol"
  value {
    qualified_package: "envoy.service.discovery.v2"
    proto_path: "envoy/service/discovery/v2/hds.proto"
    next_version_type_name: "envoy.service.discovery.v3alpha.Capability.Protocol"
  }
}
types {
  key: "envoy.service.discovery.v2.ClusterHealthCheck"
  value {
    qualified_package: "envoy.service.discovery.v2"
    proto_path: "envoy/service/discovery/v2/hds.proto"
    next_version_type_name: "envoy.service.discovery.v3alpha.ClusterHealthCheck"
  }
}
types {
  key: "envoy.service.discovery.v2.EndpointHealth"
  value {
    qualified_package: "envoy.service.discovery.v2"
    proto_path: "envoy/service/discovery/v2/hds.proto"
    next_version_type_name: "envoy.service.discovery.v3alpha.EndpointHealth"
  }
}
types {
  key: "envoy.service.discovery.v2.EndpointHealthResponse"
  value {
    qualified_package: "envoy.service.discovery.v2"
    proto_path: "envoy/service/discovery/v2/hds.proto"
    next_version_type_name: "envoy.service.discovery.v3alpha.EndpointHealthResponse"
  }
}
types {
  key: "envoy.service.discovery.v2.HealthCheckRequest"
  value {
    qualified_package: "envoy.service.discovery.v2"
    proto_path: "envoy/service/discovery/v2/hds.proto"
    next_version_type_name: "envoy.service.discovery.v3alpha.HealthCheckRequest"
  }
}
types {
  key: "envoy.service.discovery.v2.HealthCheckRequestOrEndpointHealthResponse"
  value {
    qualified_package: "envoy.service.discovery.v2"
    proto_path: "envoy/service/discovery/v2/hds.proto"
    next_version_type_name: "envoy.service.discovery.v3alpha.HealthCheckRequestOrEndpointHealthResponse"
  }
}
types {
  key: "envoy.service.discovery.v2.HealthCheckSpecifier"
  value {
    qualified_package: "envoy.service.discovery.v2"
    proto_path: "envoy/service/discovery/v2/hds.proto"
    next_version_type_name: "envoy.service.discovery.v3alpha.HealthCheckSpecifier"
  }
}
types {
  key: "envoy.service.discovery.v2.LocalityEndpoints"
  value {
    qualified_package: "envoy.service.discovery.v2"
    proto_path: "envoy/service/discovery/v2/hds.proto"
    next_version_type_name: "envoy.service.discovery.v3alpha.LocalityEndpoints"
  }
}
types {
  key: "envoy.service.discovery.v2.RtdsDummy"
  value {
    qualified_package: "envoy.service.discovery.v2"
    proto_path: "envoy/service/discovery/v2/rtds.proto"
    next_version_type_name: "envoy.service.discovery.v3alpha.RtdsDummy"
  }
}
types {
  key: "envoy.service.discovery.v2.Runtime"
  value {
    qualified_package: "envoy.service.discovery.v2"
    proto_path: "envoy/service/discovery/v2/rtds.proto"
    next_version_type_name: "envoy.service.discovery.v3alpha.Runtime"
  }
}
types {
  key: "envoy.service.discovery.v2.SdsDummy"
  value {
    qualified_package: "envoy.service.discovery.v2"
    proto_path: "envoy/service/discovery/v2/sds.proto"
    next_version_type_name: "envoy.service.discovery.v3alpha.SdsDummy"
  }
}
types {
  key: "envoy.service.discovery.v3alpha.AdsDummy"
  value {
    qualified_package: "envoy.service.discovery.v3alpha"
    proto_path: "envoy/service/discovery/v3alpha/ads.proto"
  }
}
types {
  key: "envoy.service.discovery.v3alpha.Capability"
  value {
    qualified_package: "envoy.service.discovery.v3alpha"
    proto_path: "envoy/service/discovery/v3alpha/hds.proto"
  }
}
types {
  key: "envoy.service.discovery.v3alpha.Capability.Protocol"
  value {
    qualified_package: "envoy.service.discovery.v3alpha"
    proto_path: "envoy/service/discovery/v3alpha/hds.proto"
  }
}
types {
  key: "envoy.service.discovery.v3alpha.ClusterHealthCheck"
  value {
    qualified_package: "envoy.service.discovery.v3alpha"
    proto_path: "envoy/service/discovery/v3alpha/hds.proto"
  }
}
types {
  key: "envoy.service.discovery.v3alpha.EndpointHealth"
  value {
    qualified_package: "envoy.service.discovery.v3alpha"
    proto_path: "envoy/service/discovery/v3alpha/hds.proto"
  }
}
types {
  key: "envoy.service.discovery.v3alpha.EndpointHealthResponse"
  value {
    qualified_package: "envoy.service.discovery.v3alpha"
    proto_path: "envoy/service/discovery/v3alpha/hds.proto"
  }
}
types {
  key: "envoy.service.discovery.v3alpha.HealthCheckRequest"
  value {
    qualified_package: "envoy.service.discovery.v3alpha"
    proto_path: "envoy/service/discovery/v3alpha/hds.proto"
  }
}
types {
  key: "envoy.service.discovery.v3alpha.HealthCheckRequestOrEndpointHealthResponse"
  value {
    qualified_package: "envoy.service.discovery.v3alpha"
    proto_path: "envoy/service/discovery/v3alpha/hds.proto"
  }
}
types {
  key: "envoy.service.discovery.v3alpha.HealthCheckSpecifier"
  value {
    qualified_package: "envoy.service.discovery.v3alpha"
    proto_path: "envoy/service/discovery/v3alpha/hds.proto"
  }
}
types {
  key: "envoy.service.discovery.v3alpha.LocalityEndpoints"
  value {
    qualified_package: "envoy.service.discovery.v3alpha"
    proto_path: "envoy/service/discovery/v3alpha/hds.proto"
  }
}
types {
  key: "envoy.service.discovery.v3alpha.RtdsDummy"
  value {
    qualified_package: "envoy.service.discovery.v3alpha"
    proto_path: "envoy/service/discovery/v3alpha/rtds.proto"
  }
}
types {
  key: "envoy.service.discovery.v3alpha.Runtime"
  value {
    qualified_package: "envoy.service.discovery.v3alpha"
    proto_path: "envoy/service/discovery/v3alpha/rtds.proto"
  }
}
types {
  key: "envoy.service.discovery.v3alpha.SdsDummy"
  value {
    qualified_package: "envoy.service.discovery.v3alpha"
    proto_path: "envoy/service/discovery/v3alpha/sds.proto"
  }
}
types {
  key: "envoy.service.load_stats.v2.LoadStatsRequest"
  value {
    qualified_package: "envoy.service.load_stats.v2"
    proto_path: "envoy/service/load_stats/v2/lrs.proto"
    next_version_type_name: "envoy.service.load_stats.v3alpha.LoadStatsRequest"
  }
}
types {
  key: "envoy.service.load_stats.v2.LoadStatsResponse"
  value {
    qualified_package: "envoy.service.load_stats.v2"
    proto_path: "envoy/service/load_stats/v2/lrs.proto"
    next_version_type_name: "envoy.service.load_stats.v3alpha.LoadStatsResponse"
  }
}
types {
  key: "envoy.service.load_stats.v3alpha.LoadStatsRequest"
  value {
    qualified_package: "envoy.service.load_stats.v3alpha"
    proto_path: "envoy/service/load_stats/v3alpha/lrs.proto"
  }
}
types {
  key: "envoy.service.load_stats.v3alpha.LoadStatsResponse"
  value {
    qualified_package: "envoy.service.load_stats.v3alpha"
    proto_path: "envoy/service/load_stats/v3alpha/lrs.proto"
  }
}
types {
  key: "envoy.service.metrics.v2.StreamMetricsMessage"
  value {
    qualified_package: "envoy.service.metrics.v2"
    proto_path: "envoy/service/metrics/v2/metrics_service.proto"
    next_version_type_name: "envoy.service.metrics.v3alpha.StreamMetricsMessage"
  }
}
types {
  key: "envoy.service.metrics.v2.StreamMetricsMessage.Identifier"
  value {
    qualified_package: "envoy.service.metrics.v2"
    proto_path: "envoy/service/metrics/v2/metrics_service.proto"
    next_version_type_name: "envoy.service.metrics.v3alpha.StreamMetricsMessage.Identifier"
  }
}
types {
  key: "envoy.service.metrics.v2.StreamMetricsResponse"
  value {
    qualified_package: "envoy.service.metrics.v2"
    proto_path: "envoy/service/metrics/v2/metrics_service.proto"
    next_version_type_name: "envoy.service.metrics.v3alpha.StreamMetricsResponse"
  }
}
types {
  key: "envoy.service.metrics.v3alpha.StreamMetricsMessage"
  value {
    qualified_package: "envoy.service.metrics.v3alpha"
    proto_path: "envoy/service/metrics/v3alpha/metrics_service.proto"
  }
}
types {
  key: "envoy.service.metrics.v3alpha.StreamMetricsMessage.Identifier"
  value {
    qualified_package: "envoy.service.metrics.v3alpha"
    proto_path: "envoy/service/metrics/v3alpha/metrics_service.proto"
  }
}
types {
  key: "envoy.service.metrics.v3alpha.StreamMetricsResponse"
  value {
    qualified_package: "envoy.service.metrics.v3alpha"
    proto_path: "envoy/service/metrics/v3alpha/metrics_service.proto"
  }
}
types {
  key: "envoy.service.ratelimit.v2.RateLimitRequest"
  value {
    qualified_package: "envoy.service.ratelimit.v2"
    proto_path: "envoy/service/ratelimit/v2/rls.proto"
    next_version_type_name: "envoy.service.ratelimit.v3alpha.RateLimitRequest"
  }
}
types {
  key: "envoy.service.ratelimit.v2.RateLimitResponse"
  value {
    qualified_package: "envoy.service.ratelimit.v2"
    proto_path: "envoy/service/ratelimit/v2/rls.proto"
    next_version_type_name: "envoy.service.ratelimit.v3alpha.RateLimitResponse"
  }
}
types {
  key: "envoy.service.ratelimit.v2.RateLimitResponse.Code"
  value {
    qualified_package: "envoy.service.ratelimit.v2"
    proto_path: "envoy/service/ratelimit/v2/rls.proto"
    next_version_type_name: "envoy.service.ratelimit.v3alpha.RateLimitResponse.Code"
  }
}
types {
  key: "envoy.service.ratelimit.v2.RateLimitResponse.DescriptorStatus"
  value {
    qualified_package: "envoy.service.ratelimit.v2"
    proto_path: "envoy/service/ratelimit/v2/rls.proto"
    next_version_type_name: "envoy.service.ratelimit.v3alpha.RateLimitResponse.DescriptorStatus"
  }
}
types {
  key: "envoy.service.ratelimit.v2.RateLimitResponse.RateLimit"
  value {
    qualified_package: "envoy.service.ratelimit.v2"
    proto_path: "envoy/service/ratelimit/v2/rls.proto"
    next_version_type_name: "envoy.service.ratelimit.v3alpha.RateLimitResponse.RateLimit"
  }
}
types {
  key: "envoy.service.ratelimit.v2.RateLimitResponse.RateLimit.Unit"
  value {
    qualified_package: "envoy.service.ratelimit.v2"
    proto_path: "envoy/service/ratelimit/v2/rls.proto"
    next_version_type_name: "envoy.service.ratelimit.v3alpha.RateLimitResponse.RateLimit.Unit"
  }
}
types {
  key: "envoy.service.ratelimit.v3alpha.RateLimitRequest"
  value {
    qualified_package: "envoy.service.ratelimit.v3alpha"
    proto_path: "envoy/service/ratelimit/v3alpha/rls.proto"
  }
}
types {
  key: "envoy.service.ratelimit.v3alpha.RateLimitResponse"
  value {
    qualified_package: "envoy.service.ratelimit.v3alpha"
    proto_path: "envoy/service/ratelimit/v3alpha/rls.proto"
  }
}
types {
  key: "envoy.service.ratelimit.v3alpha.RateLimitResponse.Code"
  value {
    qualified_package: "envoy.service.ratelimit.v3alpha"
    proto_path: "envoy/service/ratelimit/v3alpha/rls.proto"
  }
}
types {
  key: "envoy.service.ratelimit.v3alpha.RateLimitResponse.DescriptorStatus"
  value {
    qualified_package: "envoy.service.ratelimit.v3alpha"
    proto_path: "envoy/service/ratelimit/v3alpha/rls.proto"
  }
}
types {
  key: "envoy.service.ratelimit.v3alpha.RateLimitResponse.RateLimit"
  value {
    qualified_package: "envoy.service.ratelimit.v3alpha"
    proto_path: "envoy/service/ratelimit/v3alpha/rls.proto"
  }
}
types {
  key: "envoy.service.ratelimit.v3alpha.RateLimitResponse.RateLimit.Unit"
  value {
    qualified_package: "envoy.service.ratelimit.v3alpha"
    proto_path: "envoy/service/ratelimit/v3alpha/rls.proto"
  }
}
types {
  key: "envoy.service.tap.v2alpha.FilePerTapSink"
  value {
    qualified_package: "envoy.service.tap.v2alpha"
    proto_path: "envoy/service/tap/v2alpha/common.proto"
    next_version_type_name: "envoy.service.tap.v3alpha.FilePerTapSink"
  }
}
types {
  key: "envoy.service.tap.v2alpha.HttpHeadersMatch"
  value {
    qualified_package: "envoy.service.tap.v2alpha"
    proto_path: "envoy/service/tap/v2alpha/common.proto"
    next_version_type_name: "envoy.service.tap.v3alpha.HttpHeadersMatch"
  }
}
types {
  key: "envoy.service.tap.v2alpha.MatchPredicate"
  value {
    qualified_package: "envoy.service.tap.v2alpha"
    proto_path: "envoy/service/tap/v2alpha/common.proto"
    next_version_type_name: "envoy.service.tap.v3alpha.MatchPredicate"
  }
}
types {
  key: "envoy.service.tap.v2alpha.MatchPredicate.MatchSet"
  value {
    qualified_package: "envoy.service.tap.v2alpha"
    proto_path: "envoy/service/tap/v2alpha/common.proto"
    next_version_type_name: "envoy.service.tap.v3alpha.MatchPredicate.MatchSet"
  }
}
types {
  key: "envoy.service.tap.v2alpha.OutputConfig"
  value {
    qualified_package: "envoy.service.tap.v2alpha"
    proto_path: "envoy/service/tap/v2alpha/common.proto"
    next_version_type_name: "envoy.service.tap.v3alpha.OutputConfig"
  }
}
types {
  key: "envoy.service.tap.v2alpha.OutputSink"
  value {
    qualified_package: "envoy.service.tap.v2alpha"
    proto_path: "envoy/service/tap/v2alpha/common.proto"
    next_version_type_name: "envoy.service.tap.v3alpha.OutputSink"
  }
}
types {
  key: "envoy.service.tap.v2alpha.OutputSink.Format"
  value {
    qualified_package: "envoy.service.tap.v2alpha"
    proto_path: "envoy/service/tap/v2alpha/common.proto"
    next_version_type_name: "envoy.service.tap.v3alpha.OutputSink.Format"
  }
}
types {
  key: "envoy.service.tap.v2alpha.StreamTapsRequest"
  value {
    qualified_package: "envoy.service.tap.v2alpha"
    proto_path: "envoy/service/tap/v2alpha/tap.proto"
    next_version_type_name: "envoy.service.tap.v3alpha.StreamTapsRequest"
  }
}
types {
  key: "envoy.service.tap.v2alpha.StreamTapsRequest.Identifier"
  value {
    qualified_package: "envoy.service.tap.v2alpha"
    proto_path: "envoy/service/tap/v2alpha/tap.proto"
    next_version_type_name: "envoy.service.tap.v3alpha.StreamTapsRequest.Identifier"
  }
}
types {
  key: "envoy.service.tap.v2alpha.StreamTapsResponse"
  value {
    qualified_package: "envoy.service.tap.v2alpha"
    proto_path: "envoy/service/tap/v2alpha/tap.proto"
    next_version_type_name: "envoy.service.tap.v3alpha.StreamTapsResponse"
  }
}
types {
  key: "envoy.service.tap.v2alpha.StreamingAdminSink"
  value {
    qualified_package: "envoy.service.tap.v2alpha"
    proto_path: "envoy/service/tap/v2alpha/common.proto"
    next_version_type_name: "envoy.service.tap.v3alpha.StreamingAdminSink"
  }
}
types {
  key: "envoy.service.tap.v2alpha.StreamingGrpcSink"
  value {
    qualified_package: "envoy.service.tap.v2alpha"
    proto_path: "envoy/service/tap/v2alpha/common.proto"
    next_version_type_name: "envoy.service.tap.v3alpha.StreamingGrpcSink"
  }
}
types {
  key: "envoy.service.tap.v2alpha.TapConfig"
  value {
    qualified_package: "envoy.service.tap.v2alpha"
    proto_path: "envoy/service/tap/v2alpha/common.proto"
    next_version_type_name: "envoy.service.tap.v3alpha.TapConfig"
  }
}
types {
  key: "envoy.service.tap.v2alpha.TapResource"
  value {
    qualified_package: "envoy.service.tap.v2alpha"
    proto_path: "envoy/service/tap/v2alpha/tapds.proto"
    next_version_type_name: "envoy.service.tap.v3alpha.TapResource"
  }
}
types {
  key: "envoy.service.tap.v3alpha.FilePerTapSink"
  value {
    qualified_package: "envoy.service.tap.v3alpha"
    proto_path: "envoy/service/tap/v3alpha/common.proto"
  }
}
types {
  key: "envoy.service.tap.v3alpha.HttpHeadersMatch"
  value {
    qualified_package: "envoy.service.tap.v3alpha"
    proto_path: "envoy/service/tap/v3alpha/common.proto"
  }
}
types {
  key: "envoy.service.tap.v3alpha.MatchPredicate"
  value {
    qualified_package: "envoy.service.tap.v3alpha"
    proto_path: "envoy/service/tap/v3alpha/common.proto"
  }
}
types {
  key: "envoy.service.tap.v3alpha.MatchPredicate.MatchSet"
  value {
    qualified_package: "envoy.service.tap.v3alpha"
    proto_path: "envoy/service/tap/v3alpha/common.proto"
  }
}
types {
  key: "envoy.service.tap.v3alpha.OutputConfig"
  value {
    qualified_package: "envoy.service.tap.v3alpha"
    proto_path: "envoy/service/tap/v3alpha/common.proto"
  }
}
types {
  key: "envoy.service.tap.v3alpha.OutputSink"
  value {
    qualified_package: "envoy.service.tap.v3alpha"
    proto_path: "envoy/service/tap/v3alpha/common.proto"
  }
}
types {
  key: "envoy.service.tap.v3alpha.OutputSink.Format"
  value {
    qualified_package: "envoy.service.tap.v3alpha"
    proto_path: "envoy/service/tap/v3alpha/common.proto"
  }
}
types {
  key: "envoy.service.tap.v3alpha.StreamTapsRequest"
  value {
    qualified_package: "envoy.service.tap.v3alpha"
    proto_path: "envoy/service/tap/v3alpha/tap.proto"
  }
}
types {
  key: "envoy.service.tap.v3alpha.StreamTapsRequest.Identifier"
  value {
    qualified_package: "envoy.service.tap.v3alpha"
    proto_path: "envoy/service/tap/v3alpha/tap.proto"
  }
}
types {
  key: "envoy.service.tap.v3alpha.StreamTapsResponse"
  value {
    qualified_package: "envoy.service.tap.v3alpha"
    proto_path: "envoy/service/tap/v3alpha/tap.proto"
  }
}
types {
  key: "envoy.service.tap.v3alpha.StreamingAdminSink"
  value {
    qualified_package: "envoy.service.tap.v3alpha"
    proto_path: "envoy/service/tap/v3alpha/common.proto"
  }
}
types {
  key: "envoy.service.tap.v3alpha.StreamingGrpcSink"
  value {
    qualified_package: "envoy.service.tap.v3alpha"
    proto_path: "envoy/service/tap/v3alpha/common.proto"
  }
}
types {
  key: "envoy.service.tap.v3alpha.TapConfig"
  value {
    qualified_package: "envoy.service.tap.v3alpha"
    proto_path: "envoy/service/tap/v3alpha/common.proto"
  }
}
types {
  key: "envoy.service.tap.v3alpha.TapResource"
  value {
    qualified_package: "envoy.service.tap.v3alpha"
    proto_path: "envoy/service/tap/v3alpha/tapds.proto"
  }
}
types {
  key: "envoy.service.trace.v2.StreamTracesMessage"
  value {
    qualified_package: "envoy.service.trace.v2"
    proto_path: "envoy/service/trace/v2/trace_service.proto"
    next_version_type_name: "envoy.service.trace.v3alpha.StreamTracesMessage"
  }
}
types {
  key: "envoy.service.trace.v2.StreamTracesMessage.Identifier"
  value {
    qualified_package: "envoy.service.trace.v2"
    proto_path: "envoy/service/trace/v2/trace_service.proto"
    next_version_type_name: "envoy.service.trace.v3alpha.StreamTracesMessage.Identifier"
  }
}
types {
  key: "envoy.service.trace.v2.StreamTracesResponse"
  value {
    qualified_package: "envoy.service.trace.v2"
    proto_path: "envoy/service/trace/v2/trace_service.proto"
    next_version_type_name: "envoy.service.trace.v3alpha.StreamTracesResponse"
  }
}
types {
  key: "envoy.service.trace.v3alpha.StreamTracesMessage"
  value {
    qualified_package: "envoy.service.trace.v3alpha"
    proto_path: "envoy/service/trace/v3alpha/trace_service.proto"
  }
}
types {
  key: "envoy.service.trace.v3alpha.StreamTracesMessage.Identifier"
  value {
    qualified_package: "envoy.service.trace.v3alpha"
    proto_path: "envoy/service/trace/v3alpha/trace_service.proto"
  }
}
types {
  key: "envoy.service.trace.v3alpha.StreamTracesResponse"
  value {
    qualified_package: "envoy.service.trace.v3alpha"
    proto_path: "envoy/service/trace/v3alpha/trace_service.proto"
  }
}
types {
  key: "envoy.type.CodecClientType"
  value {
    qualified_package: "envoy.type"
    proto_path: "envoy/type/http.proto"
    next_version_type_name: "envoy.type.v3alpha.CodecClientType"
  }
}
types {
  key: "envoy.type.DoubleRange"
  value {
    qualified_package: "envoy.type"
    proto_path: "envoy/type/range.proto"
    next_version_type_name: "envoy.type.v3alpha.DoubleRange"
  }
}
types {
  key: "envoy.type.FractionalPercent"
  value {
    qualified_package: "envoy.type"
    proto_path: "envoy/type/percent.proto"
    next_version_type_name: "envoy.type.v3alpha.FractionalPercent"
  }
}
types {
  key: "envoy.type.FractionalPercent.DenominatorType"
  value {
    qualified_package: "envoy.type"
    proto_path: "envoy/type/percent.proto"
    next_version_type_name: "envoy.type.v3alpha.FractionalPercent.DenominatorType"
  }
}
types {
  key: "envoy.type.HttpStatus"
  value {
    qualified_package: "envoy.type"
    proto_path: "envoy/type/http_status.proto"
    next_version_type_name: "envoy.type.v3alpha.HttpStatus"
  }
}
types {
  key: "envoy.type.Int64Range"
  value {
    qualified_package: "envoy.type"
    proto_path: "envoy/type/range.proto"
    next_version_type_name: "envoy.type.v3alpha.Int64Range"
  }
}
types {
  key: "envoy.type.Percent"
  value {
    qualified_package: "envoy.type"
    proto_path: "envoy/type/percent.proto"
    next_version_type_name: "envoy.type.v3alpha.Percent"
  }
}
types {
  key: "envoy.type.StatusCode"
  value {
    qualified_package: "envoy.type"
    proto_path: "envoy/type/http_status.proto"
    next_version_type_name: "envoy.type.v3alpha.StatusCode"
  }
}
types {
  key: "envoy.type.matcher.DoubleMatcher"
  value {
    qualified_package: "envoy.type.matcher"
    proto_path: "envoy/type/matcher/number.proto"
    next_version_type_name: "envoy.type.matcher.v3alpha.DoubleMatcher"
  }
}
types {
  key: "envoy.type.matcher.ListMatcher"
  value {
    qualified_package: "envoy.type.matcher"
    proto_path: "envoy/type/matcher/value.proto"
    next_version_type_name: "envoy.type.matcher.v3alpha.ListMatcher"
  }
}
types {
  key: "envoy.type.matcher.ListStringMatcher"
  value {
    qualified_package: "envoy.type.matcher"
    proto_path: "envoy/type/matcher/string.proto"
    next_version_type_name: "envoy.type.matcher.v3alpha.ListStringMatcher"
  }
}
types {
  key: "envoy.type.matcher.MetadataMatcher"
  value {
    qualified_package: "envoy.type.matcher"
    proto_path: "envoy/type/matcher/metadata.proto"
    next_version_type_name: "envoy.type.matcher.v3alpha.MetadataMatcher"
  }
}
types {
  key: "envoy.type.matcher.MetadataMatcher.PathSegment"
  value {
    qualified_package: "envoy.type.matcher"
    proto_path: "envoy/type/matcher/metadata.proto"
    next_version_type_name: "envoy.type.matcher.v3alpha.MetadataMatcher.PathSegment"
  }
}
types {
  key: "envoy.type.matcher.RegexMatcher"
  value {
    qualified_package: "envoy.type.matcher"
    proto_path: "envoy/type/matcher/regex.proto"
    next_version_type_name: "envoy.type.matcher.v3alpha.RegexMatcher"
  }
}
types {
  key: "envoy.type.matcher.RegexMatcher.GoogleRE2"
  value {
    qualified_package: "envoy.type.matcher"
    proto_path: "envoy/type/matcher/regex.proto"
    next_version_type_name: "envoy.type.matcher.v3alpha.RegexMatcher.GoogleRE2"
  }
}
types {
  key: "envoy.type.matcher.StringMatcher"
  value {
    qualified_package: "envoy.type.matcher"
    proto_path: "envoy/type/matcher/string.proto"
    next_version_type_name: "envoy.type.matcher.v3alpha.StringMatcher"
  }
}
types {
  key: "envoy.type.matcher.ValueMatcher"
  value {
    qualified_package: "envoy.type.matcher"
    proto_path: "envoy/type/matcher/value.proto"
    next_version_type_name: "envoy.type.matcher.v3alpha.ValueMatcher"
  }
}
types {
  key: "envoy.type.matcher.ValueMatcher.NullMatch"
  value {
    qualified_package: "envoy.type.matcher"
    proto_path: "envoy/type/matcher/value.proto"
    next_version_type_name: "envoy.type.matcher.v3alpha.ValueMatcher.NullMatch"
  }
}
types {
  key: "envoy.type.matcher.v3alpha.DoubleMatcher"
  value {
    qualified_package: "envoy.type.matcher.v3alpha"
    proto_path: "envoy/type/matcher/v3alpha/number.proto"
  }
}
types {
  key: "envoy.type.matcher.v3alpha.ListMatcher"
  value {
    qualified_package: "envoy.type.matcher.v3alpha"
    proto_path: "envoy/type/matcher/v3alpha/value.proto"
  }
}
types {
  key: "envoy.type.matcher.v3alpha.ListStringMatcher"
  value {
    qualified_package: "envoy.type.matcher.v3alpha"
    proto_path: "envoy/type/matcher/v3alpha/string.proto"
  }
}
types {
  key: "envoy.type.matcher.v3alpha.MetadataMatcher"
  value {
    qualified_package: "envoy.type.matcher.v3alpha"
    proto_path: "envoy/type/matcher/v3alpha/metadata.proto"
  }
}
types {
  key: "envoy.type.matcher.v3alpha.MetadataMatcher.PathSegment"
  value {
    qualified_package: "envoy.type.matcher.v3alpha"
    proto_path: "envoy/type/matcher/v3alpha/metadata.proto"
  }
}
types {
  key: "envoy.type.matcher.v3alpha.RegexMatcher"
  value {
    qualified_package: "envoy.type.matcher.v3alpha"
    proto_path: "envoy/type/matcher/v3alpha/regex.proto"
  }
}
types {
  key: "envoy.type.matcher.v3alpha.RegexMatcher.GoogleRE2"
  value {
    qualified_package: "envoy.type.matcher.v3alpha"
    proto_path: "envoy/type/matcher/v3alpha/regex.proto"
  }
}
types {
  key: "envoy.type.matcher.v3alpha.StringMatcher"
  value {
    qualified_package: "envoy.type.matcher.v3alpha"
    proto_path: "envoy/type/matcher/v3alpha/string.proto"
  }
}
types {
  key: "envoy.type.matcher.v3alpha.ValueMatcher"
  value {
    qualified_package: "envoy.type.matcher.v3alpha"
    proto_path: "envoy/type/matcher/v3alpha/value.proto"
  }
}
types {
  key: "envoy.type.matcher.v3alpha.ValueMatcher.NullMatch"
  value {
    qualified_package: "envoy.type.matcher.v3alpha"
    proto_path: "envoy/type/matcher/v3alpha/value.proto"
  }
}
types {
  key: "envoy.type.v3alpha.CodecClientType"
  value {
    qualified_package: "envoy.type.v3alpha"
    proto_path: "envoy/type/v3alpha/http.proto"
  }
}
types {
  key: "envoy.type.v3alpha.DoubleRange"
  value {
    qualified_package: "envoy.type.v3alpha"
    proto_path: "envoy/type/v3alpha/range.proto"
  }
}
types {
  key: "envoy.type.v3alpha.FractionalPercent"
  value {
    qualified_package: "envoy.type.v3alpha"
    proto_path: "envoy/type/v3alpha/percent.proto"
  }
}
types {
  key: "envoy.type.v3alpha.FractionalPercent.DenominatorType"
  value {
    qualified_package: "envoy.type.v3alpha"
    proto_path: "envoy/type/v3alpha/percent.proto"
  }
}
types {
  key: "envoy.type.v3alpha.HttpStatus"
  value {
    qualified_package: "envoy.type.v3alpha"
    proto_path: "envoy/type/v3alpha/http_status.proto"
  }
}
types {
  key: "envoy.type.v3alpha.Int64Range"
  value {
    qualified_package: "envoy.type.v3alpha"
    proto_path: "envoy/type/v3alpha/range.proto"
  }
}
types {
  key: "envoy.type.v3alpha.Percent"
  value {
    qualified_package: "envoy.type.v3alpha"
    proto_path: "envoy/type/v3alpha/percent.proto"
  }
}
types {
  key: "envoy.type.v3alpha.StatusCode"
  value {
    qualified_package: "envoy.type.v3alpha"
    proto_path: "envoy/type/v3alpha/http_status.proto"
  }
}
next_version_packages {
  key: "envoy.admin.v2alpha"
  value: "envoy.admin.v3alpha"
}
next_version_packages {
  key: "envoy.api.v2"
  value: "envoy.api.v3alpha"
}
next_version_packages {
  key: "envoy.api.v2.auth"
  value: "envoy.api.v3alpha.auth"
}
next_version_packages {
  key: "envoy.api.v2.cluster"
  value: "envoy.api.v3alpha.cluster"
}
next_version_packages {
  key: "envoy.api.v2.core"
  value: "envoy.api.v3alpha.core"
}
next_version_packages {
  key: "envoy.api.v2.endpoint"
  value: "envoy.api.v3alpha.endpoint"
}
next_version_packages {
  key: "envoy.api.v2.listener"
  value: "envoy.api.v3alpha.listener"
}
next_version_packages {
  key: "envoy.api.v2.ratelimit"
  value: "envoy.api.v3alpha.ratelimit"
}
next_version_packages {
  key: "envoy.api.v2.route"
  value: "envoy.api.v3alpha.route"
}
next_version_packages {
  key: "envoy.config.accesslog.v2"
  value: "envoy.config.accesslog.v3alpha"
}
next_version_packages {
  key: "envoy.config.bootstrap.v2"
  value: "envoy.config.bootstrap.v3alpha"
}
next_version_packages {
  key: "envoy.config.cluster.dynamic_forward_proxy.v2alpha"
  value: "envoy.config.cluster.dynamic_forward_proxy.v3alpha"
}
next_version_packages {
  key: "envoy.config.common.dynamic_forward_proxy.v2alpha"
  value: "envoy.config.common.dynamic_forward_proxy.v3alpha"
}
next_version_packages {
  key: "envoy.config.common.tap.v2alpha"
  value: "envoy.config.common.tap.v3alpha"
}
next_version_packages {
  key: "envoy.config.filter.accesslog.v2"
  value: "envoy.config.filter.accesslog.v3alpha"
}
next_version_packages {
  key: "envoy.config.filter.fault.v2"
  value: "envoy.config.filter.fault.v3alpha"
}
next_version_packages {
  key: "envoy.config.filter.http.adaptive_concurrency.v2alpha"
  value: "envoy.config.filter.http.adaptive_concurrency.v3alpha"
}
next_version_packages {
  key: "envoy.config.filter.http.csrf.v2"
  value: "envoy.config.filter.http.csrf.v3alpha"
}
next_version_packages {
  key: "envoy.config.filter.http.dynamic_forward_proxy.v2alpha"
  value: "envoy.config.filter.http.dynamic_forward_proxy.v3alpha"
}
next_version_packages {
  key: "envoy.config.filter.http.ext_authz.v2"
  value: "envoy.config.filter.http.ext_authz.v3alpha"
}
next_version_packages {
  key: "envoy.config.filter.http.fault.v2"
  value: "envoy.config.filter.http.fault.v3alpha"
}
next_version_packages {
  key: "envoy.config.filter.http.health_check.v2"
  value: "envoy.config.filter.http.health_check.v3alpha"
}
next_version_packages {
  key: "envoy.config.filter.http.ip_tagging.v2"
  value: "envoy.config.filter.http.ip_tagging.v3alpha"
}
next_version_packages {
  key: "envoy.config.filter.http.jwt_authn.v2alpha"
  value: "envoy.config.filter.http.jwt_authn.v3alpha"
}
next_version_packages {
  key: "envoy.config.filter.http.rate_limit.v2"
  value: "envoy.config.filter.http.rate_limit.v3alpha"
}
next_version_packages {
  key: "envoy.config.filter.http.rbac.v2"
  value: "envoy.config.filter.http.rbac.v3alpha"
}
next_version_packages {
  key: "envoy.config.filter.http.router.v2"
  value: "envoy.config.filter.http.router.v3alpha"
}
next_version_packages {
  key: "envoy.config.filter.http.tap.v2alpha"
  value: "envoy.config.filter.http.tap.v3alpha"
}
next_version_packages {
  key: "envoy.config.filter.network.client_ssl_auth.v2"
  value: "envoy.config.filter.network.client_ssl_auth.v3alpha"
}
next_version_packages {
  key: "envoy.config.filter.network.dubbo_proxy.v2alpha1"
  value: "envoy.config.filter.network.dubbo_proxy.v3alpha"
}
next_version_packages {
  key: "envoy.config.filter.network.ext_authz.v2"
  value: "envoy.config.filter.network.ext_authz.v3alpha"
}
next_version_packages {
  key: "envoy.config.filter.network.http_connection_manager.v2"
  value: "envoy.config.filter.network.http_connection_manager.v3alpha"
}
next_version_packages {
  key: "envoy.config.filter.network.mongo_proxy.v2"
  value: "envoy.config.filter.network.mongo_proxy.v3alpha"
}
next_version_packages {
  key: "envoy.config.filter.network.rate_limit.v2"
  value: "envoy.config.filter.network.rate_limit.v3alpha"
}
next_version_packages {
  key: "envoy.config.filter.network.rbac.v2"
  value: "envoy.config.filter.network.rbac.v3alpha"
}
next_version_packages {
  key: "envoy.config.filter.network.redis_proxy.v2"
  value: "envoy.config.filter.network.redis_proxy.v3alpha"
}
next_version_packages {
  key: "envoy.config.filter.network.tcp_proxy.v2"
  value: "envoy.config.filter.network.tcp_proxy.v3alpha"
}
next_version_packages {
  key: "envoy.config.filter.network.thrift_proxy.v2alpha1"
  value: "envoy.config.filter.network.thrift_proxy.v3alpha"
}
next_version_packages {
  key: "envoy.config.filter.thrift.rate_limit.v2alpha1"
  value: "envoy.config.filter.thrift.rate_limit.v3alpha"
}
next_version_packages {
  key: "envoy.config.grpc_credential.v2alpha"
  value: "envoy.config.grpc_credential.v3alpha"
}
next_version_packages {
  key: "envoy.config.metrics.v2"
  value: "envoy.config.metrics.v3alpha"
}
next_version_packages {
  key: "envoy.config.ratelimit.v2"
  value: "envoy.config.ratelimit.v3alpha"
}
next_version_packages {
  key: "envoy.config.rbac.v2"
  value: "envoy.config.rbac.v3alpha"
}
next_version_packages {
  key: "envoy.config.trace.v2"
  value: "envoy.config.trace.v3alpha"
}
next_version_packages {
  key: "envoy.config.transport_socket.tap.v2alpha"
  value: "envoy.config.transport_socket.tap.v3alpha"
}
next_version_packages {
  key: "envoy.config.wasm.v2"
  value: "envoy.config.wasm.v3alpha"
}
next_version_packages {
  key: "envoy.data.accesslog.v2"
  value: "envoy.data.accesslog.v3alpha"
}
next_version_packages {
  key: "envoy.data.core.v2alpha"
  value: "envoy.data.core.v3alpha"
}
next_version_packages {
  key: "envoy.data.tap.v2alpha"
  value: "envoy.data.tap.v3alpha"
}
next_version_packages {
  key: "envoy.service.accesslog.v2"
  value: "envoy.service.accesslog.v3alpha"
}
next_version_packages {
  key: "envoy.service.auth.v2"
  value: "envoy.service.auth.v3alpha"
}
next_version_packages {
  key: "envoy.service.discovery.v2"
  value: "envoy.service.discovery.v3alpha"
}
next_version_packages {
  key: "envoy.service.load_stats.v2"
  value: "envoy.service.load_stats.v3alpha"
}
next_version_packages {
  key: "envoy.service.metrics.v2"
  value: "envoy.service.metrics.v3alpha"
}
next_version_packages {
  key: "envoy.service.ratelimit.v2"
  value: "envoy.service.ratelimit.v3alpha"
}
next_version_packages {
  key: "envoy.service.tap.v2alpha"
  value: "envoy.service.tap.v3alpha"
}
next_version_packages {
  key: "envoy.service.trace.v2"
  value: "envoy.service.trace.v3alpha"
}
next_version_packages {
  key: "envoy.type"
  value: "envoy.type.v3alpha"
}
next_version_packages {
  key: "envoy.type.matcher"
  value: "envoy.type.matcher.v3alpha"
}
next_version_proto_paths {
  key: "envoy/admin/v2alpha/certs.proto"
  value: "envoy/admin/v3alpha/certs.proto"
}
next_version_proto_paths {
  key: "envoy/admin/v2alpha/clusters.proto"
  value: "envoy/admin/v3alpha/clusters.proto"
}
next_version_proto_paths {
  key: "envoy/admin/v2alpha/config_dump.proto"
  value: "envoy/admin/v3alpha/config_dump.proto"
}
next_version_proto_paths {
  key: "envoy/admin/v2alpha/listeners.proto"
  value: "envoy/admin/v3alpha/listeners.proto"
}
next_version_proto_paths {
  key: "envoy/admin/v2alpha/memory.proto"
  value: "envoy/admin/v3alpha/memory.proto"
}
next_version_proto_paths {
  key: "envoy/admin/v2alpha/metrics.proto"
  value: "envoy/admin/v3alpha/metrics.proto"
}
next_version_proto_paths {
  key: "envoy/admin/v2alpha/mutex_stats.proto"
  value: "envoy/admin/v3alpha/mutex_stats.proto"
}
next_version_proto_paths {
  key: "envoy/admin/v2alpha/server_info.proto"
  value: "envoy/admin/v3alpha/server_info.proto"
}
next_version_proto_paths {
  key: "envoy/admin/v2alpha/tap.proto"
  value: "envoy/admin/v3alpha/tap.proto"
}
next_version_proto_paths {
  key: "envoy/api/v2/auth/cert.proto"
  value: "envoy/api/v3alpha/auth/cert.proto"
}
next_version_proto_paths {
  key: "envoy/api/v2/cds.proto"
  value: "envoy/api/v3alpha/cds.proto"
}
next_version_proto_paths {
  key: "envoy/api/v2/cluster/circuit_breaker.proto"
  value: "envoy/api/v3alpha/cluster/circuit_breaker.proto"
}
next_version_proto_paths {
  key: "envoy/api/v2/cluster/filter.proto"
  value: "envoy/api/v3alpha/cluster/filter.proto"
}
next_version_proto_paths {
  key: "envoy/api/v2/cluster/outlier_detection.proto"
  value: "envoy/api/v3alpha/cluster/outlier_detection.proto"
}
next_version_proto_paths {
  key: "envoy/api/v2/core/address.proto"
  value: "envoy/api/v3alpha/core/address.proto"
}
next_version_proto_paths {
  key: "envoy/api/v2/core/base.proto"
  value: "envoy/api/v3alpha/core/base.proto"
}
next_version_proto_paths {
  key: "envoy/api/v2/core/config_source.proto"
  value: "envoy/api/v3alpha/core/config_source.proto"
}
next_version_proto_paths {
  key: "envoy/api/v2/core/grpc_service.proto"
  value: "envoy/api/v3alpha/core/grpc_service.proto"
}
next_version_proto_paths {
  key: "envoy/api/v2/core/health_check.proto"
  value: "envoy/api/v3alpha/core/health_check.proto"
}
next_version_proto_paths {
  key: "envoy/api/v2/core/http_uri.proto"
  value: "envoy/api/v3alpha/core/http_uri.proto"
}
next_version_proto_paths {
  key: "envoy/api/v2/core/protocol.proto"
  value: "envoy/api/v3alpha/core/protocol.proto"
}
next_version_proto_paths {
  key: "envoy/api/v2/discovery.proto"
  value: "envoy/api/v3alpha/discovery.proto"
}
next_version_proto_paths {
  key: "envoy/api/v2/eds.proto"
  value: "envoy/api/v3alpha/eds.proto"
}
next_version_proto_paths {
  key: "envoy/api/v2/endpoint/endpoint.proto"
  value: "envoy/api/v3alpha/endpoint/endpoint.proto"
}
next_version_proto_paths {
  key: "envoy/api/v2/endpoint/load_report.proto"
  value: "envoy/api/v3alpha/endpoint/load_report.proto"
}
next_version_proto_paths {
  key: "envoy/api/v2/lds.proto"
  value: "envoy/api/v3alpha/lds.proto"
}
next_version_proto_paths {
  key: "envoy/api/v2/listener/listener.proto"
  value: "envoy/api/v3alpha/listener/listener.proto"
}
next_version_proto_paths {
  key: "envoy/api/v2/listener/quic_config.proto"
  value: "envoy/api/v3alpha/listener/quic_config.proto"
}
next_version_proto_paths {
  key: "envoy/api/v2/listener/udp_listener_config.proto"
  value: "envoy/api/v3alpha/listener/udp_listener_config.proto"
}
next_version_proto_paths {
  key: "envoy/api/v2/ratelimit/ratelimit.proto"
  value: "envoy/api/v3alpha/ratelimit/ratelimit.proto"
}
next_version_proto_paths {
  key: "envoy/api/v2/rds.proto"
  value: "envoy/api/v3alpha/rds.proto"
}
next_version_proto_paths {
  key: "envoy/api/v2/route/route.proto"
  value: "envoy/api/v3alpha/route/route.proto"
}
next_version_proto_paths {
  key: "envoy/api/v2/srds.proto"
  value: "envoy/api/v3alpha/srds.proto"
}
next_version_proto_paths {
  key: "envoy/config/accesslog/v2/als.proto"
  value: "envoy/config/accesslog/v3alpha/als.proto"
}
next_version_proto_paths {
  key: "envoy/config/accesslog/v2/file.proto"
  value: "envoy/config/accesslog/v3alpha/file.proto"
}
next_version_proto_paths {
  key: "envoy/config/accesslog/v2/wasm.proto"
  value: "envoy/config/accesslog/v3alpha/wasm.proto"
}
next_version_proto_paths {
  key: "envoy/config/bootstrap/v2/bootstrap.proto"
  value: "envoy/config/bootstrap/v3alpha/bootstrap.proto"
}
next_version_proto_paths {
  key: "envoy/config/cluster/dynamic_forward_proxy/v2alpha/cluster.proto"
  value: "envoy/config/cluster/dynamic_forward_proxy/v3alpha/cluster.proto"
}
next_version_proto_paths {
  key: "envoy/config/common/dynamic_forward_proxy/v2alpha/dns_cache.proto"
  value: "envoy/config/common/dynamic_forward_proxy/v3alpha/dns_cache.proto"
}
next_version_proto_paths {
  key: "envoy/config/common/tap/v2alpha/common.proto"
  value: "envoy/config/common/tap/v3alpha/common.proto"
}
next_version_proto_paths {
  key: "envoy/config/filter/accesslog/v2/accesslog.proto"
  value: "envoy/config/filter/accesslog/v3alpha/accesslog.proto"
}
next_version_proto_paths {
  key: "envoy/config/filter/fault/v2/fault.proto"
  value: "envoy/config/filter/fault/v3alpha/fault.proto"
}
next_version_proto_paths {
  key: "envoy/config/filter/http/adaptive_concurrency/v2alpha/adaptive_concurrency.proto"
  value: "envoy/config/filter/http/adaptive_concurrency/v3alpha/adaptive_concurrency.proto"
}
next_version_proto_paths {
  key: "envoy/config/filter/http/csrf/v2/csrf.proto"
  value: "envoy/config/filter/http/csrf/v3alpha/csrf.proto"
}
next_version_proto_paths {
  key: "envoy/config/filter/http/dynamic_forward_proxy/v2alpha/dynamic_forward_proxy.proto"
  value: "envoy/config/filter/http/dynamic_forward_proxy/v3alpha/dynamic_forward_proxy.proto"
}
next_version_proto_paths {
  key: "envoy/config/filter/http/ext_authz/v2/ext_authz.proto"
  value: "envoy/config/filter/http/ext_authz/v3alpha/ext_authz.proto"
}
next_version_proto_paths {
  key: "envoy/config/filter/http/fault/v2/fault.proto"
  value: "envoy/config/filter/http/fault/v3alpha/fault.proto"
}
next_version_proto_paths {
  key: "envoy/config/filter/http/health_check/v2/health_check.proto"
  value: "envoy/config/filter/http/health_check/v3alpha/health_check.proto"
}
next_version_proto_paths {
  key: "envoy/config/filter/http/ip_tagging/v2/ip_tagging.proto"
  value: "envoy/config/filter/http/ip_tagging/v3alpha/ip_tagging.proto"
}
next_version_proto_paths {
  key: "envoy/config/filter/http/jwt_authn/v2alpha/config.proto"
  value: "envoy/config/filter/http/jwt_authn/v3alpha/config.proto"
}
next_version_proto_paths {
  key: "envoy/config/filter/http/rate_limit/v2/rate_limit.proto"
  value: "envoy/config/filter/http/rate_limit/v3alpha/rate_limit.proto"
}
next_version_proto_paths {
  key: "envoy/config/filter/http/rbac/v2/rbac.proto"
  value: "envoy/config/filter/http/rbac/v3alpha/rbac.proto"
}
next_version_proto_paths {
  key: "envoy/config/filter/http/router/v2/router.proto"
  value: "envoy/config/filter/http/router/v3alpha/router.proto"
}
next_version_proto_paths {
  key: "envoy/config/filter/http/tap/v2alpha/tap.proto"
  value: "envoy/config/filter/http/tap/v3alpha/tap.proto"
}
next_version_proto_paths {
  key: "envoy/config/filter/network/client_ssl_auth/v2/client_ssl_auth.proto"
  value: "envoy/config/filter/network/client_ssl_auth/v3alpha/client_ssl_auth.proto"
}
next_version_proto_paths {
  key: "envoy/config/filter/network/dubbo_proxy/v2alpha1/dubbo_proxy.proto"
  value: "envoy/config/filter/network/dubbo_proxy/v3alpha/dubbo_proxy.proto"
}
next_version_proto_paths {
  key: "envoy/config/filter/network/dubbo_proxy/v2alpha1/route.proto"
  value: "envoy/config/filter/network/dubbo_proxy/v3alpha/route.proto"
}
next_version_proto_paths {
  key: "envoy/config/filter/network/ext_authz/v2/ext_authz.proto"
  value: "envoy/config/filter/network/ext_authz/v3alpha/ext_authz.proto"
}
next_version_proto_paths {
  key: "envoy/config/filter/network/http_connection_manager/v2/http_connection_manager.proto"
  value: "envoy/config/filter/network/http_connection_manager/v3alpha/http_connection_manager.proto"
}
next_version_proto_paths {
  key: "envoy/config/filter/network/mongo_proxy/v2/mongo_proxy.proto"
  value: "envoy/config/filter/network/mongo_proxy/v3alpha/mongo_proxy.proto"
}
next_version_proto_paths {
  key: "envoy/config/filter/network/rate_limit/v2/rate_limit.proto"
  value: "envoy/config/filter/network/rate_limit/v3alpha/rate_limit.proto"
}
next_version_proto_paths {
  key: "envoy/config/filter/network/rbac/v2/rbac.proto"
  value: "envoy/config/filter/network/rbac/v3alpha/rbac.proto"
}
next_version_proto_paths {
  key: "envoy/config/filter/network/redis_proxy/v2/redis_proxy.proto"
  value: "envoy/config/filter/network/redis_proxy/v3alpha/redis_proxy.proto"
}
next_version_proto_paths {
  key: "envoy/config/filter/network/tcp_proxy/v2/tcp_proxy.proto"
  value: "envoy/config/filter/network/tcp_proxy/v3alpha/tcp_proxy.proto"
}
next_version_proto_paths {
  key: "envoy/config/filter/network/thrift_proxy/v2alpha1/route.proto"
  value: "envoy/config/filter/network/thrift_proxy/v3alpha/route.proto"
}
next_version_proto_paths {
  key: "envoy/config/filter/network/thrift_proxy/v2alpha1/thrift_proxy.proto"
  value: "envoy/config/filter/network/thrift_proxy/v3alpha/thrift_proxy.proto"
}
next_version_proto_paths {
  key: "envoy/config/filter/thrift/rate_limit/v2alpha1/rate_limit.proto"
  value: "envoy/config/filter/thrift/rate_limit/v3alpha/rate_limit.proto"
}
next_version_proto_paths {
  key: "envoy/config/grpc_credential/v2alpha/aws_iam.proto"
  value: "envoy/config/grpc_credential/v3alpha/aws_iam.proto"
}
next_version_proto_paths {
  key: "envoy/config/grpc_credential/v2alpha/file_based_metadata.proto"
  value: "envoy/config/grpc_credential/v3alpha/file_based_metadata.proto"
}
next_version_proto_paths {
  key: "envoy/config/metrics/v2/metrics_service.proto"
  value: "envoy/config/metrics/v3alpha/metrics_service.proto"
}
next_version_proto_paths {
  key: "envoy/config/metrics/v2/stats.proto"
  value: "envoy/config/metrics/v3alpha/stats.proto"
}
next_version_proto_paths {
  key: "envoy/config/ratelimit/v2/rls.proto"
  value: "envoy/config/ratelimit/v3alpha/rls.proto"
}
next_version_proto_paths {
  key: "envoy/config/rbac/v2/rbac.proto"
  value: "envoy/config/rbac/v3alpha/rbac.proto"
}
next_version_proto_paths {
  key: "envoy/config/trace/v2/trace.proto"
  value: "envoy/config/trace/v3alpha/trace.proto"
}
next_version_proto_paths {
  key: "envoy/config/transport_socket/tap/v2alpha/tap.proto"
  value: "envoy/config/transport_socket/tap/v3alpha/tap.proto"
}
next_version_proto_paths {
  key: "envoy/config/wasm/v2/wasm.proto"
  value: "envoy/config/wasm/v3alpha/wasm.proto"
}
next_version_proto_paths {
  key: "envoy/data/accesslog/v2/accesslog.proto"
  value: "envoy/data/accesslog/v3alpha/accesslog.proto"
}
next_version_proto_paths {
  key: "envoy/data/core/v2alpha/health_check_event.proto"
  value: "envoy/data/core/v3alpha/health_check_event.proto"
}
next_version_proto_paths {
  key: "envoy/data/tap/v2alpha/common.proto"
  value: "envoy/data/tap/v3alpha/common.proto"
}
next_version_proto_paths {
  key: "envoy/data/tap/v2alpha/http.proto"
  value: "envoy/data/tap/v3alpha/http.proto"
}
next_version_proto_paths {
  key: "envoy/data/tap/v2alpha/transport.proto"
  value: "envoy/data/tap/v3alpha/transport.proto"
}
next_version_proto_paths {
  key: "envoy/data/tap/v2alpha/wrapper.proto"
  value: "envoy/data/tap/v3alpha/wrapper.proto"
}
next_version_proto_paths {
  key: "envoy/service/accesslog/v2/als.proto"
  value: "envoy/service/accesslog/v3alpha/als.proto"
}
next_version_proto_paths {
  key: "envoy/service/auth/v2/attribute_context.proto"
  value: "envoy/service/auth/v3alpha/attribute_context.proto"
}
next_version_proto_paths {
  key: "envoy/service/auth/v2/external_auth.proto"
  value: "envoy/service/auth/v3alpha/external_auth.proto"
}
next_version_proto_paths {
  key: "envoy/service/discovery/v2/ads.proto"
  value: "envoy/service/discovery/v3alpha/ads.proto"
}
next_version_proto_paths {
  key: "envoy/service/discovery/v2/hds.proto"
  value: "envoy/service/discovery/v3alpha/hds.proto"
}
next_version_proto_paths {
  key: "envoy/service/discovery/v2/rtds.proto"
  value: "envoy/service/discovery/v3alpha/rtds.proto"
}
next_version_proto_paths {
  key: "envoy/service/discovery/v2/sds.proto"
  value: "envoy/service/discovery/v3alpha/sds.proto"
}
next_version_proto_paths {
  key: "envoy/service/load_stats/v2/lrs.proto"
  value: "envoy/service/load_stats/v3alpha/lrs.proto"
}
next_version_proto_paths {
  key: "envoy/service/metrics/v2/metrics_service.proto"
  value: "envoy/service/metrics/v3alpha/metrics_service.proto"
}
next_version_proto_paths {
  key: "envoy/service/ratelimit/v2/rls.proto"
  value: "envoy/service/ratelimit/v3alpha/rls.proto"
}
next_version_proto_paths {
  key: "envoy/service/tap/v2alpha/common.proto"
  value: "envoy/service/tap/v3alpha/common.proto"
}
next_version_proto_paths {
  key: "envoy/service/tap/v2alpha/tap.proto"
  value: "envoy/service/tap/v3alpha/tap.proto"
}
next_version_proto_paths {
  key: "envoy/service/tap/v2alpha/tapds.proto"
  value: "envoy/service/tap/v3alpha/tapds.proto"
}
next_version_proto_paths {
  key: "envoy/service/trace/v2/trace_service.proto"
  value: "envoy/service/trace/v3alpha/trace_service.proto"
}
next_version_proto_paths {
  key: "envoy/type/http.proto"
  value: "envoy/type/v3alpha/http.proto"
}
next_version_proto_paths {
  key: "envoy/type/http_status.proto"
  value: "envoy/type/v3alpha/http_status.proto"
}
next_version_proto_paths {
  key: "envoy/type/matcher/metadata.proto"
  value: "envoy/type/matcher/v3alpha/metadata.proto"
}
next_version_proto_paths {
  key: "envoy/type/matcher/number.proto"
  value: "envoy/type/matcher/v3alpha/number.proto"
}
next_version_proto_paths {
  key: "envoy/type/matcher/regex.proto"
  value: "envoy/type/matcher/v3alpha/regex.proto"
}
next_version_proto_paths {
  key: "envoy/type/matcher/string.proto"
  value: "envoy/type/matcher/v3alpha/string.proto"
}
next_version_proto_paths {
  key: "envoy/type/matcher/value.proto"
  value: "envoy/type/matcher/v3alpha/value.proto"
}
next_version_proto_paths {
  key: "envoy/type/percent.proto"
  value: "envoy/type/v3alpha/percent.proto"
}
next_version_proto_paths {
  key: "envoy/type/range.proto"
  value: "envoy/type/v3alpha/range.proto"
}
