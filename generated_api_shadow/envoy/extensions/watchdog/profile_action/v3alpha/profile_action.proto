syntax = "proto3";

package envoy.extensions.watchdog.profile_action.v3alpha;

import "google/protobuf/duration.proto";

import "udpa/annotations/status.proto";
import "udpa/annotations/versioning.proto";
import "validate/validate.proto";

option java_package = "io.envoyproxy.envoy.extensions.watchdog.profile_action.v3alpha";
option java_outer_classname = "ProfileActionProto";
option java_multiple_files = true;
option (udpa.annotations.file_status).work_in_progress = true;
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: Watchdog Action that does CPU profiling.]
// [#extension: envoy.watchdog.profile_action]

// Configuration for the profile watchdog action.
message ProfileActionConfig {
  // How long the profile should last. If not set defaults to 5 seconds.
  google.protobuf.Duration profile_duration = 1;

  // File path to the directory to output profiles.
  string profile_path = 2 [(validate.rules).string = {min_bytes: 1}];

  // Limits the max number of profiles that can be generated by a thread over
  // its lifetime to avoid filling the disk. We keep a map of <tid, count>
  // to track the number of profiles triggered by a particular thread. Only one
  // thread is counted as triggering the profile even though multiple threads
  // might have been eligible for triggering the profile.
  // If not set (i.e. it's 0), a default of 10 will be used.
  uint64 max_profiles_per_thread = 3;
}
